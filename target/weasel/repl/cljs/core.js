// Compiled by ClojureScript 0.0-2814 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2814";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__9385__delegate = function (args){
return console.log.apply(console,(function (){var G__9384 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__9384) : cljs.core.into_array.call(null,G__9384));
})());
};
var G__9385 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9386__i = 0, G__9386__a = new Array(arguments.length -  0);
while (G__9386__i < G__9386__a.length) {G__9386__a[G__9386__i] = arguments[G__9386__i + 0]; ++G__9386__i;}
  args = new cljs.core.IndexedSeq(G__9386__a,0);
} 
return G__9385__delegate.call(this,args);};
G__9385.cljs$lang$maxFixedArity = 0;
G__9385.cljs$lang$applyTo = (function (arglist__9387){
var args = cljs.core.seq(arglist__9387);
return G__9385__delegate(args);
});
G__9385.cljs$core$IFn$_invoke$arity$variadic = G__9385__delegate;
return G__9385;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__9389 = x;
return goog.isString(G__9389);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__9391 = x__$1;
return goog.typeOf(G__9391);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__7645__auto__ = ty;
if(cljs.core.truth_(and__7645__auto__)){
return ty.cljs$lang$type;
} else {
return and__7645__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__9393 = obj;
return goog.typeOf(G__9393);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__9395 = Symbol;
return goog.typeOf(G__9395);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__8544__auto___9397 = len;
var i_9398 = (0);
while(true){
if((i_9398 < n__8544__auto___9397)){
(new_arr[i_9398] = (arr[i_9398]));

var G__9399 = (i_9398 + (1));
i_9398 = G__9399;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__9400 = (i + (1));
i = G__9400;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__9409__delegate = function (array,i,idxs){
var G__9406 = aget;
var G__9407 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__9408 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__9406,G__9407,G__9408) : cljs.core.apply.call(null,G__9406,G__9407,G__9408));
};
var G__9409 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__9410__i = 0, G__9410__a = new Array(arguments.length -  2);
while (G__9410__i < G__9410__a.length) {G__9410__a[G__9410__i] = arguments[G__9410__i + 2]; ++G__9410__i;}
  idxs = new cljs.core.IndexedSeq(G__9410__a,0);
} 
return G__9409__delegate.call(this,array,i,idxs);};
G__9409.cljs$lang$maxFixedArity = 2;
G__9409.cljs$lang$applyTo = (function (arglist__9411){
var array = cljs.core.first(arglist__9411);
arglist__9411 = cljs.core.next(arglist__9411);
var i = cljs.core.first(arglist__9411);
var idxs = cljs.core.rest(arglist__9411);
return G__9409__delegate(array,i,idxs);
});
G__9409.cljs$core$IFn$_invoke$arity$variadic = G__9409__delegate;
return G__9409;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__9412 = null;
if (arguments.length > 2) {
var G__9413__i = 0, G__9413__a = new Array(arguments.length -  2);
while (G__9413__i < G__9413__a.length) {G__9413__a[G__9413__i] = arguments[G__9413__i + 2]; ++G__9413__i;}
G__9412 = new cljs.core.IndexedSeq(G__9413__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__9412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__9422__delegate = function (array,idx,idx2,idxv){
var G__9418 = aset;
var G__9419 = (array[idx]);
var G__9420 = idx2;
var G__9421 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__9418,G__9419,G__9420,G__9421) : cljs.core.apply.call(null,G__9418,G__9419,G__9420,G__9421));
};
var G__9422 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__9423__i = 0, G__9423__a = new Array(arguments.length -  3);
while (G__9423__i < G__9423__a.length) {G__9423__a[G__9423__i] = arguments[G__9423__i + 3]; ++G__9423__i;}
  idxv = new cljs.core.IndexedSeq(G__9423__a,0);
} 
return G__9422__delegate.call(this,array,idx,idx2,idxv);};
G__9422.cljs$lang$maxFixedArity = 3;
G__9422.cljs$lang$applyTo = (function (arglist__9424){
var array = cljs.core.first(arglist__9424);
arglist__9424 = cljs.core.next(arglist__9424);
var idx = cljs.core.first(arglist__9424);
arglist__9424 = cljs.core.next(arglist__9424);
var idx2 = cljs.core.first(arglist__9424);
var idxv = cljs.core.rest(arglist__9424);
return G__9422__delegate(array,idx,idx2,idxv);
});
G__9422.cljs$core$IFn$_invoke$arity$variadic = G__9422__delegate;
return G__9422;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__9425 = null;
if (arguments.length > 3) {
var G__9426__i = 0, G__9426__a = new Array(arguments.length -  3);
while (G__9426__i < G__9426__a.length) {G__9426__a[G__9426__i] = arguments[G__9426__i + 3]; ++G__9426__i;}
G__9425 = new cljs.core.IndexedSeq(G__9426__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__9425);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__9432 = (function (a,x){
a.push(x);

return a;
});
var G__9433 = [];
var G__9434 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__9432,G__9433,G__9434) : cljs.core.reduce.call(null,G__9432,G__9433,G__9434));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__9435__i = 0, G__9435__a = new Array(arguments.length -  2);
while (G__9435__i < G__9435__a.length) {G__9435__a[G__9435__i] = arguments[G__9435__i + 2]; ++G__9435__i;}
  args = new cljs.core.IndexedSeq(G__9435__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__9436){
var obj = cljs.core.first(arglist__9436);
arglist__9436 = cljs.core.next(arglist__9436);
var s = cljs.core.first(arglist__9436);
var args = cljs.core.rest(arglist__9436);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj9438 = {};
return obj9438;
})();


cljs.core.IFn = (function (){var obj9440 = {};
return obj9440;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9486 = x__8301__auto__;
return goog.typeOf(G__9486);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9488 = x__8301__auto__;
return goog.typeOf(G__9488);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9490 = x__8301__auto__;
return goog.typeOf(G__9490);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9492 = x__8301__auto__;
return goog.typeOf(G__9492);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9494 = x__8301__auto__;
return goog.typeOf(G__9494);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9496 = x__8301__auto__;
return goog.typeOf(G__9496);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9498 = x__8301__auto__;
return goog.typeOf(G__9498);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9500 = x__8301__auto__;
return goog.typeOf(G__9500);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9502 = x__8301__auto__;
return goog.typeOf(G__9502);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9504 = x__8301__auto__;
return goog.typeOf(G__9504);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9506 = x__8301__auto__;
return goog.typeOf(G__9506);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9508 = x__8301__auto__;
return goog.typeOf(G__9508);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9510 = x__8301__auto__;
return goog.typeOf(G__9510);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9512 = x__8301__auto__;
return goog.typeOf(G__9512);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9514 = x__8301__auto__;
return goog.typeOf(G__9514);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9516 = x__8301__auto__;
return goog.typeOf(G__9516);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9518 = x__8301__auto__;
return goog.typeOf(G__9518);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9520 = x__8301__auto__;
return goog.typeOf(G__9520);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9522 = x__8301__auto__;
return goog.typeOf(G__9522);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9524 = x__8301__auto__;
return goog.typeOf(G__9524);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9526 = x__8301__auto__;
return goog.typeOf(G__9526);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._invoke[(function (){var G__9528 = x__8301__auto__;
return goog.typeOf(G__9528);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._invoke["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj9530 = {};
return obj9530;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__7645__auto__ = value;
if(and__7645__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__7645__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__8301__auto__ = (((value == null))?null:value);
return (function (){var or__7657__auto__ = (cljs.core._clone[(function (){var G__9534 = x__8301__auto__;
return goog.typeOf(G__9534);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._clone["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj9536 = {};
return obj9536;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._count[(function (){var G__9540 = x__8301__auto__;
return goog.typeOf(G__9540);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._count["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj9542 = {};
return obj9542;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._empty[(function (){var G__9546 = x__8301__auto__;
return goog.typeOf(G__9546);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._empty["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj9548 = {};
return obj9548;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._conj[(function (){var G__9552 = x__8301__auto__;
return goog.typeOf(G__9552);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._conj["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj9554 = {};
return obj9554;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._nth[(function (){var G__9560 = x__8301__auto__;
return goog.typeOf(G__9560);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._nth["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._nth[(function (){var G__9562 = x__8301__auto__;
return goog.typeOf(G__9562);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._nth["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj9564 = {};
return obj9564;
})();


cljs.core.ISeq = (function (){var obj9566 = {};
return obj9566;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._first[(function (){var G__9570 = x__8301__auto__;
return goog.typeOf(G__9570);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._first["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._rest[(function (){var G__9574 = x__8301__auto__;
return goog.typeOf(G__9574);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._rest["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj9576 = {};
return obj9576;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._next[(function (){var G__9580 = x__8301__auto__;
return goog.typeOf(G__9580);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._next["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj9582 = {};
return obj9582;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._lookup[(function (){var G__9588 = x__8301__auto__;
return goog.typeOf(G__9588);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._lookup["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._lookup[(function (){var G__9590 = x__8301__auto__;
return goog.typeOf(G__9590);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._lookup["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj9592 = {};
return obj9592;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__9596 = x__8301__auto__;
return goog.typeOf(G__9596);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._assoc[(function (){var G__9600 = x__8301__auto__;
return goog.typeOf(G__9600);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._assoc["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj9602 = {};
return obj9602;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._dissoc[(function (){var G__9606 = x__8301__auto__;
return goog.typeOf(G__9606);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._dissoc["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj9608 = {};
return obj9608;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._key[(function (){var G__9612 = x__8301__auto__;
return goog.typeOf(G__9612);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._key["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._val[(function (){var G__9616 = x__8301__auto__;
return goog.typeOf(G__9616);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._val["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj9618 = {};
return obj9618;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._disjoin[(function (){var G__9622 = x__8301__auto__;
return goog.typeOf(G__9622);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._disjoin["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj9624 = {};
return obj9624;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._peek[(function (){var G__9628 = x__8301__auto__;
return goog.typeOf(G__9628);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._peek["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._pop[(function (){var G__9632 = x__8301__auto__;
return goog.typeOf(G__9632);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._pop["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj9634 = {};
return obj9634;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._assoc_n[(function (){var G__9638 = x__8301__auto__;
return goog.typeOf(G__9638);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj9640 = {};
return obj9640;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._deref[(function (){var G__9644 = x__8301__auto__;
return goog.typeOf(G__9644);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._deref["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj9646 = {};
return obj9646;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._deref_with_timeout[(function (){var G__9650 = x__8301__auto__;
return goog.typeOf(G__9650);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj9652 = {};
return obj9652;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._meta[(function (){var G__9656 = x__8301__auto__;
return goog.typeOf(G__9656);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._meta["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj9658 = {};
return obj9658;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._with_meta[(function (){var G__9662 = x__8301__auto__;
return goog.typeOf(G__9662);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._with_meta["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj9664 = {};
return obj9664;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._reduce[(function (){var G__9670 = x__8301__auto__;
return goog.typeOf(G__9670);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._reduce["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._reduce[(function (){var G__9672 = x__8301__auto__;
return goog.typeOf(G__9672);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._reduce["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj9674 = {};
return obj9674;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._kv_reduce[(function (){var G__9678 = x__8301__auto__;
return goog.typeOf(G__9678);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj9680 = {};
return obj9680;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._equiv[(function (){var G__9684 = x__8301__auto__;
return goog.typeOf(G__9684);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._equiv["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj9686 = {};
return obj9686;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._hash[(function (){var G__9690 = x__8301__auto__;
return goog.typeOf(G__9690);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._hash["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj9692 = {};
return obj9692;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._seq[(function (){var G__9696 = x__8301__auto__;
return goog.typeOf(G__9696);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._seq["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj9698 = {};
return obj9698;
})();


cljs.core.IList = (function (){var obj9700 = {};
return obj9700;
})();


cljs.core.IRecord = (function (){var obj9702 = {};
return obj9702;
})();


cljs.core.IReversible = (function (){var obj9704 = {};
return obj9704;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._rseq[(function (){var G__9708 = x__8301__auto__;
return goog.typeOf(G__9708);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._rseq["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj9710 = {};
return obj9710;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._sorted_seq[(function (){var G__9714 = x__8301__auto__;
return goog.typeOf(G__9714);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._sorted_seq_from[(function (){var G__9718 = x__8301__auto__;
return goog.typeOf(G__9718);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._entry_key[(function (){var G__9722 = x__8301__auto__;
return goog.typeOf(G__9722);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._entry_key["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._comparator[(function (){var G__9726 = x__8301__auto__;
return goog.typeOf(G__9726);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._comparator["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj9728 = {};
return obj9728;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__7645__auto__ = writer;
if(and__7645__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__7645__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__8301__auto__ = (((writer == null))?null:writer);
return (function (){var or__7657__auto__ = (cljs.core._write[(function (){var G__9732 = x__8301__auto__;
return goog.typeOf(G__9732);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._write["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__7645__auto__ = writer;
if(and__7645__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__7645__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__8301__auto__ = (((writer == null))?null:writer);
return (function (){var or__7657__auto__ = (cljs.core._flush[(function (){var G__9736 = x__8301__auto__;
return goog.typeOf(G__9736);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._flush["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj9738 = {};
return obj9738;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._pr_writer[(function (){var G__9742 = x__8301__auto__;
return goog.typeOf(G__9742);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj9744 = {};
return obj9744;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__7645__auto__ = d;
if(and__7645__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__7645__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__8301__auto__ = (((d == null))?null:d);
return (function (){var or__7657__auto__ = (cljs.core._realized_QMARK_[(function (){var G__9748 = x__8301__auto__;
return goog.typeOf(G__9748);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj9750 = {};
return obj9750;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._notify_watches[(function (){var G__9754 = x__8301__auto__;
return goog.typeOf(G__9754);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._add_watch[(function (){var G__9758 = x__8301__auto__;
return goog.typeOf(G__9758);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._add_watch["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__7645__auto__ = this$;
if(and__7645__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__7645__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__8301__auto__ = (((this$ == null))?null:this$);
return (function (){var or__7657__auto__ = (cljs.core._remove_watch[(function (){var G__9762 = x__8301__auto__;
return goog.typeOf(G__9762);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj9764 = {};
return obj9764;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._as_transient[(function (){var G__9768 = x__8301__auto__;
return goog.typeOf(G__9768);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._as_transient["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj9770 = {};
return obj9770;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__7645__auto__ = tcoll;
if(and__7645__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__7645__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__8301__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7657__auto__ = (cljs.core._conj_BANG_[(function (){var G__9774 = x__8301__auto__;
return goog.typeOf(G__9774);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__7645__auto__ = tcoll;
if(and__7645__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__7645__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__8301__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7657__auto__ = (cljs.core._persistent_BANG_[(function (){var G__9778 = x__8301__auto__;
return goog.typeOf(G__9778);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj9780 = {};
return obj9780;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__7645__auto__ = tcoll;
if(and__7645__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__7645__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__8301__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7657__auto__ = (cljs.core._assoc_BANG_[(function (){var G__9784 = x__8301__auto__;
return goog.typeOf(G__9784);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj9786 = {};
return obj9786;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__7645__auto__ = tcoll;
if(and__7645__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__7645__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__8301__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7657__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__9790 = x__8301__auto__;
return goog.typeOf(G__9790);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj9792 = {};
return obj9792;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__7645__auto__ = tcoll;
if(and__7645__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__7645__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__8301__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7657__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__9796 = x__8301__auto__;
return goog.typeOf(G__9796);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__7645__auto__ = tcoll;
if(and__7645__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__7645__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__8301__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7657__auto__ = (cljs.core._pop_BANG_[(function (){var G__9800 = x__8301__auto__;
return goog.typeOf(G__9800);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj9802 = {};
return obj9802;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__7645__auto__ = tcoll;
if(and__7645__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__7645__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__8301__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__7657__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__9806 = x__8301__auto__;
return goog.typeOf(G__9806);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj9808 = {};
return obj9808;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__7645__auto__ = x;
if(and__7645__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__7645__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__8301__auto__ = (((x == null))?null:x);
return (function (){var or__7657__auto__ = (cljs.core._compare[(function (){var G__9812 = x__8301__auto__;
return goog.typeOf(G__9812);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._compare["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj9814 = {};
return obj9814;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._drop_first[(function (){var G__9818 = x__8301__auto__;
return goog.typeOf(G__9818);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._drop_first["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj9820 = {};
return obj9820;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._chunked_first[(function (){var G__9824 = x__8301__auto__;
return goog.typeOf(G__9824);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._chunked_rest[(function (){var G__9828 = x__8301__auto__;
return goog.typeOf(G__9828);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj9830 = {};
return obj9830;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._chunked_next[(function (){var G__9834 = x__8301__auto__;
return goog.typeOf(G__9834);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj9836 = {};
return obj9836;
})();

cljs.core._name = (function _name(x){
if((function (){var and__7645__auto__ = x;
if(and__7645__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__7645__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__8301__auto__ = (((x == null))?null:x);
return (function (){var or__7657__auto__ = (cljs.core._name[(function (){var G__9840 = x__8301__auto__;
return goog.typeOf(G__9840);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._name["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__7645__auto__ = x;
if(and__7645__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__7645__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__8301__auto__ = (((x == null))?null:x);
return (function (){var or__7657__auto__ = (cljs.core._namespace[(function (){var G__9844 = x__8301__auto__;
return goog.typeOf(G__9844);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._namespace["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj9846 = {};
return obj9846;
})();


cljs.core.IReset = (function (){var obj9848 = {};
return obj9848;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._reset_BANG_[(function (){var G__9852 = x__8301__auto__;
return goog.typeOf(G__9852);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj9854 = {};
return obj9854;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._swap_BANG_[(function (){var G__9864 = x__8301__auto__;
return goog.typeOf(G__9864);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._swap_BANG_[(function (){var G__9866 = x__8301__auto__;
return goog.typeOf(G__9866);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._swap_BANG_[(function (){var G__9868 = x__8301__auto__;
return goog.typeOf(G__9868);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._swap_BANG_[(function (){var G__9870 = x__8301__auto__;
return goog.typeOf(G__9870);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj9872 = {};
return obj9872;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__7645__auto__ = o;
if(and__7645__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__7645__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__8301__auto__ = (((o == null))?null:o);
return (function (){var or__7657__auto__ = (cljs.core._vreset_BANG_[(function (){var G__9876 = x__8301__auto__;
return goog.typeOf(G__9876);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj9878 = {};
return obj9878;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__7645__auto__ = coll;
if(and__7645__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__7645__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__8301__auto__ = (((coll == null))?null:coll);
return (function (){var or__7657__auto__ = (cljs.core._iterator[(function (){var G__9882 = x__8301__auto__;
return goog.typeOf(G__9882);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._iterator["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__9885 = (4294967295);
var G__9886 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__9885,G__9886) : Math.imul.call(null,G__9885,G__9886));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__9889 = a;
var G__9890 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__9889,G__9890) : Math.imul.call(null,G__9889,G__9890));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__9891 = (i + (2));
var G__9892 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__9891;
h1 = G__9892;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj9894 = {};
return obj9894;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__9895 = (i + (1));
var G__9896 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__9895;
hash = G__9896;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj9900 = {};
return obj9900;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__9903 = o;
if(G__9903){
var bit__8331__auto__ = (G__9903.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__8331__auto__) || (G__9903.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__9904 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__9904) : Math.floor.call(null,G__9904));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__7645__auto__ = cljs.core.not(a.ns);
if(and__7645__auto__){
return b.ns;
} else {
return and__7645__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__9911 = a.ns;
var G__9912 = b.ns;
return goog.array.defaultCompare(G__9911,G__9912);
})();
if(((0) === nsc)){
var G__9913 = a.name;
var G__9914 = b.name;
return goog.array.defaultCompare(G__9913,G__9914);
} else {
return nsc;
}
}
} else {
var G__9915 = a.name;
var G__9916 = b.name;
return goog.array.defaultCompare(G__9915,G__9916);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__8078__auto__ = self__._hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__9918 = null;
var G__9918__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__9918__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__9918 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__9918__2.call(this,self__,coll);
case 3:
return G__9918__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9918.cljs$core$IFn$_invoke$arity$2 = G__9918__2;
G__9918.cljs$core$IFn$_invoke$arity$3 = G__9918__3;
return G__9918;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args9917){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9917)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__9966 = null;
var G__9966__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__9966__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__9966__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__9966__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__9966__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__9966__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__9966__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__9966__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__9966__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__9966__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__9966__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__9966__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__9966__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__9966__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__9966__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__9966__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__9966__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__9966__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__9966__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__9966__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__9966__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__9966__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__9922 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__9923 = a;
var G__9924 = b;
var G__9925 = c;
var G__9926 = d;
var G__9927 = e;
var G__9928 = f;
var G__9929 = g;
var G__9930 = h;
var G__9931 = i;
var G__9932 = j;
var G__9933 = k;
var G__9934 = l;
var G__9935 = m;
var G__9936 = n;
var G__9937 = o;
var G__9938 = p;
var G__9939 = q;
var G__9940 = r;
var G__9941 = s;
var G__9942 = t;
var G__9943 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__9922,G__9923,G__9924,G__9925,G__9926,G__9927,G__9928,G__9929,G__9930,G__9931,G__9932,G__9933,G__9934,G__9935,G__9936,G__9937,G__9938,G__9939,G__9940,G__9941,G__9942,G__9943) : cljs.core.apply.call(null,G__9922,G__9923,G__9924,G__9925,G__9926,G__9927,G__9928,G__9929,G__9930,G__9931,G__9932,G__9933,G__9934,G__9935,G__9936,G__9937,G__9938,G__9939,G__9940,G__9941,G__9942,G__9943));
});
G__9966 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__9966__1.call(this,self__);
case 2:
return G__9966__2.call(this,self__,a);
case 3:
return G__9966__3.call(this,self__,a,b);
case 4:
return G__9966__4.call(this,self__,a,b,c);
case 5:
return G__9966__5.call(this,self__,a,b,c,d);
case 6:
return G__9966__6.call(this,self__,a,b,c,d,e);
case 7:
return G__9966__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__9966__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__9966__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__9966__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__9966__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__9966__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__9966__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__9966__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__9966__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__9966__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__9966__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__9966__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__9966__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__9966__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__9966__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__9966__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9966.cljs$core$IFn$_invoke$arity$1 = G__9966__1;
G__9966.cljs$core$IFn$_invoke$arity$2 = G__9966__2;
G__9966.cljs$core$IFn$_invoke$arity$3 = G__9966__3;
G__9966.cljs$core$IFn$_invoke$arity$4 = G__9966__4;
G__9966.cljs$core$IFn$_invoke$arity$5 = G__9966__5;
G__9966.cljs$core$IFn$_invoke$arity$6 = G__9966__6;
G__9966.cljs$core$IFn$_invoke$arity$7 = G__9966__7;
G__9966.cljs$core$IFn$_invoke$arity$8 = G__9966__8;
G__9966.cljs$core$IFn$_invoke$arity$9 = G__9966__9;
G__9966.cljs$core$IFn$_invoke$arity$10 = G__9966__10;
G__9966.cljs$core$IFn$_invoke$arity$11 = G__9966__11;
G__9966.cljs$core$IFn$_invoke$arity$12 = G__9966__12;
G__9966.cljs$core$IFn$_invoke$arity$13 = G__9966__13;
G__9966.cljs$core$IFn$_invoke$arity$14 = G__9966__14;
G__9966.cljs$core$IFn$_invoke$arity$15 = G__9966__15;
G__9966.cljs$core$IFn$_invoke$arity$16 = G__9966__16;
G__9966.cljs$core$IFn$_invoke$arity$17 = G__9966__17;
G__9966.cljs$core$IFn$_invoke$arity$18 = G__9966__18;
G__9966.cljs$core$IFn$_invoke$arity$19 = G__9966__19;
G__9966.cljs$core$IFn$_invoke$arity$20 = G__9966__20;
G__9966.cljs$core$IFn$_invoke$arity$21 = G__9966__21;
G__9966.cljs$core$IFn$_invoke$arity$22 = G__9966__22;
return G__9966;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args9921){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9921)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__9944 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__9945 = a;
var G__9946 = b;
var G__9947 = c;
var G__9948 = d;
var G__9949 = e;
var G__9950 = f;
var G__9951 = g;
var G__9952 = h;
var G__9953 = i;
var G__9954 = j;
var G__9955 = k;
var G__9956 = l;
var G__9957 = m;
var G__9958 = n;
var G__9959 = o;
var G__9960 = p;
var G__9961 = q;
var G__9962 = r;
var G__9963 = s;
var G__9964 = t;
var G__9965 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__9944,G__9945,G__9946,G__9947,G__9948,G__9949,G__9950,G__9951,G__9952,G__9953,G__9954,G__9955,G__9956,G__9957,G__9958,G__9959,G__9960,G__9961,G__9962,G__9963,G__9964,G__9965) : cljs.core.apply.call(null,G__9944,G__9945,G__9946,G__9947,G__9948,G__9949,G__9950,G__9951,G__9952,G__9953,G__9954,G__9955,G__9956,G__9957,G__9958,G__9959,G__9960,G__9961,G__9962,G__9963,G__9964,G__9965));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__9968 = x;
if(G__9968){
var bit__8338__auto__ = null;
if(cljs.core.truth_((function (){var or__7657__auto__ = bit__8338__auto__;
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return G__9968.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__9968.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__9968);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__9968);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__9970 = value;
if(G__9970){
var bit__8338__auto__ = (G__9970.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__8338__auto__) || (G__9970.cljs$core$ICloneable$)){
return true;
} else {
if((!G__9970.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__9970);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__9970);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__9972 = coll;
if(G__9972){
var bit__8331__auto__ = (G__9972.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__8331__auto__) || (G__9972.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__9974 = coll;
if(G__9974){
var bit__8331__auto__ = (G__9974.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8331__auto__) || (G__9974.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__9976 = coll;
if(G__9976){
var bit__8331__auto__ = (G__9976.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8331__auto__) || (G__9976.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__9978 = coll;
if(G__9978){
var bit__8331__auto__ = (G__9978.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__8331__auto__) || (G__9978.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__9983__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__9984 = y;
var G__9985 = cljs.core.first(more);
var G__9986 = cljs.core.next(more);
x = G__9984;
y = G__9985;
more = G__9986;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__9983 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__9987__i = 0, G__9987__a = new Array(arguments.length -  2);
while (G__9987__i < G__9987__a.length) {G__9987__a[G__9987__i] = arguments[G__9987__i + 2]; ++G__9987__i;}
  more = new cljs.core.IndexedSeq(G__9987__a,0);
} 
return G__9983__delegate.call(this,x,y,more);};
G__9983.cljs$lang$maxFixedArity = 2;
G__9983.cljs$lang$applyTo = (function (arglist__9988){
var x = cljs.core.first(arglist__9988);
arglist__9988 = cljs.core.next(arglist__9988);
var y = cljs.core.first(arglist__9988);
var more = cljs.core.rest(arglist__9988);
return G__9983__delegate(x,y,more);
});
G__9983.cljs$core$IFn$_invoke$arity$variadic = G__9983__delegate;
return G__9983;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__9989 = null;
if (arguments.length > 2) {
var G__9990__i = 0, G__9990__a = new Array(arguments.length -  2);
while (G__9990__i < G__9990__a.length) {G__9990__a[G__9990__i] = arguments[G__9990__i + 2]; ++G__9990__i;}
G__9989 = new cljs.core.IndexedSeq(G__9990__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__9989);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__9991 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__9991) : cljs.core.es6_iterator_seq.call(null,G__9991));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__9992 = (n + (1));
var G__9993 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__9994 = cljs.core.next(coll__$1);
n = G__9992;
hash_code = G__9993;
coll__$1 = G__9994;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__9995 = (n + (1));
var G__9996 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__9997 = cljs.core.next(coll__$1);
n = G__9995;
hash_code = G__9996;
coll__$1 = G__9997;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__9998 = o;
return goog.getUid(G__9998);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__10000 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10000) : cljs.core.deref.call(null,G__10000));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__10007 = val;
var G__10008 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10007,G__10008) : f.call(null,G__10007,G__10008));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10013 = nval;
var G__10014 = (n + (1));
val = G__10013;
n = G__10014;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__10009 = val__$1;
var G__10010 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10009,G__10010) : f.call(null,G__10009,G__10010));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10015 = nval;
var G__10016 = (n + (1));
val__$1 = G__10015;
n = G__10016;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__10011 = val__$1;
var G__10012 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10011,G__10012) : f.call(null,G__10011,G__10012));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10017 = nval;
var G__10018 = (n + (1));
val__$1 = G__10017;
n = G__10018;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__10025 = val;
var G__10026 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10025,G__10026) : f.call(null,G__10025,G__10026));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10031 = nval;
var G__10032 = (n + (1));
val = G__10031;
n = G__10032;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__10027 = val__$1;
var G__10028 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10027,G__10028) : f.call(null,G__10027,G__10028));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10033 = nval;
var G__10034 = (n + (1));
val__$1 = G__10033;
n = G__10034;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__10029 = val__$1;
var G__10030 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10029,G__10030) : f.call(null,G__10029,G__10030));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10035 = nval;
var G__10036 = (n + (1));
val__$1 = G__10035;
n = G__10036;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__10038 = x;
if(G__10038){
var bit__8338__auto__ = (G__10038.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__8338__auto__) || (G__10038.cljs$core$ICounted$)){
return true;
} else {
if((!G__10038.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__10038);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__10038);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__10040 = x;
if(G__10040){
var bit__8338__auto__ = (G__10040.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__8338__auto__) || (G__10040.cljs$core$IIndexed$)){
return true;
} else {
if((!G__10040.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__10040);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__10040);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__10041 = coll__$1;
var G__10042 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10041,G__10042) : cljs.core.equiv_sequential.call(null,G__10041,G__10042));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10043 = o;
var G__10044 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10043,G__10044) : cljs.core.cons.call(null,G__10043,G__10044));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__10047 = coll__$1;
var G__10048 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10047,G__10048) : cljs.core.equiv_sequential.call(null,G__10047,G__10048));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10049 = cljs.core.List.EMPTY;
var G__10050 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__10049,G__10050) : cljs.core.with_meta.call(null,G__10049,G__10050));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__10051 = f;
var G__10052 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__10051,G__10052) : cljs.core.seq_reduce.call(null,G__10051,G__10052));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__10053 = f;
var G__10054 = start;
var G__10055 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__10053,G__10054,G__10055) : cljs.core.seq_reduce.call(null,G__10053,G__10054,G__10055));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10056 = o;
var G__10057 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10056,G__10057) : cljs.core.cons.call(null,G__10056,G__10057));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__10058 = sn;
s = G__10058;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__10063__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__10064 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__10065 = cljs.core.first(xs);
var G__10066 = cljs.core.next(xs);
coll = G__10064;
x = G__10065;
xs = G__10066;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__10063 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__10067__i = 0, G__10067__a = new Array(arguments.length -  2);
while (G__10067__i < G__10067__a.length) {G__10067__a[G__10067__i] = arguments[G__10067__i + 2]; ++G__10067__i;}
  xs = new cljs.core.IndexedSeq(G__10067__a,0);
} 
return G__10063__delegate.call(this,coll,x,xs);};
G__10063.cljs$lang$maxFixedArity = 2;
G__10063.cljs$lang$applyTo = (function (arglist__10068){
var coll = cljs.core.first(arglist__10068);
arglist__10068 = cljs.core.next(arglist__10068);
var x = cljs.core.first(arglist__10068);
var xs = cljs.core.rest(arglist__10068);
return G__10063__delegate(coll,x,xs);
});
G__10063.cljs$core$IFn$_invoke$arity$variadic = G__10063__delegate;
return G__10063;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__10069 = null;
if (arguments.length > 2) {
var G__10070__i = 0, G__10070__a = new Array(arguments.length -  2);
while (G__10070__i < G__10070__a.length) {G__10070__a[G__10070__i] = arguments[G__10070__i + 2]; ++G__10070__i;}
G__10069 = new cljs.core.IndexedSeq(G__10070__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__10069);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__10071 = cljs.core.next(s);
var G__10072 = (acc + (1));
s = G__10071;
acc = G__10072;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__10074 = coll;
if(G__10074){
var bit__8331__auto__ = (G__10074.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__8331__auto__) || (G__10074.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__10075 = cljs.core.next(coll);
var G__10076 = (n - (1));
coll = G__10075;
n = G__10076;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__10077 = cljs.core.next(coll);
var G__10078 = (n - (1));
var G__10079 = not_found;
coll = G__10077;
n = G__10078;
not_found = G__10079;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__10084 = coll;
if(G__10084){
var bit__8331__auto__ = (G__10084.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__8331__auto__) || (G__10084.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__10085 = coll;
if(G__10085){
var bit__8338__auto__ = (G__10085.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8338__auto__) || (G__10085.cljs$core$ISeq$)){
return true;
} else {
if((!G__10085.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10085);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10085);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__10086 = coll;
if(G__10086){
var bit__8331__auto__ = (G__10086.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__8331__auto__) || (G__10086.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__10087 = coll;
if(G__10087){
var bit__8338__auto__ = (G__10087.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8338__auto__) || (G__10087.cljs$core$ISeq$)){
return true;
} else {
if((!G__10087.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10087);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10087);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__10088 = (n__$1 - (1));
var G__10089 = cljs.core.rest(xs);
n__$1 = G__10088;
xs = G__10089;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__10092 = o;
if(G__10092){
var bit__8331__auto__ = (G__10092.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__8331__auto__) || (G__10092.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__10093 = o;
if(G__10093){
var bit__8331__auto__ = (G__10093.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__8331__auto__) || (G__10093.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__10097__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__10098 = ret;
var G__10099 = cljs.core.first(kvs);
var G__10100 = cljs.core.second(kvs);
var G__10101 = cljs.core.nnext(kvs);
coll = G__10098;
k = G__10099;
v = G__10100;
kvs = G__10101;
continue;
} else {
return ret;
}
break;
}
};
var G__10097 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__10102__i = 0, G__10102__a = new Array(arguments.length -  3);
while (G__10102__i < G__10102__a.length) {G__10102__a[G__10102__i] = arguments[G__10102__i + 3]; ++G__10102__i;}
  kvs = new cljs.core.IndexedSeq(G__10102__a,0);
} 
return G__10097__delegate.call(this,coll,k,v,kvs);};
G__10097.cljs$lang$maxFixedArity = 3;
G__10097.cljs$lang$applyTo = (function (arglist__10103){
var coll = cljs.core.first(arglist__10103);
arglist__10103 = cljs.core.next(arglist__10103);
var k = cljs.core.first(arglist__10103);
arglist__10103 = cljs.core.next(arglist__10103);
var v = cljs.core.first(arglist__10103);
var kvs = cljs.core.rest(arglist__10103);
return G__10097__delegate(coll,k,v,kvs);
});
G__10097.cljs$core$IFn$_invoke$arity$variadic = G__10097__delegate;
return G__10097;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__10104 = null;
if (arguments.length > 3) {
var G__10105__i = 0, G__10105__a = new Array(arguments.length -  3);
while (G__10105__i < G__10105__a.length) {G__10105__a[G__10105__i] = arguments[G__10105__i + 3]; ++G__10105__i;}
G__10104 = new cljs.core.IndexedSeq(G__10105__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__10104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__10108__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__10109 = ret;
var G__10110 = cljs.core.first(ks);
var G__10111 = cljs.core.next(ks);
coll = G__10109;
k = G__10110;
ks = G__10111;
continue;
} else {
return ret;
}
}
break;
}
};
var G__10108 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__10112__i = 0, G__10112__a = new Array(arguments.length -  2);
while (G__10112__i < G__10112__a.length) {G__10112__a[G__10112__i] = arguments[G__10112__i + 2]; ++G__10112__i;}
  ks = new cljs.core.IndexedSeq(G__10112__a,0);
} 
return G__10108__delegate.call(this,coll,k,ks);};
G__10108.cljs$lang$maxFixedArity = 2;
G__10108.cljs$lang$applyTo = (function (arglist__10113){
var coll = cljs.core.first(arglist__10113);
arglist__10113 = cljs.core.next(arglist__10113);
var k = cljs.core.first(arglist__10113);
var ks = cljs.core.rest(arglist__10113);
return G__10108__delegate(coll,k,ks);
});
G__10108.cljs$core$IFn$_invoke$arity$variadic = G__10108__delegate;
return G__10108;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__10114 = null;
if (arguments.length > 2) {
var G__10115__i = 0, G__10115__a = new Array(arguments.length -  2);
while (G__10115__i < G__10115__a.length) {G__10115__a[G__10115__i] = arguments[G__10115__i + 2]; ++G__10115__i;}
G__10114 = new cljs.core.IndexedSeq(G__10115__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__10114);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__7657__auto__ = (function (){var G__10120 = f;
return goog.isFunction(G__10120);
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var G__10121 = f;
if(G__10121){
var bit__8338__auto__ = null;
if(cljs.core.truth_((function (){var or__7657__auto____$1 = bit__8338__auto__;
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
return G__10121.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__10121.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__10121);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__10121);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__10587 = null;
var G__10587__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__10587__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10123 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10123) : self__.afn.call(null,G__10123));
});
var G__10587__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10124 = a;
var G__10125 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10124,G__10125) : self__.afn.call(null,G__10124,G__10125));
});
var G__10587__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10126 = a;
var G__10127 = b;
var G__10128 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10126,G__10127,G__10128) : self__.afn.call(null,G__10126,G__10127,G__10128));
});
var G__10587__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10129 = a;
var G__10130 = b;
var G__10131 = c;
var G__10132 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10129,G__10130,G__10131,G__10132) : self__.afn.call(null,G__10129,G__10130,G__10131,G__10132));
});
var G__10587__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10133 = a;
var G__10134 = b;
var G__10135 = c;
var G__10136 = d;
var G__10137 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10133,G__10134,G__10135,G__10136,G__10137) : self__.afn.call(null,G__10133,G__10134,G__10135,G__10136,G__10137));
});
var G__10587__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10138 = a;
var G__10139 = b;
var G__10140 = c;
var G__10141 = d;
var G__10142 = e;
var G__10143 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10138,G__10139,G__10140,G__10141,G__10142,G__10143) : self__.afn.call(null,G__10138,G__10139,G__10140,G__10141,G__10142,G__10143));
});
var G__10587__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10144 = a;
var G__10145 = b;
var G__10146 = c;
var G__10147 = d;
var G__10148 = e;
var G__10149 = f;
var G__10150 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10144,G__10145,G__10146,G__10147,G__10148,G__10149,G__10150) : self__.afn.call(null,G__10144,G__10145,G__10146,G__10147,G__10148,G__10149,G__10150));
});
var G__10587__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10151 = a;
var G__10152 = b;
var G__10153 = c;
var G__10154 = d;
var G__10155 = e;
var G__10156 = f;
var G__10157 = g;
var G__10158 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10151,G__10152,G__10153,G__10154,G__10155,G__10156,G__10157,G__10158) : self__.afn.call(null,G__10151,G__10152,G__10153,G__10154,G__10155,G__10156,G__10157,G__10158));
});
var G__10587__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10159 = a;
var G__10160 = b;
var G__10161 = c;
var G__10162 = d;
var G__10163 = e;
var G__10164 = f;
var G__10165 = g;
var G__10166 = h;
var G__10167 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10159,G__10160,G__10161,G__10162,G__10163,G__10164,G__10165,G__10166,G__10167) : self__.afn.call(null,G__10159,G__10160,G__10161,G__10162,G__10163,G__10164,G__10165,G__10166,G__10167));
});
var G__10587__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10168 = a;
var G__10169 = b;
var G__10170 = c;
var G__10171 = d;
var G__10172 = e;
var G__10173 = f;
var G__10174 = g;
var G__10175 = h;
var G__10176 = i;
var G__10177 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10168,G__10169,G__10170,G__10171,G__10172,G__10173,G__10174,G__10175,G__10176,G__10177) : self__.afn.call(null,G__10168,G__10169,G__10170,G__10171,G__10172,G__10173,G__10174,G__10175,G__10176,G__10177));
});
var G__10587__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10178 = a;
var G__10179 = b;
var G__10180 = c;
var G__10181 = d;
var G__10182 = e;
var G__10183 = f;
var G__10184 = g;
var G__10185 = h;
var G__10186 = i;
var G__10187 = j;
var G__10188 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10178,G__10179,G__10180,G__10181,G__10182,G__10183,G__10184,G__10185,G__10186,G__10187,G__10188) : self__.afn.call(null,G__10178,G__10179,G__10180,G__10181,G__10182,G__10183,G__10184,G__10185,G__10186,G__10187,G__10188));
});
var G__10587__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10189 = a;
var G__10190 = b;
var G__10191 = c;
var G__10192 = d;
var G__10193 = e;
var G__10194 = f;
var G__10195 = g;
var G__10196 = h;
var G__10197 = i;
var G__10198 = j;
var G__10199 = k;
var G__10200 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10189,G__10190,G__10191,G__10192,G__10193,G__10194,G__10195,G__10196,G__10197,G__10198,G__10199,G__10200) : self__.afn.call(null,G__10189,G__10190,G__10191,G__10192,G__10193,G__10194,G__10195,G__10196,G__10197,G__10198,G__10199,G__10200));
});
var G__10587__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10201 = a;
var G__10202 = b;
var G__10203 = c;
var G__10204 = d;
var G__10205 = e;
var G__10206 = f;
var G__10207 = g;
var G__10208 = h;
var G__10209 = i;
var G__10210 = j;
var G__10211 = k;
var G__10212 = l;
var G__10213 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10201,G__10202,G__10203,G__10204,G__10205,G__10206,G__10207,G__10208,G__10209,G__10210,G__10211,G__10212,G__10213) : self__.afn.call(null,G__10201,G__10202,G__10203,G__10204,G__10205,G__10206,G__10207,G__10208,G__10209,G__10210,G__10211,G__10212,G__10213));
});
var G__10587__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10214 = a;
var G__10215 = b;
var G__10216 = c;
var G__10217 = d;
var G__10218 = e;
var G__10219 = f;
var G__10220 = g;
var G__10221 = h;
var G__10222 = i;
var G__10223 = j;
var G__10224 = k;
var G__10225 = l;
var G__10226 = m;
var G__10227 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10214,G__10215,G__10216,G__10217,G__10218,G__10219,G__10220,G__10221,G__10222,G__10223,G__10224,G__10225,G__10226,G__10227) : self__.afn.call(null,G__10214,G__10215,G__10216,G__10217,G__10218,G__10219,G__10220,G__10221,G__10222,G__10223,G__10224,G__10225,G__10226,G__10227));
});
var G__10587__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10228 = a;
var G__10229 = b;
var G__10230 = c;
var G__10231 = d;
var G__10232 = e;
var G__10233 = f;
var G__10234 = g;
var G__10235 = h;
var G__10236 = i;
var G__10237 = j;
var G__10238 = k;
var G__10239 = l;
var G__10240 = m;
var G__10241 = n;
var G__10242 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10228,G__10229,G__10230,G__10231,G__10232,G__10233,G__10234,G__10235,G__10236,G__10237,G__10238,G__10239,G__10240,G__10241,G__10242) : self__.afn.call(null,G__10228,G__10229,G__10230,G__10231,G__10232,G__10233,G__10234,G__10235,G__10236,G__10237,G__10238,G__10239,G__10240,G__10241,G__10242));
});
var G__10587__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10243 = a;
var G__10244 = b;
var G__10245 = c;
var G__10246 = d;
var G__10247 = e;
var G__10248 = f;
var G__10249 = g;
var G__10250 = h;
var G__10251 = i;
var G__10252 = j;
var G__10253 = k;
var G__10254 = l;
var G__10255 = m;
var G__10256 = n;
var G__10257 = o;
var G__10258 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10243,G__10244,G__10245,G__10246,G__10247,G__10248,G__10249,G__10250,G__10251,G__10252,G__10253,G__10254,G__10255,G__10256,G__10257,G__10258) : self__.afn.call(null,G__10243,G__10244,G__10245,G__10246,G__10247,G__10248,G__10249,G__10250,G__10251,G__10252,G__10253,G__10254,G__10255,G__10256,G__10257,G__10258));
});
var G__10587__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10259 = a;
var G__10260 = b;
var G__10261 = c;
var G__10262 = d;
var G__10263 = e;
var G__10264 = f;
var G__10265 = g;
var G__10266 = h;
var G__10267 = i;
var G__10268 = j;
var G__10269 = k;
var G__10270 = l;
var G__10271 = m;
var G__10272 = n;
var G__10273 = o;
var G__10274 = p;
var G__10275 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10259,G__10260,G__10261,G__10262,G__10263,G__10264,G__10265,G__10266,G__10267,G__10268,G__10269,G__10270,G__10271,G__10272,G__10273,G__10274,G__10275) : self__.afn.call(null,G__10259,G__10260,G__10261,G__10262,G__10263,G__10264,G__10265,G__10266,G__10267,G__10268,G__10269,G__10270,G__10271,G__10272,G__10273,G__10274,G__10275));
});
var G__10587__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10276 = a;
var G__10277 = b;
var G__10278 = c;
var G__10279 = d;
var G__10280 = e;
var G__10281 = f;
var G__10282 = g;
var G__10283 = h;
var G__10284 = i;
var G__10285 = j;
var G__10286 = k;
var G__10287 = l;
var G__10288 = m;
var G__10289 = n;
var G__10290 = o;
var G__10291 = p;
var G__10292 = q;
var G__10293 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__10276,G__10277,G__10278,G__10279,G__10280,G__10281,G__10282,G__10283,G__10284,G__10285,G__10286,G__10287,G__10288,G__10289,G__10290,G__10291,G__10292,G__10293) : self__.afn.call(null,G__10276,G__10277,G__10278,G__10279,G__10280,G__10281,G__10282,G__10283,G__10284,G__10285,G__10286,G__10287,G__10288,G__10289,G__10290,G__10291,G__10292,G__10293));
});
var G__10587__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10294 = a;
var G__10295 = b;
var G__10296 = c;
var G__10297 = d;
var G__10298 = e;
var G__10299 = f;
var G__10300 = g;
var G__10301 = h;
var G__10302 = i;
var G__10303 = j;
var G__10304 = k;
var G__10305 = l;
var G__10306 = m;
var G__10307 = n;
var G__10308 = o;
var G__10309 = p;
var G__10310 = q;
var G__10311 = r;
var G__10312 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__10294,G__10295,G__10296,G__10297,G__10298,G__10299,G__10300,G__10301,G__10302,G__10303,G__10304,G__10305,G__10306,G__10307,G__10308,G__10309,G__10310,G__10311,G__10312) : self__.afn.call(null,G__10294,G__10295,G__10296,G__10297,G__10298,G__10299,G__10300,G__10301,G__10302,G__10303,G__10304,G__10305,G__10306,G__10307,G__10308,G__10309,G__10310,G__10311,G__10312));
});
var G__10587__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10313 = a;
var G__10314 = b;
var G__10315 = c;
var G__10316 = d;
var G__10317 = e;
var G__10318 = f;
var G__10319 = g;
var G__10320 = h;
var G__10321 = i;
var G__10322 = j;
var G__10323 = k;
var G__10324 = l;
var G__10325 = m;
var G__10326 = n;
var G__10327 = o;
var G__10328 = p;
var G__10329 = q;
var G__10330 = r;
var G__10331 = s;
var G__10332 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__10313,G__10314,G__10315,G__10316,G__10317,G__10318,G__10319,G__10320,G__10321,G__10322,G__10323,G__10324,G__10325,G__10326,G__10327,G__10328,G__10329,G__10330,G__10331,G__10332) : self__.afn.call(null,G__10313,G__10314,G__10315,G__10316,G__10317,G__10318,G__10319,G__10320,G__10321,G__10322,G__10323,G__10324,G__10325,G__10326,G__10327,G__10328,G__10329,G__10330,G__10331,G__10332));
});
var G__10587__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10333 = self__.afn;
var G__10334 = a;
var G__10335 = b;
var G__10336 = c;
var G__10337 = d;
var G__10338 = e;
var G__10339 = f;
var G__10340 = g;
var G__10341 = h;
var G__10342 = i;
var G__10343 = j;
var G__10344 = k;
var G__10345 = l;
var G__10346 = m;
var G__10347 = n;
var G__10348 = o;
var G__10349 = p;
var G__10350 = q;
var G__10351 = r;
var G__10352 = s;
var G__10353 = t;
var G__10354 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10333,G__10334,G__10335,G__10336,G__10337,G__10338,G__10339,G__10340,G__10341,G__10342,G__10343,G__10344,G__10345,G__10346,G__10347,G__10348,G__10349,G__10350,G__10351,G__10352,G__10353,G__10354) : cljs.core.apply.call(null,G__10333,G__10334,G__10335,G__10336,G__10337,G__10338,G__10339,G__10340,G__10341,G__10342,G__10343,G__10344,G__10345,G__10346,G__10347,G__10348,G__10349,G__10350,G__10351,G__10352,G__10353,G__10354));
});
G__10587 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__10587__1.call(this,self__);
case 2:
return G__10587__2.call(this,self__,a);
case 3:
return G__10587__3.call(this,self__,a,b);
case 4:
return G__10587__4.call(this,self__,a,b,c);
case 5:
return G__10587__5.call(this,self__,a,b,c,d);
case 6:
return G__10587__6.call(this,self__,a,b,c,d,e);
case 7:
return G__10587__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__10587__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__10587__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__10587__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__10587__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__10587__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__10587__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__10587__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__10587__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__10587__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__10587__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__10587__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__10587__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__10587__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__10587__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__10587__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10587.cljs$core$IFn$_invoke$arity$1 = G__10587__1;
G__10587.cljs$core$IFn$_invoke$arity$2 = G__10587__2;
G__10587.cljs$core$IFn$_invoke$arity$3 = G__10587__3;
G__10587.cljs$core$IFn$_invoke$arity$4 = G__10587__4;
G__10587.cljs$core$IFn$_invoke$arity$5 = G__10587__5;
G__10587.cljs$core$IFn$_invoke$arity$6 = G__10587__6;
G__10587.cljs$core$IFn$_invoke$arity$7 = G__10587__7;
G__10587.cljs$core$IFn$_invoke$arity$8 = G__10587__8;
G__10587.cljs$core$IFn$_invoke$arity$9 = G__10587__9;
G__10587.cljs$core$IFn$_invoke$arity$10 = G__10587__10;
G__10587.cljs$core$IFn$_invoke$arity$11 = G__10587__11;
G__10587.cljs$core$IFn$_invoke$arity$12 = G__10587__12;
G__10587.cljs$core$IFn$_invoke$arity$13 = G__10587__13;
G__10587.cljs$core$IFn$_invoke$arity$14 = G__10587__14;
G__10587.cljs$core$IFn$_invoke$arity$15 = G__10587__15;
G__10587.cljs$core$IFn$_invoke$arity$16 = G__10587__16;
G__10587.cljs$core$IFn$_invoke$arity$17 = G__10587__17;
G__10587.cljs$core$IFn$_invoke$arity$18 = G__10587__18;
G__10587.cljs$core$IFn$_invoke$arity$19 = G__10587__19;
G__10587.cljs$core$IFn$_invoke$arity$20 = G__10587__20;
G__10587.cljs$core$IFn$_invoke$arity$21 = G__10587__21;
G__10587.cljs$core$IFn$_invoke$arity$22 = G__10587__22;
return G__10587;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args10122){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10122)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__10355 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10355) : self__.afn.call(null,G__10355));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__10356 = a;
var G__10357 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10356,G__10357) : self__.afn.call(null,G__10356,G__10357));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__10358 = a;
var G__10359 = b;
var G__10360 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10358,G__10359,G__10360) : self__.afn.call(null,G__10358,G__10359,G__10360));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__10361 = a;
var G__10362 = b;
var G__10363 = c;
var G__10364 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10361,G__10362,G__10363,G__10364) : self__.afn.call(null,G__10361,G__10362,G__10363,G__10364));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__10365 = a;
var G__10366 = b;
var G__10367 = c;
var G__10368 = d;
var G__10369 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10365,G__10366,G__10367,G__10368,G__10369) : self__.afn.call(null,G__10365,G__10366,G__10367,G__10368,G__10369));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__10370 = a;
var G__10371 = b;
var G__10372 = c;
var G__10373 = d;
var G__10374 = e;
var G__10375 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10370,G__10371,G__10372,G__10373,G__10374,G__10375) : self__.afn.call(null,G__10370,G__10371,G__10372,G__10373,G__10374,G__10375));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__10376 = a;
var G__10377 = b;
var G__10378 = c;
var G__10379 = d;
var G__10380 = e;
var G__10381 = f;
var G__10382 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10376,G__10377,G__10378,G__10379,G__10380,G__10381,G__10382) : self__.afn.call(null,G__10376,G__10377,G__10378,G__10379,G__10380,G__10381,G__10382));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__10383 = a;
var G__10384 = b;
var G__10385 = c;
var G__10386 = d;
var G__10387 = e;
var G__10388 = f;
var G__10389 = g;
var G__10390 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10383,G__10384,G__10385,G__10386,G__10387,G__10388,G__10389,G__10390) : self__.afn.call(null,G__10383,G__10384,G__10385,G__10386,G__10387,G__10388,G__10389,G__10390));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__10391 = a;
var G__10392 = b;
var G__10393 = c;
var G__10394 = d;
var G__10395 = e;
var G__10396 = f;
var G__10397 = g;
var G__10398 = h;
var G__10399 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10391,G__10392,G__10393,G__10394,G__10395,G__10396,G__10397,G__10398,G__10399) : self__.afn.call(null,G__10391,G__10392,G__10393,G__10394,G__10395,G__10396,G__10397,G__10398,G__10399));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__10400 = a;
var G__10401 = b;
var G__10402 = c;
var G__10403 = d;
var G__10404 = e;
var G__10405 = f;
var G__10406 = g;
var G__10407 = h;
var G__10408 = i;
var G__10409 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10400,G__10401,G__10402,G__10403,G__10404,G__10405,G__10406,G__10407,G__10408,G__10409) : self__.afn.call(null,G__10400,G__10401,G__10402,G__10403,G__10404,G__10405,G__10406,G__10407,G__10408,G__10409));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__10410 = a;
var G__10411 = b;
var G__10412 = c;
var G__10413 = d;
var G__10414 = e;
var G__10415 = f;
var G__10416 = g;
var G__10417 = h;
var G__10418 = i;
var G__10419 = j;
var G__10420 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10410,G__10411,G__10412,G__10413,G__10414,G__10415,G__10416,G__10417,G__10418,G__10419,G__10420) : self__.afn.call(null,G__10410,G__10411,G__10412,G__10413,G__10414,G__10415,G__10416,G__10417,G__10418,G__10419,G__10420));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__10421 = a;
var G__10422 = b;
var G__10423 = c;
var G__10424 = d;
var G__10425 = e;
var G__10426 = f;
var G__10427 = g;
var G__10428 = h;
var G__10429 = i;
var G__10430 = j;
var G__10431 = k;
var G__10432 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10421,G__10422,G__10423,G__10424,G__10425,G__10426,G__10427,G__10428,G__10429,G__10430,G__10431,G__10432) : self__.afn.call(null,G__10421,G__10422,G__10423,G__10424,G__10425,G__10426,G__10427,G__10428,G__10429,G__10430,G__10431,G__10432));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__10433 = a;
var G__10434 = b;
var G__10435 = c;
var G__10436 = d;
var G__10437 = e;
var G__10438 = f;
var G__10439 = g;
var G__10440 = h;
var G__10441 = i;
var G__10442 = j;
var G__10443 = k;
var G__10444 = l;
var G__10445 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10433,G__10434,G__10435,G__10436,G__10437,G__10438,G__10439,G__10440,G__10441,G__10442,G__10443,G__10444,G__10445) : self__.afn.call(null,G__10433,G__10434,G__10435,G__10436,G__10437,G__10438,G__10439,G__10440,G__10441,G__10442,G__10443,G__10444,G__10445));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__10446 = a;
var G__10447 = b;
var G__10448 = c;
var G__10449 = d;
var G__10450 = e;
var G__10451 = f;
var G__10452 = g;
var G__10453 = h;
var G__10454 = i;
var G__10455 = j;
var G__10456 = k;
var G__10457 = l;
var G__10458 = m;
var G__10459 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10446,G__10447,G__10448,G__10449,G__10450,G__10451,G__10452,G__10453,G__10454,G__10455,G__10456,G__10457,G__10458,G__10459) : self__.afn.call(null,G__10446,G__10447,G__10448,G__10449,G__10450,G__10451,G__10452,G__10453,G__10454,G__10455,G__10456,G__10457,G__10458,G__10459));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__10460 = a;
var G__10461 = b;
var G__10462 = c;
var G__10463 = d;
var G__10464 = e;
var G__10465 = f;
var G__10466 = g;
var G__10467 = h;
var G__10468 = i;
var G__10469 = j;
var G__10470 = k;
var G__10471 = l;
var G__10472 = m;
var G__10473 = n;
var G__10474 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10460,G__10461,G__10462,G__10463,G__10464,G__10465,G__10466,G__10467,G__10468,G__10469,G__10470,G__10471,G__10472,G__10473,G__10474) : self__.afn.call(null,G__10460,G__10461,G__10462,G__10463,G__10464,G__10465,G__10466,G__10467,G__10468,G__10469,G__10470,G__10471,G__10472,G__10473,G__10474));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__10475 = a;
var G__10476 = b;
var G__10477 = c;
var G__10478 = d;
var G__10479 = e;
var G__10480 = f;
var G__10481 = g;
var G__10482 = h;
var G__10483 = i;
var G__10484 = j;
var G__10485 = k;
var G__10486 = l;
var G__10487 = m;
var G__10488 = n;
var G__10489 = o;
var G__10490 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10475,G__10476,G__10477,G__10478,G__10479,G__10480,G__10481,G__10482,G__10483,G__10484,G__10485,G__10486,G__10487,G__10488,G__10489,G__10490) : self__.afn.call(null,G__10475,G__10476,G__10477,G__10478,G__10479,G__10480,G__10481,G__10482,G__10483,G__10484,G__10485,G__10486,G__10487,G__10488,G__10489,G__10490));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__10491 = a;
var G__10492 = b;
var G__10493 = c;
var G__10494 = d;
var G__10495 = e;
var G__10496 = f;
var G__10497 = g;
var G__10498 = h;
var G__10499 = i;
var G__10500 = j;
var G__10501 = k;
var G__10502 = l;
var G__10503 = m;
var G__10504 = n;
var G__10505 = o;
var G__10506 = p;
var G__10507 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498,G__10499,G__10500,G__10501,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507) : self__.afn.call(null,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498,G__10499,G__10500,G__10501,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__10508 = a;
var G__10509 = b;
var G__10510 = c;
var G__10511 = d;
var G__10512 = e;
var G__10513 = f;
var G__10514 = g;
var G__10515 = h;
var G__10516 = i;
var G__10517 = j;
var G__10518 = k;
var G__10519 = l;
var G__10520 = m;
var G__10521 = n;
var G__10522 = o;
var G__10523 = p;
var G__10524 = q;
var G__10525 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__10508,G__10509,G__10510,G__10511,G__10512,G__10513,G__10514,G__10515,G__10516,G__10517,G__10518,G__10519,G__10520,G__10521,G__10522,G__10523,G__10524,G__10525) : self__.afn.call(null,G__10508,G__10509,G__10510,G__10511,G__10512,G__10513,G__10514,G__10515,G__10516,G__10517,G__10518,G__10519,G__10520,G__10521,G__10522,G__10523,G__10524,G__10525));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__10526 = a;
var G__10527 = b;
var G__10528 = c;
var G__10529 = d;
var G__10530 = e;
var G__10531 = f;
var G__10532 = g;
var G__10533 = h;
var G__10534 = i;
var G__10535 = j;
var G__10536 = k;
var G__10537 = l;
var G__10538 = m;
var G__10539 = n;
var G__10540 = o;
var G__10541 = p;
var G__10542 = q;
var G__10543 = r;
var G__10544 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__10526,G__10527,G__10528,G__10529,G__10530,G__10531,G__10532,G__10533,G__10534,G__10535,G__10536,G__10537,G__10538,G__10539,G__10540,G__10541,G__10542,G__10543,G__10544) : self__.afn.call(null,G__10526,G__10527,G__10528,G__10529,G__10530,G__10531,G__10532,G__10533,G__10534,G__10535,G__10536,G__10537,G__10538,G__10539,G__10540,G__10541,G__10542,G__10543,G__10544));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__10545 = a;
var G__10546 = b;
var G__10547 = c;
var G__10548 = d;
var G__10549 = e;
var G__10550 = f;
var G__10551 = g;
var G__10552 = h;
var G__10553 = i;
var G__10554 = j;
var G__10555 = k;
var G__10556 = l;
var G__10557 = m;
var G__10558 = n;
var G__10559 = o;
var G__10560 = p;
var G__10561 = q;
var G__10562 = r;
var G__10563 = s;
var G__10564 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__10545,G__10546,G__10547,G__10548,G__10549,G__10550,G__10551,G__10552,G__10553,G__10554,G__10555,G__10556,G__10557,G__10558,G__10559,G__10560,G__10561,G__10562,G__10563,G__10564) : self__.afn.call(null,G__10545,G__10546,G__10547,G__10548,G__10549,G__10550,G__10551,G__10552,G__10553,G__10554,G__10555,G__10556,G__10557,G__10558,G__10559,G__10560,G__10561,G__10562,G__10563,G__10564));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__10565 = self__.afn;
var G__10566 = a;
var G__10567 = b;
var G__10568 = c;
var G__10569 = d;
var G__10570 = e;
var G__10571 = f;
var G__10572 = g;
var G__10573 = h;
var G__10574 = i;
var G__10575 = j;
var G__10576 = k;
var G__10577 = l;
var G__10578 = m;
var G__10579 = n;
var G__10580 = o;
var G__10581 = p;
var G__10582 = q;
var G__10583 = r;
var G__10584 = s;
var G__10585 = t;
var G__10586 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10565,G__10566,G__10567,G__10568,G__10569,G__10570,G__10571,G__10572,G__10573,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580,G__10581,G__10582,G__10583,G__10584,G__10585,G__10586) : cljs.core.apply.call(null,G__10565,G__10566,G__10567,G__10568,G__10569,G__10570,G__10571,G__10572,G__10573,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580,G__10581,G__10582,G__10583,G__10584,G__10585,G__10586));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__10591 = o;
if(G__10591){
var bit__8338__auto__ = (G__10591.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__8338__auto__) || (G__10591.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__10591.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__10591);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__10591);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__7645__auto__ = !((o == null));
if(and__7645__auto__){
var G__10595 = o;
if(G__10595){
var bit__8338__auto__ = (G__10595.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__8338__auto__) || (G__10595.cljs$core$IMeta$)){
return true;
} else {
if((!G__10595.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10595);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10595);
}
} else {
return and__7645__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__10598__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__10599 = ret;
var G__10600 = cljs.core.first(ks);
var G__10601 = cljs.core.next(ks);
coll = G__10599;
k = G__10600;
ks = G__10601;
continue;
} else {
return ret;
}
}
break;
}
};
var G__10598 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__10602__i = 0, G__10602__a = new Array(arguments.length -  2);
while (G__10602__i < G__10602__a.length) {G__10602__a[G__10602__i] = arguments[G__10602__i + 2]; ++G__10602__i;}
  ks = new cljs.core.IndexedSeq(G__10602__a,0);
} 
return G__10598__delegate.call(this,coll,k,ks);};
G__10598.cljs$lang$maxFixedArity = 2;
G__10598.cljs$lang$applyTo = (function (arglist__10603){
var coll = cljs.core.first(arglist__10603);
arglist__10603 = cljs.core.next(arglist__10603);
var k = cljs.core.first(arglist__10603);
var ks = cljs.core.rest(arglist__10603);
return G__10598__delegate(coll,k,ks);
});
G__10598.cljs$core$IFn$_invoke$arity$variadic = G__10598__delegate;
return G__10598;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__10604 = null;
if (arguments.length > 2) {
var G__10605__i = 0, G__10605__a = new Array(arguments.length -  2);
while (G__10605__i < G__10605__a.length) {G__10605__a[G__10605__i] = arguments[G__10605__i + 2]; ++G__10605__i;}
G__10604 = new cljs.core.IndexedSeq(G__10605__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__10604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__10607 = x;
if(G__10607){
var bit__8338__auto__ = (G__10607.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__8338__auto__) || (G__10607.cljs$core$ICollection$)){
return true;
} else {
if((!G__10607.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__10607);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__10607);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__10609 = x;
if(G__10609){
var bit__8338__auto__ = (G__10609.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__8338__auto__) || (G__10609.cljs$core$ISet$)){
return true;
} else {
if((!G__10609.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__10609);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__10609);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__10611 = x;
if(G__10611){
var bit__8338__auto__ = (G__10611.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__8338__auto__) || (G__10611.cljs$core$IAssociative$)){
return true;
} else {
if((!G__10611.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__10611);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__10611);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__10613 = x;
if(G__10613){
var bit__8338__auto__ = (G__10613.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__8338__auto__) || (G__10613.cljs$core$ISequential$)){
return true;
} else {
if((!G__10613.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__10613);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__10613);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__10615 = x;
if(G__10615){
var bit__8338__auto__ = (G__10615.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__8338__auto__) || (G__10615.cljs$core$ISorted$)){
return true;
} else {
if((!G__10615.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__10615);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__10615);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__10617 = x;
if(G__10617){
var bit__8338__auto__ = (G__10617.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__8338__auto__) || (G__10617.cljs$core$IReduce$)){
return true;
} else {
if((!G__10617.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__10617);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__10617);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__10619 = x;
if(G__10619){
var bit__8338__auto__ = (G__10619.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__8338__auto__) || (G__10619.cljs$core$IMap$)){
return true;
} else {
if((!G__10619.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__10619);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__10619);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__10621 = x;
if(G__10621){
var bit__8338__auto__ = (G__10621.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__8338__auto__) || (G__10621.cljs$core$IVector$)){
return true;
} else {
if((!G__10621.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__10621);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__10621);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__10623 = x;
if(G__10623){
var bit__8331__auto__ = (G__10623.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__8331__auto__) || (G__10623.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj10629 = {};
return obj10629;
});
var js_obj__1 = (function() { 
var G__10632__delegate = function (keyvals){
var G__10630 = goog.object.create;
var G__10631 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__10630,G__10631) : cljs.core.apply.call(null,G__10630,G__10631));
};
var G__10632 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10633__i = 0, G__10633__a = new Array(arguments.length -  0);
while (G__10633__i < G__10633__a.length) {G__10633__a[G__10633__i] = arguments[G__10633__i + 0]; ++G__10633__i;}
  keyvals = new cljs.core.IndexedSeq(G__10633__a,0);
} 
return G__10632__delegate.call(this,keyvals);};
G__10632.cljs$lang$maxFixedArity = 0;
G__10632.cljs$lang$applyTo = (function (arglist__10634){
var keyvals = cljs.core.seq(arglist__10634);
return G__10632__delegate(keyvals);
});
G__10632.cljs$core$IFn$_invoke$arity$variadic = G__10632__delegate;
return G__10632;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__10635 = null;
if (arguments.length > 0) {
var G__10636__i = 0, G__10636__a = new Array(arguments.length -  0);
while (G__10636__i < G__10636__a.length) {G__10636__a[G__10636__i] = arguments[G__10636__i + 0]; ++G__10636__i;}
G__10635 = new cljs.core.IndexedSeq(G__10636__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__10635);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__10639_10641 = obj;
var G__10640_10642 = ((function (G__10639_10641,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__10639_10641,keys))
;
goog.object.forEach(G__10639_10641,G__10640_10642);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__10643 = (i__$1 + (1));
var G__10644 = (j__$1 + (1));
var G__10645 = (len__$1 - (1));
i__$1 = G__10643;
j__$1 = G__10644;
len__$1 = G__10645;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__10646 = (i__$1 - (1));
var G__10647 = (j__$1 - (1));
var G__10648 = (len__$1 - (1));
i__$1 = G__10646;
j__$1 = G__10647;
len__$1 = G__10648;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj10650 = {};
return obj10650;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__10652 = s;
if(G__10652){
var bit__8338__auto__ = (G__10652.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8338__auto__) || (G__10652.cljs$core$ISeq$)){
return true;
} else {
if((!G__10652.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10652);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10652);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__10654 = s;
if(G__10654){
var bit__8338__auto__ = (G__10654.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__8338__auto__) || (G__10654.cljs$core$ISeqable$)){
return true;
} else {
if((!G__10654.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__10654);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__10654);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__7657__auto__ = cljs.core.fn_QMARK_(f);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var G__10658 = f;
if(G__10658){
var bit__8338__auto__ = (G__10658.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__8338__auto__) || (G__10658.cljs$core$IFn$)){
return true;
} else {
if((!G__10658.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__10658);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__10658);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__10671 = n;
return isNaN(G__10671);
})())) && (!((n === Infinity))) && (((function (){var G__10672 = n;
return parseFloat(G__10672);
})() === (function (){var G__10673 = n;
var G__10674 = (10);
return parseInt(G__10673,G__10674);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__10675__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__10676 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__10677 = etc;
s = G__10676;
xs = G__10677;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__10675 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10678__i = 0, G__10678__a = new Array(arguments.length -  2);
while (G__10678__i < G__10678__a.length) {G__10678__a[G__10678__i] = arguments[G__10678__i + 2]; ++G__10678__i;}
  more = new cljs.core.IndexedSeq(G__10678__a,0);
} 
return G__10675__delegate.call(this,x,y,more);};
G__10675.cljs$lang$maxFixedArity = 2;
G__10675.cljs$lang$applyTo = (function (arglist__10679){
var x = cljs.core.first(arglist__10679);
arglist__10679 = cljs.core.next(arglist__10679);
var y = cljs.core.first(arglist__10679);
var more = cljs.core.rest(arglist__10679);
return G__10675__delegate(x,y,more);
});
G__10675.cljs$core$IFn$_invoke$arity$variadic = G__10675__delegate;
return G__10675;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__10680 = null;
if (arguments.length > 2) {
var G__10681__i = 0, G__10681__a = new Array(arguments.length -  2);
while (G__10681__i < G__10681__a.length) {G__10681__a[G__10681__i] = arguments[G__10681__i + 2]; ++G__10681__i;}
G__10680 = new cljs.core.IndexedSeq(G__10681__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10680);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__10685 = x;
if(G__10685){
var bit__8331__auto__ = (G__10685.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__8331__auto__) || (G__10685.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__10686 = x;
var G__10687 = y;
return goog.array.defaultCompare(G__10686,G__10687);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__10692 = xs;
var G__10693 = ys;
var G__10694 = len;
var G__10695 = (n + (1));
xs = G__10692;
ys = G__10693;
len = G__10694;
n = G__10695;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__10700 = x;
var G__10701 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10700,G__10701) : f.call(null,G__10700,G__10701));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__10702 = y;
var G__10703 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10702,G__10703) : f.call(null,G__10702,G__10703));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__10709 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__10709) : cljs.core.to_array.call(null,G__10709));
})();
var G__10710_10712 = a;
var G__10711_10713 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__10710_10712,G__10711_10713);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__10719 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10719) : keyfn.call(null,G__10719));
})(),(function (){var G__10720 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10720) : keyfn.call(null,G__10720));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__10726 = f;
var G__10727 = cljs.core.first(s);
var G__10728 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__10726,G__10727,G__10728) : cljs.core.reduce.call(null,G__10726,G__10727,G__10728));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__10729 = val__$1;
var G__10730 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10729,G__10730) : f.call(null,G__10729,G__10730));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10731 = nval;
var G__10732 = cljs.core.next(coll__$1);
val__$1 = G__10731;
coll__$1 = G__10732;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__10736 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__10736) : cljs.core.to_array.call(null,G__10736));
})();
var G__10737_10739 = a;
goog.array.shuffle(G__10737_10739);

var G__10738 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__10738) : cljs.core.vec.call(null,G__10738));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__10742 = coll;
if(G__10742){
var bit__8331__auto__ = (G__10742.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__8331__auto__) || (G__10742.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__10743 = coll;
if(G__10743){
var bit__8331__auto__ = (G__10743.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__8331__auto__) || (G__10743.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__10752 = null;
var G__10752__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__10752__1 = (function (x){
var G__10749 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__10749) : cf.call(null,G__10749));
});
var G__10752__2 = (function (x,y){
var G__10750 = x;
var G__10751 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10750,G__10751) : f.call(null,G__10750,G__10751));
});
G__10752 = function(x,y){
switch(arguments.length){
case 0:
return G__10752__0.call(this);
case 1:
return G__10752__1.call(this,x);
case 2:
return G__10752__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10752.cljs$core$IFn$_invoke$arity$0 = G__10752__0;
G__10752.cljs$core$IFn$_invoke$arity$1 = G__10752__1;
G__10752.cljs$core$IFn$_invoke$arity$2 = G__10752__2;
return G__10752;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__10759 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__10759) : xform.call(null,G__10759));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__10760 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__10760) : f__$1.call(null,G__10760));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__10761__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__10761 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10762__i = 0, G__10762__a = new Array(arguments.length -  2);
while (G__10762__i < G__10762__a.length) {G__10762__a[G__10762__i] = arguments[G__10762__i + 2]; ++G__10762__i;}
  more = new cljs.core.IndexedSeq(G__10762__a,0);
} 
return G__10761__delegate.call(this,x,y,more);};
G__10761.cljs$lang$maxFixedArity = 2;
G__10761.cljs$lang$applyTo = (function (arglist__10763){
var x = cljs.core.first(arglist__10763);
arglist__10763 = cljs.core.next(arglist__10763);
var y = cljs.core.first(arglist__10763);
var more = cljs.core.rest(arglist__10763);
return G__10761__delegate(x,y,more);
});
G__10761.cljs$core$IFn$_invoke$arity$variadic = G__10761__delegate;
return G__10761;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__10764 = null;
if (arguments.length > 2) {
var G__10765__i = 0, G__10765__a = new Array(arguments.length -  2);
while (G__10765__i < G__10765__a.length) {G__10765__a[G__10765__i] = arguments[G__10765__i + 2]; ++G__10765__i;}
G__10764 = new cljs.core.IndexedSeq(G__10765__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10764);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__10766__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__10766 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10767__i = 0, G__10767__a = new Array(arguments.length -  2);
while (G__10767__i < G__10767__a.length) {G__10767__a[G__10767__i] = arguments[G__10767__i + 2]; ++G__10767__i;}
  more = new cljs.core.IndexedSeq(G__10767__a,0);
} 
return G__10766__delegate.call(this,x,y,more);};
G__10766.cljs$lang$maxFixedArity = 2;
G__10766.cljs$lang$applyTo = (function (arglist__10768){
var x = cljs.core.first(arglist__10768);
arglist__10768 = cljs.core.next(arglist__10768);
var y = cljs.core.first(arglist__10768);
var more = cljs.core.rest(arglist__10768);
return G__10766__delegate(x,y,more);
});
G__10766.cljs$core$IFn$_invoke$arity$variadic = G__10766__delegate;
return G__10766;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__10769 = null;
if (arguments.length > 2) {
var G__10770__i = 0, G__10770__a = new Array(arguments.length -  2);
while (G__10770__i < G__10770__a.length) {G__10770__a[G__10770__i] = arguments[G__10770__i + 2]; ++G__10770__i;}
G__10769 = new cljs.core.IndexedSeq(G__10770__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10769);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__10771__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__10771 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10772__i = 0, G__10772__a = new Array(arguments.length -  2);
while (G__10772__i < G__10772__a.length) {G__10772__a[G__10772__i] = arguments[G__10772__i + 2]; ++G__10772__i;}
  more = new cljs.core.IndexedSeq(G__10772__a,0);
} 
return G__10771__delegate.call(this,x,y,more);};
G__10771.cljs$lang$maxFixedArity = 2;
G__10771.cljs$lang$applyTo = (function (arglist__10773){
var x = cljs.core.first(arglist__10773);
arglist__10773 = cljs.core.next(arglist__10773);
var y = cljs.core.first(arglist__10773);
var more = cljs.core.rest(arglist__10773);
return G__10771__delegate(x,y,more);
});
G__10771.cljs$core$IFn$_invoke$arity$variadic = G__10771__delegate;
return G__10771;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__10774 = null;
if (arguments.length > 2) {
var G__10775__i = 0, G__10775__a = new Array(arguments.length -  2);
while (G__10775__i < G__10775__a.length) {G__10775__a[G__10775__i] = arguments[G__10775__i + 2]; ++G__10775__i;}
G__10774 = new cljs.core.IndexedSeq(G__10775__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10774);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__10780__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__10780 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10781__i = 0, G__10781__a = new Array(arguments.length -  2);
while (G__10781__i < G__10781__a.length) {G__10781__a[G__10781__i] = arguments[G__10781__i + 2]; ++G__10781__i;}
  more = new cljs.core.IndexedSeq(G__10781__a,0);
} 
return G__10780__delegate.call(this,x,y,more);};
G__10780.cljs$lang$maxFixedArity = 2;
G__10780.cljs$lang$applyTo = (function (arglist__10782){
var x = cljs.core.first(arglist__10782);
arglist__10782 = cljs.core.next(arglist__10782);
var y = cljs.core.first(arglist__10782);
var more = cljs.core.rest(arglist__10782);
return G__10780__delegate(x,y,more);
});
G__10780.cljs$core$IFn$_invoke$arity$variadic = G__10780__delegate;
return G__10780;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__10783 = null;
if (arguments.length > 2) {
var G__10784__i = 0, G__10784__a = new Array(arguments.length -  2);
while (G__10784__i < G__10784__a.length) {G__10784__a[G__10784__i] = arguments[G__10784__i + 2]; ++G__10784__i;}
G__10783 = new cljs.core.IndexedSeq(G__10784__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10783);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__10785__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__10786 = y;
var G__10787 = cljs.core.first(more);
var G__10788 = cljs.core.next(more);
x = G__10786;
y = G__10787;
more = G__10788;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10785 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10789__i = 0, G__10789__a = new Array(arguments.length -  2);
while (G__10789__i < G__10789__a.length) {G__10789__a[G__10789__i] = arguments[G__10789__i + 2]; ++G__10789__i;}
  more = new cljs.core.IndexedSeq(G__10789__a,0);
} 
return G__10785__delegate.call(this,x,y,more);};
G__10785.cljs$lang$maxFixedArity = 2;
G__10785.cljs$lang$applyTo = (function (arglist__10790){
var x = cljs.core.first(arglist__10790);
arglist__10790 = cljs.core.next(arglist__10790);
var y = cljs.core.first(arglist__10790);
var more = cljs.core.rest(arglist__10790);
return G__10785__delegate(x,y,more);
});
G__10785.cljs$core$IFn$_invoke$arity$variadic = G__10785__delegate;
return G__10785;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__10791 = null;
if (arguments.length > 2) {
var G__10792__i = 0, G__10792__a = new Array(arguments.length -  2);
while (G__10792__i < G__10792__a.length) {G__10792__a[G__10792__i] = arguments[G__10792__i + 2]; ++G__10792__i;}
G__10791 = new cljs.core.IndexedSeq(G__10792__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__10793__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__10794 = y;
var G__10795 = cljs.core.first(more);
var G__10796 = cljs.core.next(more);
x = G__10794;
y = G__10795;
more = G__10796;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10793 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10797__i = 0, G__10797__a = new Array(arguments.length -  2);
while (G__10797__i < G__10797__a.length) {G__10797__a[G__10797__i] = arguments[G__10797__i + 2]; ++G__10797__i;}
  more = new cljs.core.IndexedSeq(G__10797__a,0);
} 
return G__10793__delegate.call(this,x,y,more);};
G__10793.cljs$lang$maxFixedArity = 2;
G__10793.cljs$lang$applyTo = (function (arglist__10798){
var x = cljs.core.first(arglist__10798);
arglist__10798 = cljs.core.next(arglist__10798);
var y = cljs.core.first(arglist__10798);
var more = cljs.core.rest(arglist__10798);
return G__10793__delegate(x,y,more);
});
G__10793.cljs$core$IFn$_invoke$arity$variadic = G__10793__delegate;
return G__10793;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__10799 = null;
if (arguments.length > 2) {
var G__10800__i = 0, G__10800__a = new Array(arguments.length -  2);
while (G__10800__i < G__10800__a.length) {G__10800__a[G__10800__i] = arguments[G__10800__i + 2]; ++G__10800__i;}
G__10799 = new cljs.core.IndexedSeq(G__10800__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10799);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__10801__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__10802 = y;
var G__10803 = cljs.core.first(more);
var G__10804 = cljs.core.next(more);
x = G__10802;
y = G__10803;
more = G__10804;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10801 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10805__i = 0, G__10805__a = new Array(arguments.length -  2);
while (G__10805__i < G__10805__a.length) {G__10805__a[G__10805__i] = arguments[G__10805__i + 2]; ++G__10805__i;}
  more = new cljs.core.IndexedSeq(G__10805__a,0);
} 
return G__10801__delegate.call(this,x,y,more);};
G__10801.cljs$lang$maxFixedArity = 2;
G__10801.cljs$lang$applyTo = (function (arglist__10806){
var x = cljs.core.first(arglist__10806);
arglist__10806 = cljs.core.next(arglist__10806);
var y = cljs.core.first(arglist__10806);
var more = cljs.core.rest(arglist__10806);
return G__10801__delegate(x,y,more);
});
G__10801.cljs$core$IFn$_invoke$arity$variadic = G__10801__delegate;
return G__10801;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__10807 = null;
if (arguments.length > 2) {
var G__10808__i = 0, G__10808__a = new Array(arguments.length -  2);
while (G__10808__i < G__10808__a.length) {G__10808__a[G__10808__i] = arguments[G__10808__i + 2]; ++G__10808__i;}
G__10807 = new cljs.core.IndexedSeq(G__10808__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10807);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__10809__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__10810 = y;
var G__10811 = cljs.core.first(more);
var G__10812 = cljs.core.next(more);
x = G__10810;
y = G__10811;
more = G__10812;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10809 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10813__i = 0, G__10813__a = new Array(arguments.length -  2);
while (G__10813__i < G__10813__a.length) {G__10813__a[G__10813__i] = arguments[G__10813__i + 2]; ++G__10813__i;}
  more = new cljs.core.IndexedSeq(G__10813__a,0);
} 
return G__10809__delegate.call(this,x,y,more);};
G__10809.cljs$lang$maxFixedArity = 2;
G__10809.cljs$lang$applyTo = (function (arglist__10814){
var x = cljs.core.first(arglist__10814);
arglist__10814 = cljs.core.next(arglist__10814);
var y = cljs.core.first(arglist__10814);
var more = cljs.core.rest(arglist__10814);
return G__10809__delegate(x,y,more);
});
G__10809.cljs$core$IFn$_invoke$arity$variadic = G__10809__delegate;
return G__10809;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__10815 = null;
if (arguments.length > 2) {
var G__10816__i = 0, G__10816__a = new Array(arguments.length -  2);
while (G__10816__i < G__10816__a.length) {G__10816__a[G__10816__i] = arguments[G__10816__i + 2]; ++G__10816__i;}
G__10815 = new cljs.core.IndexedSeq(G__10816__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10815);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__7974__auto__ = x;
var y__7975__auto__ = y;
return ((x__7974__auto__ > y__7975__auto__) ? x__7974__auto__ : y__7975__auto__);
});
var max__3 = (function() { 
var G__10817__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__7974__auto__ = x;
var y__7975__auto__ = y;
return ((x__7974__auto__ > y__7975__auto__) ? x__7974__auto__ : y__7975__auto__);
})(),more);
};
var G__10817 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10818__i = 0, G__10818__a = new Array(arguments.length -  2);
while (G__10818__i < G__10818__a.length) {G__10818__a[G__10818__i] = arguments[G__10818__i + 2]; ++G__10818__i;}
  more = new cljs.core.IndexedSeq(G__10818__a,0);
} 
return G__10817__delegate.call(this,x,y,more);};
G__10817.cljs$lang$maxFixedArity = 2;
G__10817.cljs$lang$applyTo = (function (arglist__10819){
var x = cljs.core.first(arglist__10819);
arglist__10819 = cljs.core.next(arglist__10819);
var y = cljs.core.first(arglist__10819);
var more = cljs.core.rest(arglist__10819);
return G__10817__delegate(x,y,more);
});
G__10817.cljs$core$IFn$_invoke$arity$variadic = G__10817__delegate;
return G__10817;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__10820 = null;
if (arguments.length > 2) {
var G__10821__i = 0, G__10821__a = new Array(arguments.length -  2);
while (G__10821__i < G__10821__a.length) {G__10821__a[G__10821__i] = arguments[G__10821__i + 2]; ++G__10821__i;}
G__10820 = new cljs.core.IndexedSeq(G__10821__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__7981__auto__ = x;
var y__7982__auto__ = y;
return ((x__7981__auto__ < y__7982__auto__) ? x__7981__auto__ : y__7982__auto__);
});
var min__3 = (function() { 
var G__10822__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__7981__auto__ = x;
var y__7982__auto__ = y;
return ((x__7981__auto__ < y__7982__auto__) ? x__7981__auto__ : y__7982__auto__);
})(),more);
};
var G__10822 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10823__i = 0, G__10823__a = new Array(arguments.length -  2);
while (G__10823__i < G__10823__a.length) {G__10823__a[G__10823__i] = arguments[G__10823__i + 2]; ++G__10823__i;}
  more = new cljs.core.IndexedSeq(G__10823__a,0);
} 
return G__10822__delegate.call(this,x,y,more);};
G__10822.cljs$lang$maxFixedArity = 2;
G__10822.cljs$lang$applyTo = (function (arglist__10824){
var x = cljs.core.first(arglist__10824);
arglist__10824 = cljs.core.next(arglist__10824);
var y = cljs.core.first(arglist__10824);
var more = cljs.core.rest(arglist__10824);
return G__10822__delegate(x,y,more);
});
G__10822.cljs$core$IFn$_invoke$arity$variadic = G__10822__delegate;
return G__10822;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__10825 = null;
if (arguments.length > 2) {
var G__10826__i = 0, G__10826__a = new Array(arguments.length -  2);
while (G__10826__i < G__10826__a.length) {G__10826__a[G__10826__i] = arguments[G__10826__i + 2]; ++G__10826__i;}
G__10825 = new cljs.core.IndexedSeq(G__10826__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10825);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__10827__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__10827 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10828__i = 0, G__10828__a = new Array(arguments.length -  2);
while (G__10828__i < G__10828__a.length) {G__10828__a[G__10828__i] = arguments[G__10828__i + 2]; ++G__10828__i;}
  more = new cljs.core.IndexedSeq(G__10828__a,0);
} 
return G__10827__delegate.call(this,x,y,more);};
G__10827.cljs$lang$maxFixedArity = 2;
G__10827.cljs$lang$applyTo = (function (arglist__10829){
var x = cljs.core.first(arglist__10829);
arglist__10829 = cljs.core.next(arglist__10829);
var y = cljs.core.first(arglist__10829);
var more = cljs.core.rest(arglist__10829);
return G__10827__delegate(x,y,more);
});
G__10827.cljs$core$IFn$_invoke$arity$variadic = G__10827__delegate;
return G__10827;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__10830 = null;
if (arguments.length > 2) {
var G__10831__i = 0, G__10831__a = new Array(arguments.length -  2);
while (G__10831__i < G__10831__a.length) {G__10831__a[G__10831__i] = arguments[G__10831__i + 2]; ++G__10831__i;}
G__10830 = new cljs.core.IndexedSeq(G__10831__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10830);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__10832__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__10832 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10833__i = 0, G__10833__a = new Array(arguments.length -  2);
while (G__10833__i < G__10833__a.length) {G__10833__a[G__10833__i] = arguments[G__10833__i + 2]; ++G__10833__i;}
  more = new cljs.core.IndexedSeq(G__10833__a,0);
} 
return G__10832__delegate.call(this,x,y,more);};
G__10832.cljs$lang$maxFixedArity = 2;
G__10832.cljs$lang$applyTo = (function (arglist__10834){
var x = cljs.core.first(arglist__10834);
arglist__10834 = cljs.core.next(arglist__10834);
var y = cljs.core.first(arglist__10834);
var more = cljs.core.rest(arglist__10834);
return G__10832__delegate(x,y,more);
});
G__10832.cljs$core$IFn$_invoke$arity$variadic = G__10832__delegate;
return G__10832;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__10835 = null;
if (arguments.length > 2) {
var G__10836__i = 0, G__10836__a = new Array(arguments.length -  2);
while (G__10836__i < G__10836__a.length) {G__10836__a[G__10836__i] = arguments[G__10836__i + 2]; ++G__10836__i;}
G__10835 = new cljs.core.IndexedSeq(G__10836__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10835);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__10841__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__10841 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10842__i = 0, G__10842__a = new Array(arguments.length -  2);
while (G__10842__i < G__10842__a.length) {G__10842__a[G__10842__i] = arguments[G__10842__i + 2]; ++G__10842__i;}
  more = new cljs.core.IndexedSeq(G__10842__a,0);
} 
return G__10841__delegate.call(this,x,y,more);};
G__10841.cljs$lang$maxFixedArity = 2;
G__10841.cljs$lang$applyTo = (function (arglist__10843){
var x = cljs.core.first(arglist__10843);
arglist__10843 = cljs.core.next(arglist__10843);
var y = cljs.core.first(arglist__10843);
var more = cljs.core.rest(arglist__10843);
return G__10841__delegate(x,y,more);
});
G__10841.cljs$core$IFn$_invoke$arity$variadic = G__10841__delegate;
return G__10841;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__10844 = null;
if (arguments.length > 2) {
var G__10845__i = 0, G__10845__a = new Array(arguments.length -  2);
while (G__10845__i < G__10845__a.length) {G__10845__a[G__10845__i] = arguments[G__10845__i + 2]; ++G__10845__i;}
G__10844 = new cljs.core.IndexedSeq(G__10845__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10844);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__10846__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__10846 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10847__i = 0, G__10847__a = new Array(arguments.length -  2);
while (G__10847__i < G__10847__a.length) {G__10847__a[G__10847__i] = arguments[G__10847__i + 2]; ++G__10847__i;}
  more = new cljs.core.IndexedSeq(G__10847__a,0);
} 
return G__10846__delegate.call(this,x,y,more);};
G__10846.cljs$lang$maxFixedArity = 2;
G__10846.cljs$lang$applyTo = (function (arglist__10848){
var x = cljs.core.first(arglist__10848);
arglist__10848 = cljs.core.next(arglist__10848);
var y = cljs.core.first(arglist__10848);
var more = cljs.core.rest(arglist__10848);
return G__10846__delegate(x,y,more);
});
G__10846.cljs$core$IFn$_invoke$arity$variadic = G__10846__delegate;
return G__10846;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__10849 = null;
if (arguments.length > 2) {
var G__10850__i = 0, G__10850__a = new Array(arguments.length -  2);
while (G__10850__i < G__10850__a.length) {G__10850__a[G__10850__i] = arguments[G__10850__i + 2]; ++G__10850__i;}
G__10849 = new cljs.core.IndexedSeq(G__10850__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10849);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__10851__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__10851 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10852__i = 0, G__10852__a = new Array(arguments.length -  2);
while (G__10852__i < G__10852__a.length) {G__10852__a[G__10852__i] = arguments[G__10852__i + 2]; ++G__10852__i;}
  more = new cljs.core.IndexedSeq(G__10852__a,0);
} 
return G__10851__delegate.call(this,x,y,more);};
G__10851.cljs$lang$maxFixedArity = 2;
G__10851.cljs$lang$applyTo = (function (arglist__10853){
var x = cljs.core.first(arglist__10853);
arglist__10853 = cljs.core.next(arglist__10853);
var y = cljs.core.first(arglist__10853);
var more = cljs.core.rest(arglist__10853);
return G__10851__delegate(x,y,more);
});
G__10851.cljs$core$IFn$_invoke$arity$variadic = G__10851__delegate;
return G__10851;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__10854 = null;
if (arguments.length > 2) {
var G__10855__i = 0, G__10855__a = new Array(arguments.length -  2);
while (G__10855__i < G__10855__a.length) {G__10855__a[G__10855__i] = arguments[G__10855__i + 2]; ++G__10855__i;}
G__10854 = new cljs.core.IndexedSeq(G__10855__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10854);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__10858 = x;
var G__10859 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__10858,G__10859) : cljs.core.mod.call(null,G__10858,G__10859));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__10860__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__10860 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10861__i = 0, G__10861__a = new Array(arguments.length -  2);
while (G__10861__i < G__10861__a.length) {G__10861__a[G__10861__i] = arguments[G__10861__i + 2]; ++G__10861__i;}
  more = new cljs.core.IndexedSeq(G__10861__a,0);
} 
return G__10860__delegate.call(this,x,y,more);};
G__10860.cljs$lang$maxFixedArity = 2;
G__10860.cljs$lang$applyTo = (function (arglist__10862){
var x = cljs.core.first(arglist__10862);
arglist__10862 = cljs.core.next(arglist__10862);
var y = cljs.core.first(arglist__10862);
var more = cljs.core.rest(arglist__10862);
return G__10860__delegate(x,y,more);
});
G__10860.cljs$core$IFn$_invoke$arity$variadic = G__10860__delegate;
return G__10860;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__10863 = null;
if (arguments.length > 2) {
var G__10864__i = 0, G__10864__a = new Array(arguments.length -  2);
while (G__10864__i < G__10864__a.length) {G__10864__a[G__10864__i] = arguments[G__10864__i + 2]; ++G__10864__i;}
G__10863 = new cljs.core.IndexedSeq(G__10864__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10863);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__10865__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__10865 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10866__i = 0, G__10866__a = new Array(arguments.length -  2);
while (G__10866__i < G__10866__a.length) {G__10866__a[G__10866__i] = arguments[G__10866__i + 2]; ++G__10866__i;}
  more = new cljs.core.IndexedSeq(G__10866__a,0);
} 
return G__10865__delegate.call(this,x,y,more);};
G__10865.cljs$lang$maxFixedArity = 2;
G__10865.cljs$lang$applyTo = (function (arglist__10867){
var x = cljs.core.first(arglist__10867);
arglist__10867 = cljs.core.next(arglist__10867);
var y = cljs.core.first(arglist__10867);
var more = cljs.core.rest(arglist__10867);
return G__10865__delegate(x,y,more);
});
G__10865.cljs$core$IFn$_invoke$arity$variadic = G__10865__delegate;
return G__10865;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__10868 = null;
if (arguments.length > 2) {
var G__10869__i = 0, G__10869__a = new Array(arguments.length -  2);
while (G__10869__i < G__10869__a.length) {G__10869__a[G__10869__i] = arguments[G__10869__i + 2]; ++G__10869__i;}
G__10868 = new cljs.core.IndexedSeq(G__10869__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10868);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__10872 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10872) : Math.floor.call(null,G__10872));
} else {
var G__10873 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10873) : Math.ceil.call(null,G__10873));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__10874__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__10874 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10875__i = 0, G__10875__a = new Array(arguments.length -  2);
while (G__10875__i < G__10875__a.length) {G__10875__a[G__10875__i] = arguments[G__10875__i + 2]; ++G__10875__i;}
  more = new cljs.core.IndexedSeq(G__10875__a,0);
} 
return G__10874__delegate.call(this,x,y,more);};
G__10874.cljs$lang$maxFixedArity = 2;
G__10874.cljs$lang$applyTo = (function (arglist__10876){
var x = cljs.core.first(arglist__10876);
arglist__10876 = cljs.core.next(arglist__10876);
var y = cljs.core.first(arglist__10876);
var more = cljs.core.rest(arglist__10876);
return G__10874__delegate(x,y,more);
});
G__10874.cljs$core$IFn$_invoke$arity$variadic = G__10874__delegate;
return G__10874;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__10877 = null;
if (arguments.length > 2) {
var G__10878__i = 0, G__10878__a = new Array(arguments.length -  2);
while (G__10878__i < G__10878__a.length) {G__10878__a[G__10878__i] = arguments[G__10878__i + 2]; ++G__10878__i;}
G__10877 = new cljs.core.IndexedSeq(G__10878__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__10879__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__10879 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10880__i = 0, G__10880__a = new Array(arguments.length -  2);
while (G__10880__i < G__10880__a.length) {G__10880__a[G__10880__i] = arguments[G__10880__i + 2]; ++G__10880__i;}
  more = new cljs.core.IndexedSeq(G__10880__a,0);
} 
return G__10879__delegate.call(this,x,y,more);};
G__10879.cljs$lang$maxFixedArity = 2;
G__10879.cljs$lang$applyTo = (function (arglist__10881){
var x = cljs.core.first(arglist__10881);
arglist__10881 = cljs.core.next(arglist__10881);
var y = cljs.core.first(arglist__10881);
var more = cljs.core.rest(arglist__10881);
return G__10879__delegate(x,y,more);
});
G__10879.cljs$core$IFn$_invoke$arity$variadic = G__10879__delegate;
return G__10879;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__10882 = null;
if (arguments.length > 2) {
var G__10883__i = 0, G__10883__a = new Array(arguments.length -  2);
while (G__10883__i < G__10883__a.length) {G__10883__a[G__10883__i] = arguments[G__10883__i + 2]; ++G__10883__i;}
G__10882 = new cljs.core.IndexedSeq(G__10883__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10882);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__10884__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__10884 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10885__i = 0, G__10885__a = new Array(arguments.length -  2);
while (G__10885__i < G__10885__a.length) {G__10885__a[G__10885__i] = arguments[G__10885__i + 2]; ++G__10885__i;}
  more = new cljs.core.IndexedSeq(G__10885__a,0);
} 
return G__10884__delegate.call(this,x,y,more);};
G__10884.cljs$lang$maxFixedArity = 2;
G__10884.cljs$lang$applyTo = (function (arglist__10886){
var x = cljs.core.first(arglist__10886);
arglist__10886 = cljs.core.next(arglist__10886);
var y = cljs.core.first(arglist__10886);
var more = cljs.core.rest(arglist__10886);
return G__10884__delegate(x,y,more);
});
G__10884.cljs$core$IFn$_invoke$arity$variadic = G__10884__delegate;
return G__10884;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__10887 = null;
if (arguments.length > 2) {
var G__10888__i = 0, G__10888__a = new Array(arguments.length -  2);
while (G__10888__i < G__10888__a.length) {G__10888__a[G__10888__i] = arguments[G__10888__i + 2]; ++G__10888__i;}
G__10887 = new cljs.core.IndexedSeq(G__10888__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10887);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__10889__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__10889 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10890__i = 0, G__10890__a = new Array(arguments.length -  2);
while (G__10890__i < G__10890__a.length) {G__10890__a[G__10890__i] = arguments[G__10890__i + 2]; ++G__10890__i;}
  more = new cljs.core.IndexedSeq(G__10890__a,0);
} 
return G__10889__delegate.call(this,x,y,more);};
G__10889.cljs$lang$maxFixedArity = 2;
G__10889.cljs$lang$applyTo = (function (arglist__10891){
var x = cljs.core.first(arglist__10891);
arglist__10891 = cljs.core.next(arglist__10891);
var y = cljs.core.first(arglist__10891);
var more = cljs.core.rest(arglist__10891);
return G__10889__delegate(x,y,more);
});
G__10889.cljs$core$IFn$_invoke$arity$variadic = G__10889__delegate;
return G__10889;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__10892 = null;
if (arguments.length > 2) {
var G__10893__i = 0, G__10893__a = new Array(arguments.length -  2);
while (G__10893__i < G__10893__a.length) {G__10893__a[G__10893__i] = arguments[G__10893__i + 2]; ++G__10893__i;}
G__10892 = new cljs.core.IndexedSeq(G__10893__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__10898__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__10899 = y;
var G__10900 = cljs.core.first(more);
var G__10901 = cljs.core.next(more);
x = G__10899;
y = G__10900;
more = G__10901;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10898 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10902__i = 0, G__10902__a = new Array(arguments.length -  2);
while (G__10902__i < G__10902__a.length) {G__10902__a[G__10902__i] = arguments[G__10902__i + 2]; ++G__10902__i;}
  more = new cljs.core.IndexedSeq(G__10902__a,0);
} 
return G__10898__delegate.call(this,x,y,more);};
G__10898.cljs$lang$maxFixedArity = 2;
G__10898.cljs$lang$applyTo = (function (arglist__10903){
var x = cljs.core.first(arglist__10903);
arglist__10903 = cljs.core.next(arglist__10903);
var y = cljs.core.first(arglist__10903);
var more = cljs.core.rest(arglist__10903);
return G__10898__delegate(x,y,more);
});
G__10898.cljs$core$IFn$_invoke$arity$variadic = G__10898__delegate;
return G__10898;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__10904 = null;
if (arguments.length > 2) {
var G__10905__i = 0, G__10905__a = new Array(arguments.length -  2);
while (G__10905__i < G__10905__a.length) {G__10905__a[G__10905__i] = arguments[G__10905__i + 2]; ++G__10905__i;}
G__10904 = new cljs.core.IndexedSeq(G__10905__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10904);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__10906 = (n__$1 - (1));
var G__10907 = cljs.core.next(xs);
n__$1 = G__10906;
xs = G__10907;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__10911 = x;
return goog.string.buildString(G__10911);
}
});
var str__2 = (function() { 
var G__10912__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__10913 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__10914 = cljs.core.next(more);
sb = G__10913;
more = G__10914;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__10912 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__10915__i = 0, G__10915__a = new Array(arguments.length -  1);
while (G__10915__i < G__10915__a.length) {G__10915__a[G__10915__i] = arguments[G__10915__i + 1]; ++G__10915__i;}
  ys = new cljs.core.IndexedSeq(G__10915__a,0);
} 
return G__10912__delegate.call(this,x,ys);};
G__10912.cljs$lang$maxFixedArity = 1;
G__10912.cljs$lang$applyTo = (function (arglist__10916){
var x = cljs.core.first(arglist__10916);
var ys = cljs.core.rest(arglist__10916);
return G__10912__delegate(x,ys);
});
G__10912.cljs$core$IFn$_invoke$arity$variadic = G__10912__delegate;
return G__10912;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__10917 = null;
if (arguments.length > 1) {
var G__10918__i = 0, G__10918__a = new Array(arguments.length -  1);
while (G__10918__i < G__10918__a.length) {G__10918__a[G__10918__i] = arguments[G__10918__i + 1]; ++G__10918__i;}
G__10917 = new cljs.core.IndexedSeq(G__10918__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__10919 = cljs.core.next(xs);
var G__10920 = cljs.core.next(ys);
xs = G__10919;
ys = G__10920;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__10921 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__10922 = cljs.core.next(s);
res = G__10921;
s = G__10922;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__10927 = ((h + (cljs.core.hash((function (){var G__10925 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10925) : cljs.core.key.call(null,G__10925));
})()) ^ cljs.core.hash((function (){var G__10926 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10926) : cljs.core.val.call(null,G__10926));
})()))) % (4503599627370496));
var G__10928 = cljs.core.next(s);
h = G__10927;
s = G__10928;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__10929 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__10930 = cljs.core.next(s__$1);
h = G__10929;
s__$1 = G__10930;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__10941_10951 = cljs.core.seq(fn_map);
var chunk__10942_10952 = null;
var count__10943_10953 = (0);
var i__10944_10954 = (0);
while(true){
if((i__10944_10954 < count__10943_10953)){
var vec__10945_10955 = chunk__10942_10952.cljs$core$IIndexed$_nth$arity$2(null,i__10944_10954);
var key_name_10956 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10945_10955,(0),null);
var f_10957 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10945_10955,(1),null);
var str_name_10958 = (function (){var G__10946 = key_name_10956;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__10946) : cljs.core.name.call(null,G__10946));
})();
(obj[str_name_10958] = f_10957);

var G__10959 = seq__10941_10951;
var G__10960 = chunk__10942_10952;
var G__10961 = count__10943_10953;
var G__10962 = (i__10944_10954 + (1));
seq__10941_10951 = G__10959;
chunk__10942_10952 = G__10960;
count__10943_10953 = G__10961;
i__10944_10954 = G__10962;
continue;
} else {
var temp__4126__auto___10963 = cljs.core.seq(seq__10941_10951);
if(temp__4126__auto___10963){
var seq__10941_10964__$1 = temp__4126__auto___10963;
if(cljs.core.chunked_seq_QMARK_(seq__10941_10964__$1)){
var c__8444__auto___10965 = (function (){var G__10947 = seq__10941_10964__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__10947) : cljs.core.chunk_first.call(null,G__10947));
})();
var G__10966 = (function (){var G__10948 = seq__10941_10964__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__10948) : cljs.core.chunk_rest.call(null,G__10948));
})();
var G__10967 = c__8444__auto___10965;
var G__10968 = cljs.core.count(c__8444__auto___10965);
var G__10969 = (0);
seq__10941_10951 = G__10966;
chunk__10942_10952 = G__10967;
count__10943_10953 = G__10968;
i__10944_10954 = G__10969;
continue;
} else {
var vec__10949_10970 = cljs.core.first(seq__10941_10964__$1);
var key_name_10971 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10949_10970,(0),null);
var f_10972 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10949_10970,(1),null);
var str_name_10973 = (function (){var G__10950 = key_name_10971;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__10950) : cljs.core.name.call(null,G__10950));
})();
(obj[str_name_10973] = f_10972);

var G__10974 = cljs.core.next(seq__10941_10964__$1);
var G__10975 = null;
var G__10976 = (0);
var G__10977 = (0);
seq__10941_10951 = G__10974;
chunk__10942_10952 = G__10975;
count__10943_10953 = G__10976;
i__10944_10954 = G__10977;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__10979 = coll;
if(G__10979){
var bit__8338__auto__ = (G__10979.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__8338__auto__) || (G__10979.cljs$core$IReversible$)){
return true;
} else {
if((!G__10979.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__10979);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__10979);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__10980 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__10980;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__10981 = (i - (1));
var G__10982 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__10981;
r = G__10982;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__10983__i = 0, G__10983__a = new Array(arguments.length -  0);
while (G__10983__i < G__10983__a.length) {G__10983__a[G__10983__i] = arguments[G__10983__i + 0]; ++G__10983__i;}
  xs = new cljs.core.IndexedSeq(G__10983__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__10984){
var xs = cljs.core.seq(arglist__10984);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__7657__auto__ = (coll == null);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var G__10988 = coll;
if(G__10988){
var bit__8331__auto__ = (G__10988.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__8331__auto__) || (G__10988.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__10990 = x;
if(G__10990){
var bit__8338__auto__ = (G__10990.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__8338__auto__) || (G__10990.cljs$core$IList$)){
return true;
} else {
if((!G__10990.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__10990);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__10990);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__7645__auto__ = cljs.core.not(a.ns);
if(and__7645__auto__){
return b.ns;
} else {
return and__7645__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__10997 = a.ns;
var G__10998 = b.ns;
return goog.array.defaultCompare(G__10997,G__10998);
})();
if(((0) === nsc)){
var G__10999 = a.name;
var G__11000 = b.name;
return goog.array.defaultCompare(G__10999,G__11000);
} else {
return nsc;
}
}
} else {
var G__11001 = a.name;
var G__11002 = b.name;
return goog.array.defaultCompare(G__11001,G__11002);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__8078__auto__ = self__._hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__11004 = null;
var G__11004__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__11004__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__11004 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11004__2.call(this,self__,coll);
case 3:
return G__11004__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11004.cljs$core$IFn$_invoke$arity$2 = G__11004__2;
G__11004.cljs$core$IFn$_invoke$arity$3 = G__11004__3;
return G__11004;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args11003){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11003)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__11006 = x;
if(G__11006){
var bit__8331__auto__ = (G__11006.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__8331__auto__) || (G__11006.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__11008 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11008) : cljs.core.name.call(null,G__11008));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__11009 = ls.sval();
ls = G__11009;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__11011 = s;
if(G__11011){
var bit__8331__auto__ = (G__11011.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__8331__auto__) || (G__11011.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__11012 = cljs.core.next(s__$1);
s__$1 = G__11012;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_11013 = (0);
var xs_11014 = cljs.core.seq(coll);
while(true){
if(xs_11014){
(ret[i_11013] = cljs.core.to_array(cljs.core.first(xs_11014)));

var G__11015 = (i_11013 + (1));
var G__11016 = cljs.core.next(xs_11014);
i_11013 = G__11015;
xs_11014 = G__11016;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11019 = (i + (1));
var G__11020 = cljs.core.next(s__$1);
i = G__11019;
s__$1 = G__11020;
continue;
} else {
return a;
}
break;
}
} else {
var n__8544__auto___11021 = size;
var i_11022 = (0);
while(true){
if((i_11022 < n__8544__auto___11021)){
(a[i_11022] = init_val_or_seq);

var G__11023 = (i_11022 + (1));
i_11022 = G__11023;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11026 = (i + (1));
var G__11027 = cljs.core.next(s__$1);
i = G__11026;
s__$1 = G__11027;
continue;
} else {
return a;
}
break;
}
} else {
var n__8544__auto___11028 = size;
var i_11029 = (0);
while(true){
if((i_11029 < n__8544__auto___11028)){
(a[i_11029] = init_val_or_seq);

var G__11030 = (i_11029 + (1));
i_11029 = G__11030;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11033 = (i + (1));
var G__11034 = cljs.core.next(s__$1);
i = G__11033;
s__$1 = G__11034;
continue;
} else {
return a;
}
break;
}
} else {
var n__8544__auto___11035 = size;
var i_11036 = (0);
while(true){
if((i_11036 < n__8544__auto___11035)){
(a[i_11036] = init_val_or_seq);

var G__11037 = (i_11036 + (1));
i_11036 = G__11037;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11040 = (i + (1));
var G__11041 = cljs.core.next(s__$1);
i = G__11040;
s__$1 = G__11041;
continue;
} else {
return a;
}
break;
}
} else {
var n__8544__auto___11042 = size;
var i_11043 = (0);
while(true){
if((i_11043 < n__8544__auto___11042)){
(a[i_11043] = init_val_or_seq);

var G__11044 = (i_11043 + (1));
i_11043 = G__11044;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__11045 = cljs.core.next(s__$1);
var G__11046 = (i - (1));
var G__11047 = (sum + (1));
s__$1 = G__11045;
i = G__11046;
sum = G__11047;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__11067__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__11067 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__11068__i = 0, G__11068__a = new Array(arguments.length -  2);
while (G__11068__i < G__11068__a.length) {G__11068__a[G__11068__i] = arguments[G__11068__i + 2]; ++G__11068__i;}
  zs = new cljs.core.IndexedSeq(G__11068__a,0);
} 
return G__11067__delegate.call(this,x,y,zs);};
G__11067.cljs$lang$maxFixedArity = 2;
G__11067.cljs$lang$applyTo = (function (arglist__11069){
var x = cljs.core.first(arglist__11069);
arglist__11069 = cljs.core.next(arglist__11069);
var y = cljs.core.first(arglist__11069);
var zs = cljs.core.rest(arglist__11069);
return G__11067__delegate(x,y,zs);
});
G__11067.cljs$core$IFn$_invoke$arity$variadic = G__11067__delegate;
return G__11067;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__11070 = null;
if (arguments.length > 2) {
var G__11071__i = 0, G__11071__a = new Array(arguments.length -  2);
while (G__11071__i < G__11071__a.length) {G__11071__a[G__11071__i] = arguments[G__11071__i + 2]; ++G__11071__i;}
G__11070 = new cljs.core.IndexedSeq(G__11071__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11070);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__11072__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__11072 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__11073__i = 0, G__11073__a = new Array(arguments.length -  4);
while (G__11073__i < G__11073__a.length) {G__11073__a[G__11073__i] = arguments[G__11073__i + 4]; ++G__11073__i;}
  more = new cljs.core.IndexedSeq(G__11073__a,0);
} 
return G__11072__delegate.call(this,a,b,c,d,more);};
G__11072.cljs$lang$maxFixedArity = 4;
G__11072.cljs$lang$applyTo = (function (arglist__11074){
var a = cljs.core.first(arglist__11074);
arglist__11074 = cljs.core.next(arglist__11074);
var b = cljs.core.first(arglist__11074);
arglist__11074 = cljs.core.next(arglist__11074);
var c = cljs.core.first(arglist__11074);
arglist__11074 = cljs.core.next(arglist__11074);
var d = cljs.core.first(arglist__11074);
var more = cljs.core.rest(arglist__11074);
return G__11072__delegate(a,b,c,d,more);
});
G__11072.cljs$core$IFn$_invoke$arity$variadic = G__11072__delegate;
return G__11072;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__11075 = null;
if (arguments.length > 4) {
var G__11076__i = 0, G__11076__a = new Array(arguments.length -  4);
while (G__11076__i < G__11076__a.length) {G__11076__a[G__11076__i] = arguments[G__11076__i + 4]; ++G__11076__i;}
G__11075 = new cljs.core.IndexedSeq(G__11076__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__11075);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__11077__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__11078 = ntcoll;
var G__11079 = cljs.core.first(vals);
var G__11080 = cljs.core.next(vals);
tcoll = G__11078;
val = G__11079;
vals = G__11080;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11077 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__11081__i = 0, G__11081__a = new Array(arguments.length -  2);
while (G__11081__i < G__11081__a.length) {G__11081__a[G__11081__i] = arguments[G__11081__i + 2]; ++G__11081__i;}
  vals = new cljs.core.IndexedSeq(G__11081__a,0);
} 
return G__11077__delegate.call(this,tcoll,val,vals);};
G__11077.cljs$lang$maxFixedArity = 2;
G__11077.cljs$lang$applyTo = (function (arglist__11082){
var tcoll = cljs.core.first(arglist__11082);
arglist__11082 = cljs.core.next(arglist__11082);
var val = cljs.core.first(arglist__11082);
var vals = cljs.core.rest(arglist__11082);
return G__11077__delegate(tcoll,val,vals);
});
G__11077.cljs$core$IFn$_invoke$arity$variadic = G__11077__delegate;
return G__11077;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__11083 = null;
if (arguments.length > 2) {
var G__11084__i = 0, G__11084__a = new Array(arguments.length -  2);
while (G__11084__i < G__11084__a.length) {G__11084__a[G__11084__i] = arguments[G__11084__i + 2]; ++G__11084__i;}
G__11083 = new cljs.core.IndexedSeq(G__11084__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__11083);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__11085__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__11086 = ntcoll;
var G__11087 = cljs.core.first(kvs);
var G__11088 = cljs.core.second(kvs);
var G__11089 = cljs.core.nnext(kvs);
tcoll = G__11086;
key = G__11087;
val = G__11088;
kvs = G__11089;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11085 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11090__i = 0, G__11090__a = new Array(arguments.length -  3);
while (G__11090__i < G__11090__a.length) {G__11090__a[G__11090__i] = arguments[G__11090__i + 3]; ++G__11090__i;}
  kvs = new cljs.core.IndexedSeq(G__11090__a,0);
} 
return G__11085__delegate.call(this,tcoll,key,val,kvs);};
G__11085.cljs$lang$maxFixedArity = 3;
G__11085.cljs$lang$applyTo = (function (arglist__11091){
var tcoll = cljs.core.first(arglist__11091);
arglist__11091 = cljs.core.next(arglist__11091);
var key = cljs.core.first(arglist__11091);
arglist__11091 = cljs.core.next(arglist__11091);
var val = cljs.core.first(arglist__11091);
var kvs = cljs.core.rest(arglist__11091);
return G__11085__delegate(tcoll,key,val,kvs);
});
G__11085.cljs$core$IFn$_invoke$arity$variadic = G__11085__delegate;
return G__11085;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__11092 = null;
if (arguments.length > 3) {
var G__11093__i = 0, G__11093__a = new Array(arguments.length -  3);
while (G__11093__i < G__11093__a.length) {G__11093__a[G__11093__i] = arguments[G__11093__i + 3]; ++G__11093__i;}
G__11092 = new cljs.core.IndexedSeq(G__11093__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__11092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__11094__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__11095 = ntcoll;
var G__11096 = cljs.core.first(ks);
var G__11097 = cljs.core.next(ks);
tcoll = G__11095;
key = G__11096;
ks = G__11097;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11094 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11098__i = 0, G__11098__a = new Array(arguments.length -  2);
while (G__11098__i < G__11098__a.length) {G__11098__a[G__11098__i] = arguments[G__11098__i + 2]; ++G__11098__i;}
  ks = new cljs.core.IndexedSeq(G__11098__a,0);
} 
return G__11094__delegate.call(this,tcoll,key,ks);};
G__11094.cljs$lang$maxFixedArity = 2;
G__11094.cljs$lang$applyTo = (function (arglist__11099){
var tcoll = cljs.core.first(arglist__11099);
arglist__11099 = cljs.core.next(arglist__11099);
var key = cljs.core.first(arglist__11099);
var ks = cljs.core.rest(arglist__11099);
return G__11094__delegate(tcoll,key,ks);
});
G__11094.cljs$core$IFn$_invoke$arity$variadic = G__11094__delegate;
return G__11094;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__11100 = null;
if (arguments.length > 2) {
var G__11101__i = 0, G__11101__a = new Array(arguments.length -  2);
while (G__11101__i < G__11101__a.length) {G__11101__a[G__11101__i] = arguments[G__11101__i + 2]; ++G__11101__i;}
G__11100 = new cljs.core.IndexedSeq(G__11101__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__11100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__11102__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__11103 = ntcoll;
var G__11104 = cljs.core.first(vals);
var G__11105 = cljs.core.next(vals);
tcoll = G__11103;
val = G__11104;
vals = G__11105;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11102 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__11106__i = 0, G__11106__a = new Array(arguments.length -  2);
while (G__11106__i < G__11106__a.length) {G__11106__a[G__11106__i] = arguments[G__11106__i + 2]; ++G__11106__i;}
  vals = new cljs.core.IndexedSeq(G__11106__a,0);
} 
return G__11102__delegate.call(this,tcoll,val,vals);};
G__11102.cljs$lang$maxFixedArity = 2;
G__11102.cljs$lang$applyTo = (function (arglist__11107){
var tcoll = cljs.core.first(arglist__11107);
arglist__11107 = cljs.core.next(arglist__11107);
var val = cljs.core.first(arglist__11107);
var vals = cljs.core.rest(arglist__11107);
return G__11102__delegate(tcoll,val,vals);
});
G__11102.cljs$core$IFn$_invoke$arity$variadic = G__11102__delegate;
return G__11102;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__11108 = null;
if (arguments.length > 2) {
var G__11109__i = 0, G__11109__a = new Array(arguments.length -  2);
while (G__11109__i < G__11109__a.length) {G__11109__a[G__11109__i] = arguments[G__11109__i + 2]; ++G__11109__i;}
G__11108 = new cljs.core.IndexedSeq(G__11109__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__11108);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a8588 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a8588);
} else {
var G__11320 = a8588;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11320) : f.call(null,G__11320));
}
} else {
var b8589 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a8588,b8589);
} else {
var G__11321 = a8588;
var G__11322 = b8589;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11321,G__11322) : f.call(null,G__11321,G__11322));
}
} else {
var c8590 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a8588,b8589,c8590);
} else {
var G__11323 = a8588;
var G__11324 = b8589;
var G__11325 = c8590;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11323,G__11324,G__11325) : f.call(null,G__11323,G__11324,G__11325));
}
} else {
var d8591 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a8588,b8589,c8590,d8591);
} else {
var G__11326 = a8588;
var G__11327 = b8589;
var G__11328 = c8590;
var G__11329 = d8591;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11326,G__11327,G__11328,G__11329) : f.call(null,G__11326,G__11327,G__11328,G__11329));
}
} else {
var e8592 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a8588,b8589,c8590,d8591,e8592);
} else {
var G__11330 = a8588;
var G__11331 = b8589;
var G__11332 = c8590;
var G__11333 = d8591;
var G__11334 = e8592;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11330,G__11331,G__11332,G__11333,G__11334) : f.call(null,G__11330,G__11331,G__11332,G__11333,G__11334));
}
} else {
var f8593 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a8588,b8589,c8590,d8591,e8592,f8593);
} else {
var G__11335 = a8588;
var G__11336 = b8589;
var G__11337 = c8590;
var G__11338 = d8591;
var G__11339 = e8592;
var G__11340 = f8593;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__11335,G__11336,G__11337,G__11338,G__11339,G__11340) : f.call(null,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340));
}
} else {
var g8594 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a8588,b8589,c8590,d8591,e8592,f8593,g8594);
} else {
var G__11341 = a8588;
var G__11342 = b8589;
var G__11343 = c8590;
var G__11344 = d8591;
var G__11345 = e8592;
var G__11346 = f8593;
var G__11347 = g8594;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__11341,G__11342,G__11343,G__11344,G__11345,G__11346,G__11347) : f.call(null,G__11341,G__11342,G__11343,G__11344,G__11345,G__11346,G__11347));
}
} else {
var h8595 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595);
} else {
var G__11348 = a8588;
var G__11349 = b8589;
var G__11350 = c8590;
var G__11351 = d8591;
var G__11352 = e8592;
var G__11353 = f8593;
var G__11354 = g8594;
var G__11355 = h8595;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__11348,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355) : f.call(null,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355));
}
} else {
var i8596 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596);
} else {
var G__11356 = a8588;
var G__11357 = b8589;
var G__11358 = c8590;
var G__11359 = d8591;
var G__11360 = e8592;
var G__11361 = f8593;
var G__11362 = g8594;
var G__11363 = h8595;
var G__11364 = i8596;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362,G__11363,G__11364) : f.call(null,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362,G__11363,G__11364));
}
} else {
var j8597 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597);
} else {
var G__11365 = a8588;
var G__11366 = b8589;
var G__11367 = c8590;
var G__11368 = d8591;
var G__11369 = e8592;
var G__11370 = f8593;
var G__11371 = g8594;
var G__11372 = h8595;
var G__11373 = i8596;
var G__11374 = j8597;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__11365,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372,G__11373,G__11374) : f.call(null,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372,G__11373,G__11374));
}
} else {
var k8598 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597,k8598);
} else {
var G__11375 = a8588;
var G__11376 = b8589;
var G__11377 = c8590;
var G__11378 = d8591;
var G__11379 = e8592;
var G__11380 = f8593;
var G__11381 = g8594;
var G__11382 = h8595;
var G__11383 = i8596;
var G__11384 = j8597;
var G__11385 = k8598;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382,G__11383,G__11384,G__11385) : f.call(null,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382,G__11383,G__11384,G__11385));
}
} else {
var l8599 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597,k8598,l8599);
} else {
var G__11386 = a8588;
var G__11387 = b8589;
var G__11388 = c8590;
var G__11389 = d8591;
var G__11390 = e8592;
var G__11391 = f8593;
var G__11392 = g8594;
var G__11393 = h8595;
var G__11394 = i8596;
var G__11395 = j8597;
var G__11396 = k8598;
var G__11397 = l8599;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396,G__11397) : f.call(null,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396,G__11397));
}
} else {
var m8600 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597,k8598,l8599,m8600);
} else {
var G__11398 = a8588;
var G__11399 = b8589;
var G__11400 = c8590;
var G__11401 = d8591;
var G__11402 = e8592;
var G__11403 = f8593;
var G__11404 = g8594;
var G__11405 = h8595;
var G__11406 = i8596;
var G__11407 = j8597;
var G__11408 = k8598;
var G__11409 = l8599;
var G__11410 = m8600;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409,G__11410) : f.call(null,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409,G__11410));
}
} else {
var n8601 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597,k8598,l8599,m8600,n8601);
} else {
var G__11411 = a8588;
var G__11412 = b8589;
var G__11413 = c8590;
var G__11414 = d8591;
var G__11415 = e8592;
var G__11416 = f8593;
var G__11417 = g8594;
var G__11418 = h8595;
var G__11419 = i8596;
var G__11420 = j8597;
var G__11421 = k8598;
var G__11422 = l8599;
var G__11423 = m8600;
var G__11424 = n8601;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__11411,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424) : f.call(null,G__11411,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424));
}
} else {
var o8602 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597,k8598,l8599,m8600,n8601,o8602);
} else {
var G__11425 = a8588;
var G__11426 = b8589;
var G__11427 = c8590;
var G__11428 = d8591;
var G__11429 = e8592;
var G__11430 = f8593;
var G__11431 = g8594;
var G__11432 = h8595;
var G__11433 = i8596;
var G__11434 = j8597;
var G__11435 = k8598;
var G__11436 = l8599;
var G__11437 = m8600;
var G__11438 = n8601;
var G__11439 = o8602;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__11425,G__11426,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439) : f.call(null,G__11425,G__11426,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439));
}
} else {
var p8603 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597,k8598,l8599,m8600,n8601,o8602,p8603);
} else {
var G__11440 = a8588;
var G__11441 = b8589;
var G__11442 = c8590;
var G__11443 = d8591;
var G__11444 = e8592;
var G__11445 = f8593;
var G__11446 = g8594;
var G__11447 = h8595;
var G__11448 = i8596;
var G__11449 = j8597;
var G__11450 = k8598;
var G__11451 = l8599;
var G__11452 = m8600;
var G__11453 = n8601;
var G__11454 = o8602;
var G__11455 = p8603;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455) : f.call(null,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455));
}
} else {
var q8604 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597,k8598,l8599,m8600,n8601,o8602,p8603,q8604);
} else {
var G__11456 = a8588;
var G__11457 = b8589;
var G__11458 = c8590;
var G__11459 = d8591;
var G__11460 = e8592;
var G__11461 = f8593;
var G__11462 = g8594;
var G__11463 = h8595;
var G__11464 = i8596;
var G__11465 = j8597;
var G__11466 = k8598;
var G__11467 = l8599;
var G__11468 = m8600;
var G__11469 = n8601;
var G__11470 = o8602;
var G__11471 = p8603;
var G__11472 = q8604;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__11456,G__11457,G__11458,G__11459,G__11460,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470,G__11471,G__11472) : f.call(null,G__11456,G__11457,G__11458,G__11459,G__11460,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470,G__11471,G__11472));
}
} else {
var r8605 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597,k8598,l8599,m8600,n8601,o8602,p8603,q8604,r8605);
} else {
var G__11473 = a8588;
var G__11474 = b8589;
var G__11475 = c8590;
var G__11476 = d8591;
var G__11477 = e8592;
var G__11478 = f8593;
var G__11479 = g8594;
var G__11480 = h8595;
var G__11481 = i8596;
var G__11482 = j8597;
var G__11483 = k8598;
var G__11484 = l8599;
var G__11485 = m8600;
var G__11486 = n8601;
var G__11487 = o8602;
var G__11488 = p8603;
var G__11489 = q8604;
var G__11490 = r8605;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484,G__11485,G__11486,G__11487,G__11488,G__11489,G__11490) : f.call(null,G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484,G__11485,G__11486,G__11487,G__11488,G__11489,G__11490));
}
} else {
var s8606 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597,k8598,l8599,m8600,n8601,o8602,p8603,q8604,r8605,s8606);
} else {
var G__11491 = a8588;
var G__11492 = b8589;
var G__11493 = c8590;
var G__11494 = d8591;
var G__11495 = e8592;
var G__11496 = f8593;
var G__11497 = g8594;
var G__11498 = h8595;
var G__11499 = i8596;
var G__11500 = j8597;
var G__11501 = k8598;
var G__11502 = l8599;
var G__11503 = m8600;
var G__11504 = n8601;
var G__11505 = o8602;
var G__11506 = p8603;
var G__11507 = q8604;
var G__11508 = r8605;
var G__11509 = s8606;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__11491,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509) : f.call(null,G__11491,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509));
}
} else {
var t8607 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a8588,b8589,c8590,d8591,e8592,f8593,g8594,h8595,i8596,j8597,k8598,l8599,m8600,n8601,o8602,p8603,q8604,r8605,s8606,t8607);
} else {
var G__11510 = a8588;
var G__11511 = b8589;
var G__11512 = c8590;
var G__11513 = d8591;
var G__11514 = e8592;
var G__11515 = f8593;
var G__11516 = g8594;
var G__11517 = h8595;
var G__11518 = i8596;
var G__11519 = j8597;
var G__11520 = k8598;
var G__11521 = l8599;
var G__11522 = m8600;
var G__11523 = n8601;
var G__11524 = o8602;
var G__11525 = p8603;
var G__11526 = q8604;
var G__11527 = r8605;
var G__11528 = s8606;
var G__11529 = t8607;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__11510,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529) : f.call(null,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__11530__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__11530 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__11531__i = 0, G__11531__a = new Array(arguments.length -  5);
while (G__11531__i < G__11531__a.length) {G__11531__a[G__11531__i] = arguments[G__11531__i + 5]; ++G__11531__i;}
  args = new cljs.core.IndexedSeq(G__11531__a,0);
} 
return G__11530__delegate.call(this,f,a,b,c,d,args);};
G__11530.cljs$lang$maxFixedArity = 5;
G__11530.cljs$lang$applyTo = (function (arglist__11532){
var f = cljs.core.first(arglist__11532);
arglist__11532 = cljs.core.next(arglist__11532);
var a = cljs.core.first(arglist__11532);
arglist__11532 = cljs.core.next(arglist__11532);
var b = cljs.core.first(arglist__11532);
arglist__11532 = cljs.core.next(arglist__11532);
var c = cljs.core.first(arglist__11532);
arglist__11532 = cljs.core.next(arglist__11532);
var d = cljs.core.first(arglist__11532);
var args = cljs.core.rest(arglist__11532);
return G__11530__delegate(f,a,b,c,d,args);
});
G__11530.cljs$core$IFn$_invoke$arity$variadic = G__11530__delegate;
return G__11530;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__11533 = null;
if (arguments.length > 5) {
var G__11534__i = 0, G__11534__a = new Array(arguments.length -  5);
while (G__11534__i < G__11534__a.length) {G__11534__a[G__11534__i] = arguments[G__11534__i + 5]; ++G__11534__i;}
G__11533 = new cljs.core.IndexedSeq(G__11534__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__11533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__11550 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11550) : f.call(null,G__11550));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__11551 = cljs.core.meta(obj);
var G__11552 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11551,G__11552) : f.call(null,G__11551,G__11552));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__11553 = cljs.core.meta(obj);
var G__11554 = a;
var G__11555 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11553,G__11554,G__11555) : f.call(null,G__11553,G__11554,G__11555));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__11556 = cljs.core.meta(obj);
var G__11557 = a;
var G__11558 = b;
var G__11559 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11556,G__11557,G__11558,G__11559) : f.call(null,G__11556,G__11557,G__11558,G__11559));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__11560 = cljs.core.meta(obj);
var G__11561 = a;
var G__11562 = b;
var G__11563 = c;
var G__11564 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11560,G__11561,G__11562,G__11563,G__11564) : f.call(null,G__11560,G__11561,G__11562,G__11563,G__11564));
})());
});
var vary_meta__7 = (function() { 
var G__11565__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__11565 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__11566__i = 0, G__11566__a = new Array(arguments.length -  6);
while (G__11566__i < G__11566__a.length) {G__11566__a[G__11566__i] = arguments[G__11566__i + 6]; ++G__11566__i;}
  args = new cljs.core.IndexedSeq(G__11566__a,0);
} 
return G__11565__delegate.call(this,obj,f,a,b,c,d,args);};
G__11565.cljs$lang$maxFixedArity = 6;
G__11565.cljs$lang$applyTo = (function (arglist__11567){
var obj = cljs.core.first(arglist__11567);
arglist__11567 = cljs.core.next(arglist__11567);
var f = cljs.core.first(arglist__11567);
arglist__11567 = cljs.core.next(arglist__11567);
var a = cljs.core.first(arglist__11567);
arglist__11567 = cljs.core.next(arglist__11567);
var b = cljs.core.first(arglist__11567);
arglist__11567 = cljs.core.next(arglist__11567);
var c = cljs.core.first(arglist__11567);
arglist__11567 = cljs.core.next(arglist__11567);
var d = cljs.core.first(arglist__11567);
var args = cljs.core.rest(arglist__11567);
return G__11565__delegate(obj,f,a,b,c,d,args);
});
G__11565.cljs$core$IFn$_invoke$arity$variadic = G__11565__delegate;
return G__11565;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__11568 = null;
if (arguments.length > 6) {
var G__11569__i = 0, G__11569__a = new Array(arguments.length -  6);
while (G__11569__i < G__11569__a.length) {G__11569__a[G__11569__i] = arguments[G__11569__i + 6]; ++G__11569__i;}
G__11568 = new cljs.core.IndexedSeq(G__11569__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__11568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__11570__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__11570 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11571__i = 0, G__11571__a = new Array(arguments.length -  2);
while (G__11571__i < G__11571__a.length) {G__11571__a[G__11571__i] = arguments[G__11571__i + 2]; ++G__11571__i;}
  more = new cljs.core.IndexedSeq(G__11571__a,0);
} 
return G__11570__delegate.call(this,x,y,more);};
G__11570.cljs$lang$maxFixedArity = 2;
G__11570.cljs$lang$applyTo = (function (arglist__11572){
var x = cljs.core.first(arglist__11572);
arglist__11572 = cljs.core.next(arglist__11572);
var y = cljs.core.first(arglist__11572);
var more = cljs.core.rest(arglist__11572);
return G__11570__delegate(x,y,more);
});
G__11570.cljs$core$IFn$_invoke$arity$variadic = G__11570__delegate;
return G__11570;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__11573 = null;
if (arguments.length > 2) {
var G__11574__i = 0, G__11574__a = new Array(arguments.length -  2);
while (G__11574__i < G__11574__a.length) {G__11574__a[G__11574__i] = arguments[G__11574__i + 2]; ++G__11574__i;}
G__11573 = new cljs.core.IndexedSeq(G__11574__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t11578 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t11578 = (function (nil_iter,meta11579){
this.nil_iter = nil_iter;
this.meta11579 = meta11579;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t11578.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t11578.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t11578.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t11578.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_11580){
var self__ = this;
var _11580__$1 = this;
return self__.meta11579;
});

cljs.core.t11578.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_11580,meta11579__$1){
var self__ = this;
var _11580__$1 = this;
return (new cljs.core.t11578(self__.nil_iter,meta11579__$1));
});

cljs.core.t11578.cljs$lang$type = true;

cljs.core.t11578.cljs$lang$ctorStr = "cljs.core/t11578";

cljs.core.t11578.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/t11578");
});

cljs.core.__GT_t11578 = (function __GT_t11578(nil_iter__$1,meta11579){
return (new cljs.core.t11578(nil_iter__$1,meta11579));
});

}

return (new cljs.core.t11578(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3067,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3063,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/blischalk/node-webkit-apps/hoard/target/weasel/repl/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__7645__auto__ = !((lt.stepper == null));
if(and__7645__auto__){
return self__.iter.hasNext();
} else {
return and__7645__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__11581 = lt;
var G__11582 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__11581,G__11582) : self__.xform.call(null,G__11581,G__11582));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__11583 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__11583) : self__.xform.call(null,G__11583));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__11585 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11585) : xform.call(null,G__11585));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__11587 = cljs.core.next(iters__$1);
iters__$1 = G__11587;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__8544__auto___11588 = self__.iters.length;
var i_11589 = (0);
while(true){
if((i_11589 < n__8544__auto___11588)){
(self__.nexts[i_11589] = (self__.iters[i_11589]).next());

var G__11590 = (i_11589 + (1));
i_11589 = G__11590;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__7645__auto__ = !((lt.stepper == null));
if(and__7645__auto__){
return this$.hasNext();
} else {
return and__7645__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__11586 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__11586) : self__.xform.call(null,G__11586));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__11595 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11595) : xform.call(null,G__11595));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__11596_11600 = cljs.core.seq(colls);
var chunk__11597_11601 = null;
var count__11598_11602 = (0);
var i__11599_11603 = (0);
while(true){
if((i__11599_11603 < count__11598_11602)){
var coll_11604 = chunk__11597_11601.cljs$core$IIndexed$_nth$arity$2(null,i__11599_11603);
iters.push(cljs.core.iter(coll_11604));

var G__11605 = seq__11596_11600;
var G__11606 = chunk__11597_11601;
var G__11607 = count__11598_11602;
var G__11608 = (i__11599_11603 + (1));
seq__11596_11600 = G__11605;
chunk__11597_11601 = G__11606;
count__11598_11602 = G__11607;
i__11599_11603 = G__11608;
continue;
} else {
var temp__4126__auto___11609 = cljs.core.seq(seq__11596_11600);
if(temp__4126__auto___11609){
var seq__11596_11610__$1 = temp__4126__auto___11609;
if(cljs.core.chunked_seq_QMARK_(seq__11596_11610__$1)){
var c__8444__auto___11611 = cljs.core.chunk_first(seq__11596_11610__$1);
var G__11612 = cljs.core.chunk_rest(seq__11596_11610__$1);
var G__11613 = c__8444__auto___11611;
var G__11614 = cljs.core.count(c__8444__auto___11611);
var G__11615 = (0);
seq__11596_11600 = G__11612;
chunk__11597_11601 = G__11613;
count__11598_11602 = G__11614;
i__11599_11603 = G__11615;
continue;
} else {
var coll_11616 = cljs.core.first(seq__11596_11610__$1);
iters.push(cljs.core.iter(coll_11616));

var G__11617 = cljs.core.next(seq__11596_11610__$1);
var G__11618 = null;
var G__11619 = (0);
var G__11620 = (0);
seq__11596_11600 = G__11617;
chunk__11597_11601 = G__11618;
count__11598_11602 = G__11619;
i__11599_11603 = G__11620;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__7657__auto__ = cljs.core.seq(coll);
if(or__7657__auto__){
return or__7657__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__11621__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__11621 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__11622__i = 0, G__11622__a = new Array(arguments.length -  2);
while (G__11622__i < G__11622__a.length) {G__11622__a[G__11622__i] = arguments[G__11622__i + 2]; ++G__11622__i;}
  colls = new cljs.core.IndexedSeq(G__11622__a,0);
} 
return G__11621__delegate.call(this,xform,coll,colls);};
G__11621.cljs$lang$maxFixedArity = 2;
G__11621.cljs$lang$applyTo = (function (arglist__11623){
var xform = cljs.core.first(arglist__11623);
arglist__11623 = cljs.core.next(arglist__11623);
var coll = cljs.core.first(arglist__11623);
var colls = cljs.core.rest(arglist__11623);
return G__11621__delegate(xform,coll,colls);
});
G__11621.cljs$core$IFn$_invoke$arity$variadic = G__11621__delegate;
return G__11621;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__11624 = null;
if (arguments.length > 2) {
var G__11625__i = 0, G__11625__a = new Array(arguments.length -  2);
while (G__11625__i < G__11625__a.length) {G__11625__a[G__11625__i] = arguments[G__11625__i + 2]; ++G__11625__i;}
G__11624 = new cljs.core.IndexedSeq(G__11625__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__11624);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__11627 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11627) : pred.call(null,G__11627));
})())){
var G__11628 = pred;
var G__11629 = cljs.core.next(coll);
pred = G__11628;
coll = G__11629;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__7657__auto__ = (function (){var G__11633 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11633) : pred.call(null,G__11633));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var G__11634 = pred;
var G__11635 = cljs.core.next(coll);
pred = G__11634;
coll = G__11635;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__11642 = null;
var G__11642__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__11642__1 = (function (x){
return cljs.core.not((function (){var G__11639 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11639) : f.call(null,G__11639));
})());
});
var G__11642__2 = (function (x,y){
return cljs.core.not((function (){var G__11640 = x;
var G__11641 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11640,G__11641) : f.call(null,G__11640,G__11641));
})());
});
var G__11642__3 = (function() { 
var G__11643__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__11643 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__11644__i = 0, G__11644__a = new Array(arguments.length -  2);
while (G__11644__i < G__11644__a.length) {G__11644__a[G__11644__i] = arguments[G__11644__i + 2]; ++G__11644__i;}
  zs = new cljs.core.IndexedSeq(G__11644__a,0);
} 
return G__11643__delegate.call(this,x,y,zs);};
G__11643.cljs$lang$maxFixedArity = 2;
G__11643.cljs$lang$applyTo = (function (arglist__11645){
var x = cljs.core.first(arglist__11645);
arglist__11645 = cljs.core.next(arglist__11645);
var y = cljs.core.first(arglist__11645);
var zs = cljs.core.rest(arglist__11645);
return G__11643__delegate(x,y,zs);
});
G__11643.cljs$core$IFn$_invoke$arity$variadic = G__11643__delegate;
return G__11643;
})()
;
G__11642 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__11642__0.call(this);
case 1:
return G__11642__1.call(this,x);
case 2:
return G__11642__2.call(this,x,y);
default:
var G__11646 = null;
if (arguments.length > 2) {
var G__11647__i = 0, G__11647__a = new Array(arguments.length -  2);
while (G__11647__i < G__11647__a.length) {G__11647__a[G__11647__i] = arguments[G__11647__i + 2]; ++G__11647__i;}
G__11646 = new cljs.core.IndexedSeq(G__11647__a,0);
}
return G__11642__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11646);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11642.cljs$lang$maxFixedArity = 2;
G__11642.cljs$lang$applyTo = G__11642__3.cljs$lang$applyTo;
G__11642.cljs$core$IFn$_invoke$arity$0 = G__11642__0;
G__11642.cljs$core$IFn$_invoke$arity$1 = G__11642__1;
G__11642.cljs$core$IFn$_invoke$arity$2 = G__11642__2;
G__11642.cljs$core$IFn$_invoke$arity$variadic = G__11642__3.cljs$core$IFn$_invoke$arity$variadic;
return G__11642;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__11648__delegate = function (args){
return x;
};
var G__11648 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11649__i = 0, G__11649__a = new Array(arguments.length -  0);
while (G__11649__i < G__11649__a.length) {G__11649__a[G__11649__i] = arguments[G__11649__i + 0]; ++G__11649__i;}
  args = new cljs.core.IndexedSeq(G__11649__a,0);
} 
return G__11648__delegate.call(this,args);};
G__11648.cljs$lang$maxFixedArity = 0;
G__11648.cljs$lang$applyTo = (function (arglist__11650){
var args = cljs.core.seq(arglist__11650);
return G__11648__delegate(args);
});
G__11648.cljs$core$IFn$_invoke$arity$variadic = G__11648__delegate;
return G__11648;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__11705 = null;
var G__11705__0 = (function (){
var G__11678 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11678) : f.call(null,G__11678));
});
var G__11705__1 = (function (x){
var G__11679 = (function (){var G__11680 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11680) : g.call(null,G__11680));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11679) : f.call(null,G__11679));
});
var G__11705__2 = (function (x,y){
var G__11681 = (function (){var G__11682 = x;
var G__11683 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11682,G__11683) : g.call(null,G__11682,G__11683));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11681) : f.call(null,G__11681));
});
var G__11705__3 = (function (x,y,z){
var G__11684 = (function (){var G__11685 = x;
var G__11686 = y;
var G__11687 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11685,G__11686,G__11687) : g.call(null,G__11685,G__11686,G__11687));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11684) : f.call(null,G__11684));
});
var G__11705__4 = (function() { 
var G__11706__delegate = function (x,y,z,args){
var G__11688 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11688) : f.call(null,G__11688));
};
var G__11706 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11707__i = 0, G__11707__a = new Array(arguments.length -  3);
while (G__11707__i < G__11707__a.length) {G__11707__a[G__11707__i] = arguments[G__11707__i + 3]; ++G__11707__i;}
  args = new cljs.core.IndexedSeq(G__11707__a,0);
} 
return G__11706__delegate.call(this,x,y,z,args);};
G__11706.cljs$lang$maxFixedArity = 3;
G__11706.cljs$lang$applyTo = (function (arglist__11708){
var x = cljs.core.first(arglist__11708);
arglist__11708 = cljs.core.next(arglist__11708);
var y = cljs.core.first(arglist__11708);
arglist__11708 = cljs.core.next(arglist__11708);
var z = cljs.core.first(arglist__11708);
var args = cljs.core.rest(arglist__11708);
return G__11706__delegate(x,y,z,args);
});
G__11706.cljs$core$IFn$_invoke$arity$variadic = G__11706__delegate;
return G__11706;
})()
;
G__11705 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11705__0.call(this);
case 1:
return G__11705__1.call(this,x);
case 2:
return G__11705__2.call(this,x,y);
case 3:
return G__11705__3.call(this,x,y,z);
default:
var G__11709 = null;
if (arguments.length > 3) {
var G__11710__i = 0, G__11710__a = new Array(arguments.length -  3);
while (G__11710__i < G__11710__a.length) {G__11710__a[G__11710__i] = arguments[G__11710__i + 3]; ++G__11710__i;}
G__11709 = new cljs.core.IndexedSeq(G__11710__a,0);
}
return G__11705__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11705.cljs$lang$maxFixedArity = 3;
G__11705.cljs$lang$applyTo = G__11705__4.cljs$lang$applyTo;
G__11705.cljs$core$IFn$_invoke$arity$0 = G__11705__0;
G__11705.cljs$core$IFn$_invoke$arity$1 = G__11705__1;
G__11705.cljs$core$IFn$_invoke$arity$2 = G__11705__2;
G__11705.cljs$core$IFn$_invoke$arity$3 = G__11705__3;
G__11705.cljs$core$IFn$_invoke$arity$variadic = G__11705__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11705;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__11711 = null;
var G__11711__0 = (function (){
var G__11689 = (function (){var G__11690 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11690) : g.call(null,G__11690));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11689) : f.call(null,G__11689));
});
var G__11711__1 = (function (x){
var G__11691 = (function (){var G__11692 = (function (){var G__11693 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__11693) : h.call(null,G__11693));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11692) : g.call(null,G__11692));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11691) : f.call(null,G__11691));
});
var G__11711__2 = (function (x,y){
var G__11694 = (function (){var G__11695 = (function (){var G__11696 = x;
var G__11697 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__11696,G__11697) : h.call(null,G__11696,G__11697));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11695) : g.call(null,G__11695));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11694) : f.call(null,G__11694));
});
var G__11711__3 = (function (x,y,z){
var G__11698 = (function (){var G__11699 = (function (){var G__11700 = x;
var G__11701 = y;
var G__11702 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__11700,G__11701,G__11702) : h.call(null,G__11700,G__11701,G__11702));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11699) : g.call(null,G__11699));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11698) : f.call(null,G__11698));
});
var G__11711__4 = (function() { 
var G__11712__delegate = function (x,y,z,args){
var G__11703 = (function (){var G__11704 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11704) : g.call(null,G__11704));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11703) : f.call(null,G__11703));
};
var G__11712 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11713__i = 0, G__11713__a = new Array(arguments.length -  3);
while (G__11713__i < G__11713__a.length) {G__11713__a[G__11713__i] = arguments[G__11713__i + 3]; ++G__11713__i;}
  args = new cljs.core.IndexedSeq(G__11713__a,0);
} 
return G__11712__delegate.call(this,x,y,z,args);};
G__11712.cljs$lang$maxFixedArity = 3;
G__11712.cljs$lang$applyTo = (function (arglist__11714){
var x = cljs.core.first(arglist__11714);
arglist__11714 = cljs.core.next(arglist__11714);
var y = cljs.core.first(arglist__11714);
arglist__11714 = cljs.core.next(arglist__11714);
var z = cljs.core.first(arglist__11714);
var args = cljs.core.rest(arglist__11714);
return G__11712__delegate(x,y,z,args);
});
G__11712.cljs$core$IFn$_invoke$arity$variadic = G__11712__delegate;
return G__11712;
})()
;
G__11711 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11711__0.call(this);
case 1:
return G__11711__1.call(this,x);
case 2:
return G__11711__2.call(this,x,y);
case 3:
return G__11711__3.call(this,x,y,z);
default:
var G__11715 = null;
if (arguments.length > 3) {
var G__11716__i = 0, G__11716__a = new Array(arguments.length -  3);
while (G__11716__i < G__11716__a.length) {G__11716__a[G__11716__i] = arguments[G__11716__i + 3]; ++G__11716__i;}
G__11715 = new cljs.core.IndexedSeq(G__11716__a,0);
}
return G__11711__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11711.cljs$lang$maxFixedArity = 3;
G__11711.cljs$lang$applyTo = G__11711__4.cljs$lang$applyTo;
G__11711.cljs$core$IFn$_invoke$arity$0 = G__11711__0;
G__11711.cljs$core$IFn$_invoke$arity$1 = G__11711__1;
G__11711.cljs$core$IFn$_invoke$arity$2 = G__11711__2;
G__11711.cljs$core$IFn$_invoke$arity$3 = G__11711__3;
G__11711.cljs$core$IFn$_invoke$arity$variadic = G__11711__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11711;
})()
});
var comp__4 = (function() { 
var G__11717__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__11718__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__11719 = cljs.core.first(fs__$2).call(null,ret);
var G__11720 = cljs.core.next(fs__$2);
ret = G__11719;
fs__$2 = G__11720;
continue;
} else {
return ret;
}
break;
}
};
var G__11718 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11721__i = 0, G__11721__a = new Array(arguments.length -  0);
while (G__11721__i < G__11721__a.length) {G__11721__a[G__11721__i] = arguments[G__11721__i + 0]; ++G__11721__i;}
  args = new cljs.core.IndexedSeq(G__11721__a,0);
} 
return G__11718__delegate.call(this,args);};
G__11718.cljs$lang$maxFixedArity = 0;
G__11718.cljs$lang$applyTo = (function (arglist__11722){
var args = cljs.core.seq(arglist__11722);
return G__11718__delegate(args);
});
G__11718.cljs$core$IFn$_invoke$arity$variadic = G__11718__delegate;
return G__11718;
})()
;
;})(fs__$1))
};
var G__11717 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__11723__i = 0, G__11723__a = new Array(arguments.length -  3);
while (G__11723__i < G__11723__a.length) {G__11723__a[G__11723__i] = arguments[G__11723__i + 3]; ++G__11723__i;}
  fs = new cljs.core.IndexedSeq(G__11723__a,0);
} 
return G__11717__delegate.call(this,f1,f2,f3,fs);};
G__11717.cljs$lang$maxFixedArity = 3;
G__11717.cljs$lang$applyTo = (function (arglist__11724){
var f1 = cljs.core.first(arglist__11724);
arglist__11724 = cljs.core.next(arglist__11724);
var f2 = cljs.core.first(arglist__11724);
arglist__11724 = cljs.core.next(arglist__11724);
var f3 = cljs.core.first(arglist__11724);
var fs = cljs.core.rest(arglist__11724);
return G__11717__delegate(f1,f2,f3,fs);
});
G__11717.cljs$core$IFn$_invoke$arity$variadic = G__11717__delegate;
return G__11717;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__11725 = null;
if (arguments.length > 3) {
var G__11726__i = 0, G__11726__a = new Array(arguments.length -  3);
while (G__11726__i < G__11726__a.length) {G__11726__a[G__11726__i] = arguments[G__11726__i + 3]; ++G__11726__i;}
G__11725 = new cljs.core.IndexedSeq(G__11726__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__11725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__11811 = null;
var G__11811__0 = (function (){
var G__11769 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11769) : f.call(null,G__11769));
});
var G__11811__1 = (function (x){
var G__11770 = arg1;
var G__11771 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11770,G__11771) : f.call(null,G__11770,G__11771));
});
var G__11811__2 = (function (x,y){
var G__11772 = arg1;
var G__11773 = x;
var G__11774 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11772,G__11773,G__11774) : f.call(null,G__11772,G__11773,G__11774));
});
var G__11811__3 = (function (x,y,z){
var G__11775 = arg1;
var G__11776 = x;
var G__11777 = y;
var G__11778 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11775,G__11776,G__11777,G__11778) : f.call(null,G__11775,G__11776,G__11777,G__11778));
});
var G__11811__4 = (function() { 
var G__11812__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__11812 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11813__i = 0, G__11813__a = new Array(arguments.length -  3);
while (G__11813__i < G__11813__a.length) {G__11813__a[G__11813__i] = arguments[G__11813__i + 3]; ++G__11813__i;}
  args = new cljs.core.IndexedSeq(G__11813__a,0);
} 
return G__11812__delegate.call(this,x,y,z,args);};
G__11812.cljs$lang$maxFixedArity = 3;
G__11812.cljs$lang$applyTo = (function (arglist__11814){
var x = cljs.core.first(arglist__11814);
arglist__11814 = cljs.core.next(arglist__11814);
var y = cljs.core.first(arglist__11814);
arglist__11814 = cljs.core.next(arglist__11814);
var z = cljs.core.first(arglist__11814);
var args = cljs.core.rest(arglist__11814);
return G__11812__delegate(x,y,z,args);
});
G__11812.cljs$core$IFn$_invoke$arity$variadic = G__11812__delegate;
return G__11812;
})()
;
G__11811 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11811__0.call(this);
case 1:
return G__11811__1.call(this,x);
case 2:
return G__11811__2.call(this,x,y);
case 3:
return G__11811__3.call(this,x,y,z);
default:
var G__11815 = null;
if (arguments.length > 3) {
var G__11816__i = 0, G__11816__a = new Array(arguments.length -  3);
while (G__11816__i < G__11816__a.length) {G__11816__a[G__11816__i] = arguments[G__11816__i + 3]; ++G__11816__i;}
G__11815 = new cljs.core.IndexedSeq(G__11816__a,0);
}
return G__11811__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11815);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11811.cljs$lang$maxFixedArity = 3;
G__11811.cljs$lang$applyTo = G__11811__4.cljs$lang$applyTo;
G__11811.cljs$core$IFn$_invoke$arity$0 = G__11811__0;
G__11811.cljs$core$IFn$_invoke$arity$1 = G__11811__1;
G__11811.cljs$core$IFn$_invoke$arity$2 = G__11811__2;
G__11811.cljs$core$IFn$_invoke$arity$3 = G__11811__3;
G__11811.cljs$core$IFn$_invoke$arity$variadic = G__11811__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11811;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__11817 = null;
var G__11817__0 = (function (){
var G__11779 = arg1;
var G__11780 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11779,G__11780) : f.call(null,G__11779,G__11780));
});
var G__11817__1 = (function (x){
var G__11781 = arg1;
var G__11782 = arg2;
var G__11783 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11781,G__11782,G__11783) : f.call(null,G__11781,G__11782,G__11783));
});
var G__11817__2 = (function (x,y){
var G__11784 = arg1;
var G__11785 = arg2;
var G__11786 = x;
var G__11787 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11784,G__11785,G__11786,G__11787) : f.call(null,G__11784,G__11785,G__11786,G__11787));
});
var G__11817__3 = (function (x,y,z){
var G__11788 = arg1;
var G__11789 = arg2;
var G__11790 = x;
var G__11791 = y;
var G__11792 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11788,G__11789,G__11790,G__11791,G__11792) : f.call(null,G__11788,G__11789,G__11790,G__11791,G__11792));
});
var G__11817__4 = (function() { 
var G__11818__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__11818 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11819__i = 0, G__11819__a = new Array(arguments.length -  3);
while (G__11819__i < G__11819__a.length) {G__11819__a[G__11819__i] = arguments[G__11819__i + 3]; ++G__11819__i;}
  args = new cljs.core.IndexedSeq(G__11819__a,0);
} 
return G__11818__delegate.call(this,x,y,z,args);};
G__11818.cljs$lang$maxFixedArity = 3;
G__11818.cljs$lang$applyTo = (function (arglist__11820){
var x = cljs.core.first(arglist__11820);
arglist__11820 = cljs.core.next(arglist__11820);
var y = cljs.core.first(arglist__11820);
arglist__11820 = cljs.core.next(arglist__11820);
var z = cljs.core.first(arglist__11820);
var args = cljs.core.rest(arglist__11820);
return G__11818__delegate(x,y,z,args);
});
G__11818.cljs$core$IFn$_invoke$arity$variadic = G__11818__delegate;
return G__11818;
})()
;
G__11817 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11817__0.call(this);
case 1:
return G__11817__1.call(this,x);
case 2:
return G__11817__2.call(this,x,y);
case 3:
return G__11817__3.call(this,x,y,z);
default:
var G__11821 = null;
if (arguments.length > 3) {
var G__11822__i = 0, G__11822__a = new Array(arguments.length -  3);
while (G__11822__i < G__11822__a.length) {G__11822__a[G__11822__i] = arguments[G__11822__i + 3]; ++G__11822__i;}
G__11821 = new cljs.core.IndexedSeq(G__11822__a,0);
}
return G__11817__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11821);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11817.cljs$lang$maxFixedArity = 3;
G__11817.cljs$lang$applyTo = G__11817__4.cljs$lang$applyTo;
G__11817.cljs$core$IFn$_invoke$arity$0 = G__11817__0;
G__11817.cljs$core$IFn$_invoke$arity$1 = G__11817__1;
G__11817.cljs$core$IFn$_invoke$arity$2 = G__11817__2;
G__11817.cljs$core$IFn$_invoke$arity$3 = G__11817__3;
G__11817.cljs$core$IFn$_invoke$arity$variadic = G__11817__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11817;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__11823 = null;
var G__11823__0 = (function (){
var G__11793 = arg1;
var G__11794 = arg2;
var G__11795 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11793,G__11794,G__11795) : f.call(null,G__11793,G__11794,G__11795));
});
var G__11823__1 = (function (x){
var G__11796 = arg1;
var G__11797 = arg2;
var G__11798 = arg3;
var G__11799 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11796,G__11797,G__11798,G__11799) : f.call(null,G__11796,G__11797,G__11798,G__11799));
});
var G__11823__2 = (function (x,y){
var G__11800 = arg1;
var G__11801 = arg2;
var G__11802 = arg3;
var G__11803 = x;
var G__11804 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11800,G__11801,G__11802,G__11803,G__11804) : f.call(null,G__11800,G__11801,G__11802,G__11803,G__11804));
});
var G__11823__3 = (function (x,y,z){
var G__11805 = arg1;
var G__11806 = arg2;
var G__11807 = arg3;
var G__11808 = x;
var G__11809 = y;
var G__11810 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__11805,G__11806,G__11807,G__11808,G__11809,G__11810) : f.call(null,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810));
});
var G__11823__4 = (function() { 
var G__11824__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__11824 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__11825__i = 0, G__11825__a = new Array(arguments.length -  3);
while (G__11825__i < G__11825__a.length) {G__11825__a[G__11825__i] = arguments[G__11825__i + 3]; ++G__11825__i;}
  args = new cljs.core.IndexedSeq(G__11825__a,0);
} 
return G__11824__delegate.call(this,x,y,z,args);};
G__11824.cljs$lang$maxFixedArity = 3;
G__11824.cljs$lang$applyTo = (function (arglist__11826){
var x = cljs.core.first(arglist__11826);
arglist__11826 = cljs.core.next(arglist__11826);
var y = cljs.core.first(arglist__11826);
arglist__11826 = cljs.core.next(arglist__11826);
var z = cljs.core.first(arglist__11826);
var args = cljs.core.rest(arglist__11826);
return G__11824__delegate(x,y,z,args);
});
G__11824.cljs$core$IFn$_invoke$arity$variadic = G__11824__delegate;
return G__11824;
})()
;
G__11823 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__11823__0.call(this);
case 1:
return G__11823__1.call(this,x);
case 2:
return G__11823__2.call(this,x,y);
case 3:
return G__11823__3.call(this,x,y,z);
default:
var G__11827 = null;
if (arguments.length > 3) {
var G__11828__i = 0, G__11828__a = new Array(arguments.length -  3);
while (G__11828__i < G__11828__a.length) {G__11828__a[G__11828__i] = arguments[G__11828__i + 3]; ++G__11828__i;}
G__11827 = new cljs.core.IndexedSeq(G__11828__a,0);
}
return G__11823__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__11827);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11823.cljs$lang$maxFixedArity = 3;
G__11823.cljs$lang$applyTo = G__11823__4.cljs$lang$applyTo;
G__11823.cljs$core$IFn$_invoke$arity$0 = G__11823__0;
G__11823.cljs$core$IFn$_invoke$arity$1 = G__11823__1;
G__11823.cljs$core$IFn$_invoke$arity$2 = G__11823__2;
G__11823.cljs$core$IFn$_invoke$arity$3 = G__11823__3;
G__11823.cljs$core$IFn$_invoke$arity$variadic = G__11823__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11823;
})()
});
var partial__5 = (function() { 
var G__11829__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__11830__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__11830 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11831__i = 0, G__11831__a = new Array(arguments.length -  0);
while (G__11831__i < G__11831__a.length) {G__11831__a[G__11831__i] = arguments[G__11831__i + 0]; ++G__11831__i;}
  args = new cljs.core.IndexedSeq(G__11831__a,0);
} 
return G__11830__delegate.call(this,args);};
G__11830.cljs$lang$maxFixedArity = 0;
G__11830.cljs$lang$applyTo = (function (arglist__11832){
var args = cljs.core.seq(arglist__11832);
return G__11830__delegate(args);
});
G__11830.cljs$core$IFn$_invoke$arity$variadic = G__11830__delegate;
return G__11830;
})()
;
};
var G__11829 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__11833__i = 0, G__11833__a = new Array(arguments.length -  4);
while (G__11833__i < G__11833__a.length) {G__11833__a[G__11833__i] = arguments[G__11833__i + 4]; ++G__11833__i;}
  more = new cljs.core.IndexedSeq(G__11833__a,0);
} 
return G__11829__delegate.call(this,f,arg1,arg2,arg3,more);};
G__11829.cljs$lang$maxFixedArity = 4;
G__11829.cljs$lang$applyTo = (function (arglist__11834){
var f = cljs.core.first(arglist__11834);
arglist__11834 = cljs.core.next(arglist__11834);
var arg1 = cljs.core.first(arglist__11834);
arglist__11834 = cljs.core.next(arglist__11834);
var arg2 = cljs.core.first(arglist__11834);
arglist__11834 = cljs.core.next(arglist__11834);
var arg3 = cljs.core.first(arglist__11834);
var more = cljs.core.rest(arglist__11834);
return G__11829__delegate(f,arg1,arg2,arg3,more);
});
G__11829.cljs$core$IFn$_invoke$arity$variadic = G__11829__delegate;
return G__11829;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__11835 = null;
if (arguments.length > 4) {
var G__11836__i = 0, G__11836__a = new Array(arguments.length -  4);
while (G__11836__i < G__11836__a.length) {G__11836__a[G__11836__i] = arguments[G__11836__i + 4]; ++G__11836__i;}
G__11835 = new cljs.core.IndexedSeq(G__11836__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__11835);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__11869 = null;
var G__11869__1 = (function (a){
var G__11853 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11853) : f.call(null,G__11853));
});
var G__11869__2 = (function (a,b){
var G__11854 = (((a == null))?x:a);
var G__11855 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11854,G__11855) : f.call(null,G__11854,G__11855));
});
var G__11869__3 = (function (a,b,c){
var G__11856 = (((a == null))?x:a);
var G__11857 = b;
var G__11858 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11856,G__11857,G__11858) : f.call(null,G__11856,G__11857,G__11858));
});
var G__11869__4 = (function() { 
var G__11870__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__11870 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__11871__i = 0, G__11871__a = new Array(arguments.length -  3);
while (G__11871__i < G__11871__a.length) {G__11871__a[G__11871__i] = arguments[G__11871__i + 3]; ++G__11871__i;}
  ds = new cljs.core.IndexedSeq(G__11871__a,0);
} 
return G__11870__delegate.call(this,a,b,c,ds);};
G__11870.cljs$lang$maxFixedArity = 3;
G__11870.cljs$lang$applyTo = (function (arglist__11872){
var a = cljs.core.first(arglist__11872);
arglist__11872 = cljs.core.next(arglist__11872);
var b = cljs.core.first(arglist__11872);
arglist__11872 = cljs.core.next(arglist__11872);
var c = cljs.core.first(arglist__11872);
var ds = cljs.core.rest(arglist__11872);
return G__11870__delegate(a,b,c,ds);
});
G__11870.cljs$core$IFn$_invoke$arity$variadic = G__11870__delegate;
return G__11870;
})()
;
G__11869 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__11869__1.call(this,a);
case 2:
return G__11869__2.call(this,a,b);
case 3:
return G__11869__3.call(this,a,b,c);
default:
var G__11873 = null;
if (arguments.length > 3) {
var G__11874__i = 0, G__11874__a = new Array(arguments.length -  3);
while (G__11874__i < G__11874__a.length) {G__11874__a[G__11874__i] = arguments[G__11874__i + 3]; ++G__11874__i;}
G__11873 = new cljs.core.IndexedSeq(G__11874__a,0);
}
return G__11869__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__11873);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11869.cljs$lang$maxFixedArity = 3;
G__11869.cljs$lang$applyTo = G__11869__4.cljs$lang$applyTo;
G__11869.cljs$core$IFn$_invoke$arity$1 = G__11869__1;
G__11869.cljs$core$IFn$_invoke$arity$2 = G__11869__2;
G__11869.cljs$core$IFn$_invoke$arity$3 = G__11869__3;
G__11869.cljs$core$IFn$_invoke$arity$variadic = G__11869__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11869;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__11875 = null;
var G__11875__2 = (function (a,b){
var G__11859 = (((a == null))?x:a);
var G__11860 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11859,G__11860) : f.call(null,G__11859,G__11860));
});
var G__11875__3 = (function (a,b,c){
var G__11861 = (((a == null))?x:a);
var G__11862 = (((b == null))?y:b);
var G__11863 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11861,G__11862,G__11863) : f.call(null,G__11861,G__11862,G__11863));
});
var G__11875__4 = (function() { 
var G__11876__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__11876 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__11877__i = 0, G__11877__a = new Array(arguments.length -  3);
while (G__11877__i < G__11877__a.length) {G__11877__a[G__11877__i] = arguments[G__11877__i + 3]; ++G__11877__i;}
  ds = new cljs.core.IndexedSeq(G__11877__a,0);
} 
return G__11876__delegate.call(this,a,b,c,ds);};
G__11876.cljs$lang$maxFixedArity = 3;
G__11876.cljs$lang$applyTo = (function (arglist__11878){
var a = cljs.core.first(arglist__11878);
arglist__11878 = cljs.core.next(arglist__11878);
var b = cljs.core.first(arglist__11878);
arglist__11878 = cljs.core.next(arglist__11878);
var c = cljs.core.first(arglist__11878);
var ds = cljs.core.rest(arglist__11878);
return G__11876__delegate(a,b,c,ds);
});
G__11876.cljs$core$IFn$_invoke$arity$variadic = G__11876__delegate;
return G__11876;
})()
;
G__11875 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__11875__2.call(this,a,b);
case 3:
return G__11875__3.call(this,a,b,c);
default:
var G__11879 = null;
if (arguments.length > 3) {
var G__11880__i = 0, G__11880__a = new Array(arguments.length -  3);
while (G__11880__i < G__11880__a.length) {G__11880__a[G__11880__i] = arguments[G__11880__i + 3]; ++G__11880__i;}
G__11879 = new cljs.core.IndexedSeq(G__11880__a,0);
}
return G__11875__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__11879);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11875.cljs$lang$maxFixedArity = 3;
G__11875.cljs$lang$applyTo = G__11875__4.cljs$lang$applyTo;
G__11875.cljs$core$IFn$_invoke$arity$2 = G__11875__2;
G__11875.cljs$core$IFn$_invoke$arity$3 = G__11875__3;
G__11875.cljs$core$IFn$_invoke$arity$variadic = G__11875__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11875;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__11881 = null;
var G__11881__2 = (function (a,b){
var G__11864 = (((a == null))?x:a);
var G__11865 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11864,G__11865) : f.call(null,G__11864,G__11865));
});
var G__11881__3 = (function (a,b,c){
var G__11866 = (((a == null))?x:a);
var G__11867 = (((b == null))?y:b);
var G__11868 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11866,G__11867,G__11868) : f.call(null,G__11866,G__11867,G__11868));
});
var G__11881__4 = (function() { 
var G__11882__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__11882 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__11883__i = 0, G__11883__a = new Array(arguments.length -  3);
while (G__11883__i < G__11883__a.length) {G__11883__a[G__11883__i] = arguments[G__11883__i + 3]; ++G__11883__i;}
  ds = new cljs.core.IndexedSeq(G__11883__a,0);
} 
return G__11882__delegate.call(this,a,b,c,ds);};
G__11882.cljs$lang$maxFixedArity = 3;
G__11882.cljs$lang$applyTo = (function (arglist__11884){
var a = cljs.core.first(arglist__11884);
arglist__11884 = cljs.core.next(arglist__11884);
var b = cljs.core.first(arglist__11884);
arglist__11884 = cljs.core.next(arglist__11884);
var c = cljs.core.first(arglist__11884);
var ds = cljs.core.rest(arglist__11884);
return G__11882__delegate(a,b,c,ds);
});
G__11882.cljs$core$IFn$_invoke$arity$variadic = G__11882__delegate;
return G__11882;
})()
;
G__11881 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__11881__2.call(this,a,b);
case 3:
return G__11881__3.call(this,a,b,c);
default:
var G__11885 = null;
if (arguments.length > 3) {
var G__11886__i = 0, G__11886__a = new Array(arguments.length -  3);
while (G__11886__i < G__11886__a.length) {G__11886__a[G__11886__i] = arguments[G__11886__i + 3]; ++G__11886__i;}
G__11885 = new cljs.core.IndexedSeq(G__11886__a,0);
}
return G__11881__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__11885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11881.cljs$lang$maxFixedArity = 3;
G__11881.cljs$lang$applyTo = G__11881__4.cljs$lang$applyTo;
G__11881.cljs$core$IFn$_invoke$arity$2 = G__11881__2;
G__11881.cljs$core$IFn$_invoke$arity$3 = G__11881__3;
G__11881.cljs$core$IFn$_invoke$arity$variadic = G__11881__4.cljs$core$IFn$_invoke$arity$variadic;
return G__11881;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__11917 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__11917) : cljs.core.volatile_BANG_.call(null,G__11917));
})();
return ((function (i){
return (function() {
var G__11947 = null;
var G__11947__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11947__1 = (function (result){
var G__11918 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11918) : rf.call(null,G__11918));
});
var G__11947__2 = (function (result,input){
var G__11919 = result;
var G__11920 = (function (){var G__11921 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__11922 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11921,G__11922) : f.call(null,G__11921,G__11922));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11919,G__11920) : rf.call(null,G__11919,G__11920));
});
G__11947 = function(result,input){
switch(arguments.length){
case 0:
return G__11947__0.call(this);
case 1:
return G__11947__1.call(this,result);
case 2:
return G__11947__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11947.cljs$core$IFn$_invoke$arity$0 = G__11947__0;
G__11947.cljs$core$IFn$_invoke$arity$1 = G__11947__1;
G__11947.cljs$core$IFn$_invoke$arity$2 = G__11947__2;
return G__11947;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__8544__auto___11948 = size;
var i_11949 = (0);
while(true){
if((i_11949 < n__8544__auto___11948)){
cljs.core.chunk_append(b,(function (){var G__11943 = (idx + i_11949);
var G__11944 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11949);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11943,G__11944) : f.call(null,G__11943,G__11944));
})());

var G__11950 = (i_11949 + (1));
i_11949 = G__11950;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__11945 = idx;
var G__11946 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11945,G__11946) : f.call(null,G__11945,G__11946));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__11969 = null;
var G__11969__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__11969__1 = (function (result){
var G__11963 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__11963) : rf.call(null,G__11963));
});
var G__11969__2 = (function (result,input){
var v = (function (){var G__11964 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11964) : f.call(null,G__11964));
})();
if((v == null)){
return result;
} else {
var G__11965 = result;
var G__11966 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11965,G__11966) : rf.call(null,G__11965,G__11966));
}
});
G__11969 = function(result,input){
switch(arguments.length){
case 0:
return G__11969__0.call(this);
case 1:
return G__11969__1.call(this,result);
case 2:
return G__11969__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11969.cljs$core$IFn$_invoke$arity$0 = G__11969__0;
G__11969.cljs$core$IFn$_invoke$arity$1 = G__11969__1;
G__11969.cljs$core$IFn$_invoke$arity$2 = G__11969__2;
return G__11969;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__8544__auto___11970 = size;
var i_11971 = (0);
while(true){
if((i_11971 < n__8544__auto___11970)){
var x_11972 = (function (){var G__11967 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_11971);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11967) : f.call(null,G__11967));
})();
if((x_11972 == null)){
} else {
cljs.core.chunk_append(b,x_11972);
}

var G__11973 = (i_11971 + (1));
i_11971 = G__11973;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__11968 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11968) : f.call(null,G__11968));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11974 = this$__$1;
return goog.getUid(G__11974);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__11975 = cljs.core.seq(self__.watches);
var chunk__11976 = null;
var count__11977 = (0);
var i__11978 = (0);
while(true){
if((i__11978 < count__11977)){
var vec__11979 = chunk__11976.cljs$core$IIndexed$_nth$arity$2(null,i__11978);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11979,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11979,(1),null);
var G__11980_11989 = key;
var G__11981_11990 = this$__$1;
var G__11982_11991 = oldval;
var G__11983_11992 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11980_11989,G__11981_11990,G__11982_11991,G__11983_11992) : f.call(null,G__11980_11989,G__11981_11990,G__11982_11991,G__11983_11992));

var G__11993 = seq__11975;
var G__11994 = chunk__11976;
var G__11995 = count__11977;
var G__11996 = (i__11978 + (1));
seq__11975 = G__11993;
chunk__11976 = G__11994;
count__11977 = G__11995;
i__11978 = G__11996;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__11975);
if(temp__4126__auto__){
var seq__11975__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__11975__$1)){
var c__8444__auto__ = cljs.core.chunk_first(seq__11975__$1);
var G__11997 = cljs.core.chunk_rest(seq__11975__$1);
var G__11998 = c__8444__auto__;
var G__11999 = cljs.core.count(c__8444__auto__);
var G__12000 = (0);
seq__11975 = G__11997;
chunk__11976 = G__11998;
count__11977 = G__11999;
i__11978 = G__12000;
continue;
} else {
var vec__11984 = cljs.core.first(seq__11975__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11984,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11984,(1),null);
var G__11985_12001 = key;
var G__11986_12002 = this$__$1;
var G__11987_12003 = oldval;
var G__11988_12004 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11985_12001,G__11986_12002,G__11987_12003,G__11988_12004) : f.call(null,G__11985_12001,G__11986_12002,G__11987_12003,G__11988_12004));

var G__12005 = cljs.core.next(seq__11975__$1);
var G__12006 = null;
var G__12007 = (0);
var G__12008 = (0);
seq__11975 = G__12005;
chunk__11976 = G__12006;
count__11977 = G__12007;
i__11978 = G__12008;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__12012__delegate = function (x,p__12009){
var map__12011 = p__12009;
var map__12011__$1 = ((cljs.core.seq_QMARK_(map__12011))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12011):map__12011);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12011__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12011__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__12012 = function (x,var_args){
var p__12009 = null;
if (arguments.length > 1) {
var G__12013__i = 0, G__12013__a = new Array(arguments.length -  1);
while (G__12013__i < G__12013__a.length) {G__12013__a[G__12013__i] = arguments[G__12013__i + 1]; ++G__12013__i;}
  p__12009 = new cljs.core.IndexedSeq(G__12013__a,0);
} 
return G__12012__delegate.call(this,x,p__12009);};
G__12012.cljs$lang$maxFixedArity = 1;
G__12012.cljs$lang$applyTo = (function (arglist__12014){
var x = cljs.core.first(arglist__12014);
var p__12009 = cljs.core.rest(arglist__12014);
return G__12012__delegate(x,p__12009);
});
G__12012.cljs$core$IFn$_invoke$arity$variadic = G__12012__delegate;
return G__12012;
})()
;
atom = function(x,var_args){
var p__12009 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__12015 = null;
if (arguments.length > 1) {
var G__12016__i = 0, G__12016__a = new Array(arguments.length -  1);
while (G__12016__i < G__12016__a.length) {G__12016__a[G__12016__i] = arguments[G__12016__i + 1]; ++G__12016__i;}
G__12015 = new cljs.core.IndexedSeq(G__12016__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12015);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__12019 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__12019) : validate.call(null,G__12019));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__12020 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__12020) : cljs.core.pr_str.call(null,G__12020));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12027 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12027) : f.call(null,G__12027));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12028 = a.state;
var G__12029 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12028,G__12029) : f.call(null,G__12028,G__12029));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12030 = a.state;
var G__12031 = x;
var G__12032 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12030,G__12031,G__12032) : f.call(null,G__12030,G__12031,G__12032));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__12033__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__12033 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__12034__i = 0, G__12034__a = new Array(arguments.length -  4);
while (G__12034__i < G__12034__a.length) {G__12034__a[G__12034__i] = arguments[G__12034__i + 4]; ++G__12034__i;}
  more = new cljs.core.IndexedSeq(G__12034__a,0);
} 
return G__12033__delegate.call(this,a,f,x,y,more);};
G__12033.cljs$lang$maxFixedArity = 4;
G__12033.cljs$lang$applyTo = (function (arglist__12035){
var a = cljs.core.first(arglist__12035);
arglist__12035 = cljs.core.next(arglist__12035);
var f = cljs.core.first(arglist__12035);
arglist__12035 = cljs.core.next(arglist__12035);
var x = cljs.core.first(arglist__12035);
arglist__12035 = cljs.core.next(arglist__12035);
var y = cljs.core.first(arglist__12035);
var more = cljs.core.rest(arglist__12035);
return G__12033__delegate(a,f,x,y,more);
});
G__12033.cljs$core$IFn$_invoke$arity$variadic = G__12033__delegate;
return G__12033;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__12036 = null;
if (arguments.length > 4) {
var G__12037__i = 0, G__12037__a = new Array(arguments.length -  4);
while (G__12037__i < G__12037__a.length) {G__12037__a[G__12037__i] = arguments[G__12037__i + 4]; ++G__12037__i;}
G__12036 = new cljs.core.IndexedSeq(G__12037__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__12036);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__12104 = null;
var G__12104__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12104__1 = (function (result){
var G__12071 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12071) : rf.call(null,G__12071));
});
var G__12104__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__12072 = i;
var G__12073 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12072,G__12073) : f.call(null,G__12072,G__12073));
})();
if((v == null)){
return result;
} else {
var G__12074 = result;
var G__12075 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12074,G__12075) : rf.call(null,G__12074,G__12075));
}
});
G__12104 = function(result,input){
switch(arguments.length){
case 0:
return G__12104__0.call(this);
case 1:
return G__12104__1.call(this,result);
case 2:
return G__12104__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12104.cljs$core$IFn$_invoke$arity$0 = G__12104__0;
G__12104.cljs$core$IFn$_invoke$arity$1 = G__12104__1;
G__12104.cljs$core$IFn$_invoke$arity$2 = G__12104__2;
return G__12104;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__8544__auto___12105 = size;
var i_12106 = (0);
while(true){
if((i_12106 < n__8544__auto___12105)){
var x_12107 = (function (){var G__12100 = (idx + i_12106);
var G__12101 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12106);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12100,G__12101) : f.call(null,G__12100,G__12101));
})();
if((x_12107 == null)){
} else {
cljs.core.chunk_append(b,x_12107);
}

var G__12108 = (i_12106 + (1));
i_12106 = G__12108;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__12102 = idx;
var G__12103 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12102,G__12103) : f.call(null,G__12102,G__12103));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__12322 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12322) : p.call(null,G__12322));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__7645__auto__ = (function (){var G__12324 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12324) : p.call(null,G__12324));
})();
if(cljs.core.truth_(and__7645__auto__)){
var G__12325 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12325) : p.call(null,G__12325));
} else {
return and__7645__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__7645__auto__ = (function (){var G__12327 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12327) : p.call(null,G__12327));
})();
if(cljs.core.truth_(and__7645__auto__)){
var and__7645__auto____$1 = (function (){var G__12329 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12329) : p.call(null,G__12329));
})();
if(cljs.core.truth_(and__7645__auto____$1)){
var G__12330 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12330) : p.call(null,G__12330));
} else {
return and__7645__auto____$1;
}
} else {
return and__7645__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__12499__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__12499 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12500__i = 0, G__12500__a = new Array(arguments.length -  3);
while (G__12500__i < G__12500__a.length) {G__12500__a[G__12500__i] = arguments[G__12500__i + 3]; ++G__12500__i;}
  args = new cljs.core.IndexedSeq(G__12500__a,0);
} 
return G__12499__delegate.call(this,x,y,z,args);};
G__12499.cljs$lang$maxFixedArity = 3;
G__12499.cljs$lang$applyTo = (function (arglist__12501){
var x = cljs.core.first(arglist__12501);
arglist__12501 = cljs.core.next(arglist__12501);
var y = cljs.core.first(arglist__12501);
arglist__12501 = cljs.core.next(arglist__12501);
var z = cljs.core.first(arglist__12501);
var args = cljs.core.rest(arglist__12501);
return G__12499__delegate(x,y,z,args);
});
G__12499.cljs$core$IFn$_invoke$arity$variadic = G__12499__delegate;
return G__12499;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__12502 = null;
if (arguments.length > 3) {
var G__12503__i = 0, G__12503__a = new Array(arguments.length -  3);
while (G__12503__i < G__12503__a.length) {G__12503__a[G__12503__i] = arguments[G__12503__i + 3]; ++G__12503__i;}
G__12502 = new cljs.core.IndexedSeq(G__12503__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__7645__auto__ = (function (){var G__12362 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12362) : p1.call(null,G__12362));
})();
if(cljs.core.truth_(and__7645__auto__)){
var G__12363 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12363) : p2.call(null,G__12363));
} else {
return and__7645__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__7645__auto__ = (function (){var G__12365 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12365) : p1.call(null,G__12365));
})();
if(cljs.core.truth_(and__7645__auto__)){
var and__7645__auto____$1 = (function (){var G__12367 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12367) : p1.call(null,G__12367));
})();
if(cljs.core.truth_(and__7645__auto____$1)){
var and__7645__auto____$2 = (function (){var G__12369 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12369) : p2.call(null,G__12369));
})();
if(cljs.core.truth_(and__7645__auto____$2)){
var G__12370 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12370) : p2.call(null,G__12370));
} else {
return and__7645__auto____$2;
}
} else {
return and__7645__auto____$1;
}
} else {
return and__7645__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__7645__auto__ = (function (){var G__12372 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12372) : p1.call(null,G__12372));
})();
if(cljs.core.truth_(and__7645__auto__)){
var and__7645__auto____$1 = (function (){var G__12374 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12374) : p1.call(null,G__12374));
})();
if(cljs.core.truth_(and__7645__auto____$1)){
var and__7645__auto____$2 = (function (){var G__12376 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12376) : p1.call(null,G__12376));
})();
if(cljs.core.truth_(and__7645__auto____$2)){
var and__7645__auto____$3 = (function (){var G__12378 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12378) : p2.call(null,G__12378));
})();
if(cljs.core.truth_(and__7645__auto____$3)){
var and__7645__auto____$4 = (function (){var G__12380 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12380) : p2.call(null,G__12380));
})();
if(cljs.core.truth_(and__7645__auto____$4)){
var G__12381 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12381) : p2.call(null,G__12381));
} else {
return and__7645__auto____$4;
}
} else {
return and__7645__auto____$3;
}
} else {
return and__7645__auto____$2;
}
} else {
return and__7645__auto____$1;
}
} else {
return and__7645__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__12504__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__12109_SHARP_){
var and__7645__auto__ = (function (){var G__12386 = p1__12109_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12386) : p1.call(null,G__12386));
})();
if(cljs.core.truth_(and__7645__auto__)){
var G__12387 = p1__12109_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12387) : p2.call(null,G__12387));
} else {
return and__7645__auto__;
}
}),args)));
};
var G__12504 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12505__i = 0, G__12505__a = new Array(arguments.length -  3);
while (G__12505__i < G__12505__a.length) {G__12505__a[G__12505__i] = arguments[G__12505__i + 3]; ++G__12505__i;}
  args = new cljs.core.IndexedSeq(G__12505__a,0);
} 
return G__12504__delegate.call(this,x,y,z,args);};
G__12504.cljs$lang$maxFixedArity = 3;
G__12504.cljs$lang$applyTo = (function (arglist__12506){
var x = cljs.core.first(arglist__12506);
arglist__12506 = cljs.core.next(arglist__12506);
var y = cljs.core.first(arglist__12506);
arglist__12506 = cljs.core.next(arglist__12506);
var z = cljs.core.first(arglist__12506);
var args = cljs.core.rest(arglist__12506);
return G__12504__delegate(x,y,z,args);
});
G__12504.cljs$core$IFn$_invoke$arity$variadic = G__12504__delegate;
return G__12504;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__12507 = null;
if (arguments.length > 3) {
var G__12508__i = 0, G__12508__a = new Array(arguments.length -  3);
while (G__12508__i < G__12508__a.length) {G__12508__a[G__12508__i] = arguments[G__12508__i + 3]; ++G__12508__i;}
G__12507 = new cljs.core.IndexedSeq(G__12508__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12507);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__7645__auto__ = (function (){var G__12433 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12433) : p1.call(null,G__12433));
})();
if(cljs.core.truth_(and__7645__auto__)){
var and__7645__auto____$1 = (function (){var G__12435 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12435) : p2.call(null,G__12435));
})();
if(cljs.core.truth_(and__7645__auto____$1)){
var G__12436 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12436) : p3.call(null,G__12436));
} else {
return and__7645__auto____$1;
}
} else {
return and__7645__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__7645__auto__ = (function (){var G__12438 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12438) : p1.call(null,G__12438));
})();
if(cljs.core.truth_(and__7645__auto__)){
var and__7645__auto____$1 = (function (){var G__12440 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12440) : p2.call(null,G__12440));
})();
if(cljs.core.truth_(and__7645__auto____$1)){
var and__7645__auto____$2 = (function (){var G__12442 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12442) : p3.call(null,G__12442));
})();
if(cljs.core.truth_(and__7645__auto____$2)){
var and__7645__auto____$3 = (function (){var G__12444 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12444) : p1.call(null,G__12444));
})();
if(cljs.core.truth_(and__7645__auto____$3)){
var and__7645__auto____$4 = (function (){var G__12446 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12446) : p2.call(null,G__12446));
})();
if(cljs.core.truth_(and__7645__auto____$4)){
var G__12447 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12447) : p3.call(null,G__12447));
} else {
return and__7645__auto____$4;
}
} else {
return and__7645__auto____$3;
}
} else {
return and__7645__auto____$2;
}
} else {
return and__7645__auto____$1;
}
} else {
return and__7645__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__7645__auto__ = (function (){var G__12449 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12449) : p1.call(null,G__12449));
})();
if(cljs.core.truth_(and__7645__auto__)){
var and__7645__auto____$1 = (function (){var G__12451 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12451) : p2.call(null,G__12451));
})();
if(cljs.core.truth_(and__7645__auto____$1)){
var and__7645__auto____$2 = (function (){var G__12453 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12453) : p3.call(null,G__12453));
})();
if(cljs.core.truth_(and__7645__auto____$2)){
var and__7645__auto____$3 = (function (){var G__12455 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12455) : p1.call(null,G__12455));
})();
if(cljs.core.truth_(and__7645__auto____$3)){
var and__7645__auto____$4 = (function (){var G__12457 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12457) : p2.call(null,G__12457));
})();
if(cljs.core.truth_(and__7645__auto____$4)){
var and__7645__auto____$5 = (function (){var G__12459 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12459) : p3.call(null,G__12459));
})();
if(cljs.core.truth_(and__7645__auto____$5)){
var and__7645__auto____$6 = (function (){var G__12461 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12461) : p1.call(null,G__12461));
})();
if(cljs.core.truth_(and__7645__auto____$6)){
var and__7645__auto____$7 = (function (){var G__12463 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12463) : p2.call(null,G__12463));
})();
if(cljs.core.truth_(and__7645__auto____$7)){
var G__12464 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12464) : p3.call(null,G__12464));
} else {
return and__7645__auto____$7;
}
} else {
return and__7645__auto____$6;
}
} else {
return and__7645__auto____$5;
}
} else {
return and__7645__auto____$4;
}
} else {
return and__7645__auto____$3;
}
} else {
return and__7645__auto____$2;
}
} else {
return and__7645__auto____$1;
}
} else {
return and__7645__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__12509__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__12110_SHARP_){
var and__7645__auto__ = (function (){var G__12471 = p1__12110_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12471) : p1.call(null,G__12471));
})();
if(cljs.core.truth_(and__7645__auto__)){
var and__7645__auto____$1 = (function (){var G__12473 = p1__12110_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12473) : p2.call(null,G__12473));
})();
if(cljs.core.truth_(and__7645__auto____$1)){
var G__12474 = p1__12110_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12474) : p3.call(null,G__12474));
} else {
return and__7645__auto____$1;
}
} else {
return and__7645__auto__;
}
}),args)));
};
var G__12509 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12510__i = 0, G__12510__a = new Array(arguments.length -  3);
while (G__12510__i < G__12510__a.length) {G__12510__a[G__12510__i] = arguments[G__12510__i + 3]; ++G__12510__i;}
  args = new cljs.core.IndexedSeq(G__12510__a,0);
} 
return G__12509__delegate.call(this,x,y,z,args);};
G__12509.cljs$lang$maxFixedArity = 3;
G__12509.cljs$lang$applyTo = (function (arglist__12511){
var x = cljs.core.first(arglist__12511);
arglist__12511 = cljs.core.next(arglist__12511);
var y = cljs.core.first(arglist__12511);
arglist__12511 = cljs.core.next(arglist__12511);
var z = cljs.core.first(arglist__12511);
var args = cljs.core.rest(arglist__12511);
return G__12509__delegate(x,y,z,args);
});
G__12509.cljs$core$IFn$_invoke$arity$variadic = G__12509__delegate;
return G__12509;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__12512 = null;
if (arguments.length > 3) {
var G__12513__i = 0, G__12513__a = new Array(arguments.length -  3);
while (G__12513__i < G__12513__a.length) {G__12513__a[G__12513__i] = arguments[G__12513__i + 3]; ++G__12513__i;}
G__12512 = new cljs.core.IndexedSeq(G__12513__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12512);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__12514__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12111_SHARP_){
var G__12490 = x;
return (p1__12111_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12111_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12490) : p1__12111_SHARP_.call(null,G__12490));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12112_SHARP_){
var and__7645__auto__ = (function (){var G__12492 = x;
return (p1__12112_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12112_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12492) : p1__12112_SHARP_.call(null,G__12492));
})();
if(cljs.core.truth_(and__7645__auto__)){
var G__12493 = y;
return (p1__12112_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12112_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12493) : p1__12112_SHARP_.call(null,G__12493));
} else {
return and__7645__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12113_SHARP_){
var and__7645__auto__ = (function (){var G__12495 = x;
return (p1__12113_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12113_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12495) : p1__12113_SHARP_.call(null,G__12495));
})();
if(cljs.core.truth_(and__7645__auto__)){
var and__7645__auto____$1 = (function (){var G__12497 = y;
return (p1__12113_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12113_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12497) : p1__12113_SHARP_.call(null,G__12497));
})();
if(cljs.core.truth_(and__7645__auto____$1)){
var G__12498 = z;
return (p1__12113_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12113_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12498) : p1__12113_SHARP_.call(null,G__12498));
} else {
return and__7645__auto____$1;
}
} else {
return and__7645__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__12515__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12114_SHARP_){
return cljs.core.every_QMARK_(p1__12114_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__12515 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12516__i = 0, G__12516__a = new Array(arguments.length -  3);
while (G__12516__i < G__12516__a.length) {G__12516__a[G__12516__i] = arguments[G__12516__i + 3]; ++G__12516__i;}
  args = new cljs.core.IndexedSeq(G__12516__a,0);
} 
return G__12515__delegate.call(this,x,y,z,args);};
G__12515.cljs$lang$maxFixedArity = 3;
G__12515.cljs$lang$applyTo = (function (arglist__12517){
var x = cljs.core.first(arglist__12517);
arglist__12517 = cljs.core.next(arglist__12517);
var y = cljs.core.first(arglist__12517);
arglist__12517 = cljs.core.next(arglist__12517);
var z = cljs.core.first(arglist__12517);
var args = cljs.core.rest(arglist__12517);
return G__12515__delegate(x,y,z,args);
});
G__12515.cljs$core$IFn$_invoke$arity$variadic = G__12515__delegate;
return G__12515;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__12518 = null;
if (arguments.length > 3) {
var G__12519__i = 0, G__12519__a = new Array(arguments.length -  3);
while (G__12519__i < G__12519__a.length) {G__12519__a[G__12519__i] = arguments[G__12519__i + 3]; ++G__12519__i;}
G__12518 = new cljs.core.IndexedSeq(G__12519__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__12514 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__12520__i = 0, G__12520__a = new Array(arguments.length -  3);
while (G__12520__i < G__12520__a.length) {G__12520__a[G__12520__i] = arguments[G__12520__i + 3]; ++G__12520__i;}
  ps = new cljs.core.IndexedSeq(G__12520__a,0);
} 
return G__12514__delegate.call(this,p1,p2,p3,ps);};
G__12514.cljs$lang$maxFixedArity = 3;
G__12514.cljs$lang$applyTo = (function (arglist__12521){
var p1 = cljs.core.first(arglist__12521);
arglist__12521 = cljs.core.next(arglist__12521);
var p2 = cljs.core.first(arglist__12521);
arglist__12521 = cljs.core.next(arglist__12521);
var p3 = cljs.core.first(arglist__12521);
var ps = cljs.core.rest(arglist__12521);
return G__12514__delegate(p1,p2,p3,ps);
});
G__12514.cljs$core$IFn$_invoke$arity$variadic = G__12514__delegate;
return G__12514;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__12522 = null;
if (arguments.length > 3) {
var G__12523__i = 0, G__12523__a = new Array(arguments.length -  3);
while (G__12523__i < G__12523__a.length) {G__12523__a[G__12523__i] = arguments[G__12523__i + 3]; ++G__12523__i;}
G__12522 = new cljs.core.IndexedSeq(G__12523__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__12522);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__12729 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12729) : p.call(null,G__12729));
});
var sp1__2 = (function (x,y){
var or__7657__auto__ = (function (){var G__12731 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12731) : p.call(null,G__12731));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var G__12732 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12732) : p.call(null,G__12732));
}
});
var sp1__3 = (function (x,y,z){
var or__7657__auto__ = (function (){var G__12734 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12734) : p.call(null,G__12734));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (function (){var G__12736 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12736) : p.call(null,G__12736));
})();
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
var G__12737 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12737) : p.call(null,G__12737));
}
}
});
var sp1__4 = (function() { 
var G__12898__delegate = function (x,y,z,args){
var or__7657__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__12898 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12899__i = 0, G__12899__a = new Array(arguments.length -  3);
while (G__12899__i < G__12899__a.length) {G__12899__a[G__12899__i] = arguments[G__12899__i + 3]; ++G__12899__i;}
  args = new cljs.core.IndexedSeq(G__12899__a,0);
} 
return G__12898__delegate.call(this,x,y,z,args);};
G__12898.cljs$lang$maxFixedArity = 3;
G__12898.cljs$lang$applyTo = (function (arglist__12900){
var x = cljs.core.first(arglist__12900);
arglist__12900 = cljs.core.next(arglist__12900);
var y = cljs.core.first(arglist__12900);
arglist__12900 = cljs.core.next(arglist__12900);
var z = cljs.core.first(arglist__12900);
var args = cljs.core.rest(arglist__12900);
return G__12898__delegate(x,y,z,args);
});
G__12898.cljs$core$IFn$_invoke$arity$variadic = G__12898__delegate;
return G__12898;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__12901 = null;
if (arguments.length > 3) {
var G__12902__i = 0, G__12902__a = new Array(arguments.length -  3);
while (G__12902__i < G__12902__a.length) {G__12902__a[G__12902__i] = arguments[G__12902__i + 3]; ++G__12902__i;}
G__12901 = new cljs.core.IndexedSeq(G__12902__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__7657__auto__ = (function (){var G__12769 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12769) : p1.call(null,G__12769));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var G__12770 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12770) : p2.call(null,G__12770));
}
});
var sp2__2 = (function (x,y){
var or__7657__auto__ = (function (){var G__12772 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12772) : p1.call(null,G__12772));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (function (){var G__12774 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12774) : p1.call(null,G__12774));
})();
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
var or__7657__auto____$2 = (function (){var G__12776 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12776) : p2.call(null,G__12776));
})();
if(cljs.core.truth_(or__7657__auto____$2)){
return or__7657__auto____$2;
} else {
var G__12777 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12777) : p2.call(null,G__12777));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__7657__auto__ = (function (){var G__12779 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12779) : p1.call(null,G__12779));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (function (){var G__12781 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12781) : p1.call(null,G__12781));
})();
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
var or__7657__auto____$2 = (function (){var G__12783 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12783) : p1.call(null,G__12783));
})();
if(cljs.core.truth_(or__7657__auto____$2)){
return or__7657__auto____$2;
} else {
var or__7657__auto____$3 = (function (){var G__12785 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12785) : p2.call(null,G__12785));
})();
if(cljs.core.truth_(or__7657__auto____$3)){
return or__7657__auto____$3;
} else {
var or__7657__auto____$4 = (function (){var G__12787 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12787) : p2.call(null,G__12787));
})();
if(cljs.core.truth_(or__7657__auto____$4)){
return or__7657__auto____$4;
} else {
var G__12788 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12788) : p2.call(null,G__12788));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__12903__delegate = function (x,y,z,args){
var or__7657__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return cljs.core.some(((function (or__7657__auto__){
return (function (p1__12524_SHARP_){
var or__7657__auto____$1 = (function (){var G__12790 = p1__12524_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12790) : p1.call(null,G__12790));
})();
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
var G__12791 = p1__12524_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12791) : p2.call(null,G__12791));
}
});})(or__7657__auto__))
,args);
}
};
var G__12903 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12904__i = 0, G__12904__a = new Array(arguments.length -  3);
while (G__12904__i < G__12904__a.length) {G__12904__a[G__12904__i] = arguments[G__12904__i + 3]; ++G__12904__i;}
  args = new cljs.core.IndexedSeq(G__12904__a,0);
} 
return G__12903__delegate.call(this,x,y,z,args);};
G__12903.cljs$lang$maxFixedArity = 3;
G__12903.cljs$lang$applyTo = (function (arglist__12905){
var x = cljs.core.first(arglist__12905);
arglist__12905 = cljs.core.next(arglist__12905);
var y = cljs.core.first(arglist__12905);
arglist__12905 = cljs.core.next(arglist__12905);
var z = cljs.core.first(arglist__12905);
var args = cljs.core.rest(arglist__12905);
return G__12903__delegate(x,y,z,args);
});
G__12903.cljs$core$IFn$_invoke$arity$variadic = G__12903__delegate;
return G__12903;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__12906 = null;
if (arguments.length > 3) {
var G__12907__i = 0, G__12907__a = new Array(arguments.length -  3);
while (G__12907__i < G__12907__a.length) {G__12907__a[G__12907__i] = arguments[G__12907__i + 3]; ++G__12907__i;}
G__12906 = new cljs.core.IndexedSeq(G__12907__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12906);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__7657__auto__ = (function (){var G__12837 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12837) : p1.call(null,G__12837));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (function (){var G__12839 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12839) : p2.call(null,G__12839));
})();
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
var G__12840 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12840) : p3.call(null,G__12840));
}
}
});
var sp3__2 = (function (x,y){
var or__7657__auto__ = (function (){var G__12842 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12842) : p1.call(null,G__12842));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (function (){var G__12844 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12844) : p2.call(null,G__12844));
})();
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
var or__7657__auto____$2 = (function (){var G__12846 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12846) : p3.call(null,G__12846));
})();
if(cljs.core.truth_(or__7657__auto____$2)){
return or__7657__auto____$2;
} else {
var or__7657__auto____$3 = (function (){var G__12848 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12848) : p1.call(null,G__12848));
})();
if(cljs.core.truth_(or__7657__auto____$3)){
return or__7657__auto____$3;
} else {
var or__7657__auto____$4 = (function (){var G__12850 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12850) : p2.call(null,G__12850));
})();
if(cljs.core.truth_(or__7657__auto____$4)){
return or__7657__auto____$4;
} else {
var G__12851 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12851) : p3.call(null,G__12851));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__7657__auto__ = (function (){var G__12853 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12853) : p1.call(null,G__12853));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (function (){var G__12855 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12855) : p2.call(null,G__12855));
})();
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
var or__7657__auto____$2 = (function (){var G__12857 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12857) : p3.call(null,G__12857));
})();
if(cljs.core.truth_(or__7657__auto____$2)){
return or__7657__auto____$2;
} else {
var or__7657__auto____$3 = (function (){var G__12859 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12859) : p1.call(null,G__12859));
})();
if(cljs.core.truth_(or__7657__auto____$3)){
return or__7657__auto____$3;
} else {
var or__7657__auto____$4 = (function (){var G__12861 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12861) : p2.call(null,G__12861));
})();
if(cljs.core.truth_(or__7657__auto____$4)){
return or__7657__auto____$4;
} else {
var or__7657__auto____$5 = (function (){var G__12863 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12863) : p3.call(null,G__12863));
})();
if(cljs.core.truth_(or__7657__auto____$5)){
return or__7657__auto____$5;
} else {
var or__7657__auto____$6 = (function (){var G__12865 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12865) : p1.call(null,G__12865));
})();
if(cljs.core.truth_(or__7657__auto____$6)){
return or__7657__auto____$6;
} else {
var or__7657__auto____$7 = (function (){var G__12867 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12867) : p2.call(null,G__12867));
})();
if(cljs.core.truth_(or__7657__auto____$7)){
return or__7657__auto____$7;
} else {
var G__12868 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12868) : p3.call(null,G__12868));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__12908__delegate = function (x,y,z,args){
var or__7657__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return cljs.core.some(((function (or__7657__auto__){
return (function (p1__12525_SHARP_){
var or__7657__auto____$1 = (function (){var G__12870 = p1__12525_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12870) : p1.call(null,G__12870));
})();
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
var or__7657__auto____$2 = (function (){var G__12872 = p1__12525_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12872) : p2.call(null,G__12872));
})();
if(cljs.core.truth_(or__7657__auto____$2)){
return or__7657__auto____$2;
} else {
var G__12873 = p1__12525_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12873) : p3.call(null,G__12873));
}
}
});})(or__7657__auto__))
,args);
}
};
var G__12908 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12909__i = 0, G__12909__a = new Array(arguments.length -  3);
while (G__12909__i < G__12909__a.length) {G__12909__a[G__12909__i] = arguments[G__12909__i + 3]; ++G__12909__i;}
  args = new cljs.core.IndexedSeq(G__12909__a,0);
} 
return G__12908__delegate.call(this,x,y,z,args);};
G__12908.cljs$lang$maxFixedArity = 3;
G__12908.cljs$lang$applyTo = (function (arglist__12910){
var x = cljs.core.first(arglist__12910);
arglist__12910 = cljs.core.next(arglist__12910);
var y = cljs.core.first(arglist__12910);
arglist__12910 = cljs.core.next(arglist__12910);
var z = cljs.core.first(arglist__12910);
var args = cljs.core.rest(arglist__12910);
return G__12908__delegate(x,y,z,args);
});
G__12908.cljs$core$IFn$_invoke$arity$variadic = G__12908__delegate;
return G__12908;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__12911 = null;
if (arguments.length > 3) {
var G__12912__i = 0, G__12912__a = new Array(arguments.length -  3);
while (G__12912__i < G__12912__a.length) {G__12912__a[G__12912__i] = arguments[G__12912__i + 3]; ++G__12912__i;}
G__12911 = new cljs.core.IndexedSeq(G__12912__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__12913__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__12526_SHARP_){
var G__12889 = x;
return (p1__12526_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12526_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12889) : p1__12526_SHARP_.call(null,G__12889));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__12527_SHARP_){
var or__7657__auto__ = (function (){var G__12891 = x;
return (p1__12527_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12527_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12891) : p1__12527_SHARP_.call(null,G__12891));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var G__12892 = y;
return (p1__12527_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12527_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12892) : p1__12527_SHARP_.call(null,G__12892));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__12528_SHARP_){
var or__7657__auto__ = (function (){var G__12894 = x;
return (p1__12528_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12528_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12894) : p1__12528_SHARP_.call(null,G__12894));
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (function (){var G__12896 = y;
return (p1__12528_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12528_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12896) : p1__12528_SHARP_.call(null,G__12896));
})();
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
var G__12897 = z;
return (p1__12528_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12528_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12897) : p1__12528_SHARP_.call(null,G__12897));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__12914__delegate = function (x,y,z,args){
var or__7657__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return cljs.core.some(((function (or__7657__auto__,ps__$1){
return (function (p1__12529_SHARP_){
return cljs.core.some(p1__12529_SHARP_,args);
});})(or__7657__auto__,ps__$1))
,ps__$1);
}
};
var G__12914 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12915__i = 0, G__12915__a = new Array(arguments.length -  3);
while (G__12915__i < G__12915__a.length) {G__12915__a[G__12915__i] = arguments[G__12915__i + 3]; ++G__12915__i;}
  args = new cljs.core.IndexedSeq(G__12915__a,0);
} 
return G__12914__delegate.call(this,x,y,z,args);};
G__12914.cljs$lang$maxFixedArity = 3;
G__12914.cljs$lang$applyTo = (function (arglist__12916){
var x = cljs.core.first(arglist__12916);
arglist__12916 = cljs.core.next(arglist__12916);
var y = cljs.core.first(arglist__12916);
arglist__12916 = cljs.core.next(arglist__12916);
var z = cljs.core.first(arglist__12916);
var args = cljs.core.rest(arglist__12916);
return G__12914__delegate(x,y,z,args);
});
G__12914.cljs$core$IFn$_invoke$arity$variadic = G__12914__delegate;
return G__12914;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__12917 = null;
if (arguments.length > 3) {
var G__12918__i = 0, G__12918__a = new Array(arguments.length -  3);
while (G__12918__i < G__12918__a.length) {G__12918__a[G__12918__i] = arguments[G__12918__i + 3]; ++G__12918__i;}
G__12917 = new cljs.core.IndexedSeq(G__12918__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__12913 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__12919__i = 0, G__12919__a = new Array(arguments.length -  3);
while (G__12919__i < G__12919__a.length) {G__12919__a[G__12919__i] = arguments[G__12919__i + 3]; ++G__12919__i;}
  ps = new cljs.core.IndexedSeq(G__12919__a,0);
} 
return G__12913__delegate.call(this,p1,p2,p3,ps);};
G__12913.cljs$lang$maxFixedArity = 3;
G__12913.cljs$lang$applyTo = (function (arglist__12920){
var p1 = cljs.core.first(arglist__12920);
arglist__12920 = cljs.core.next(arglist__12920);
var p2 = cljs.core.first(arglist__12920);
arglist__12920 = cljs.core.next(arglist__12920);
var p3 = cljs.core.first(arglist__12920);
var ps = cljs.core.rest(arglist__12920);
return G__12913__delegate(p1,p2,p3,ps);
});
G__12913.cljs$core$IFn$_invoke$arity$variadic = G__12913__delegate;
return G__12913;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__12921 = null;
if (arguments.length > 3) {
var G__12922__i = 0, G__12922__a = new Array(arguments.length -  3);
while (G__12922__i < G__12922__a.length) {G__12922__a[G__12922__i] = arguments[G__12922__i + 3]; ++G__12922__i;}
G__12921 = new cljs.core.IndexedSeq(G__12922__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__12921);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__12977 = null;
var G__12977__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12977__1 = (function (result){
var G__12963 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12963) : rf.call(null,G__12963));
});
var G__12977__2 = (function (result,input){
var G__12964 = result;
var G__12965 = (function (){var G__12966 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12966) : f.call(null,G__12966));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12964,G__12965) : rf.call(null,G__12964,G__12965));
});
var G__12977__3 = (function() { 
var G__12978__delegate = function (result,input,inputs){
var G__12967 = result;
var G__12968 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12967,G__12968) : rf.call(null,G__12967,G__12968));
};
var G__12978 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__12979__i = 0, G__12979__a = new Array(arguments.length -  2);
while (G__12979__i < G__12979__a.length) {G__12979__a[G__12979__i] = arguments[G__12979__i + 2]; ++G__12979__i;}
  inputs = new cljs.core.IndexedSeq(G__12979__a,0);
} 
return G__12978__delegate.call(this,result,input,inputs);};
G__12978.cljs$lang$maxFixedArity = 2;
G__12978.cljs$lang$applyTo = (function (arglist__12980){
var result = cljs.core.first(arglist__12980);
arglist__12980 = cljs.core.next(arglist__12980);
var input = cljs.core.first(arglist__12980);
var inputs = cljs.core.rest(arglist__12980);
return G__12978__delegate(result,input,inputs);
});
G__12978.cljs$core$IFn$_invoke$arity$variadic = G__12978__delegate;
return G__12978;
})()
;
G__12977 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__12977__0.call(this);
case 1:
return G__12977__1.call(this,result);
case 2:
return G__12977__2.call(this,result,input);
default:
var G__12981 = null;
if (arguments.length > 2) {
var G__12982__i = 0, G__12982__a = new Array(arguments.length -  2);
while (G__12982__i < G__12982__a.length) {G__12982__a[G__12982__i] = arguments[G__12982__i + 2]; ++G__12982__i;}
G__12981 = new cljs.core.IndexedSeq(G__12982__a,0);
}
return G__12977__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__12981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12977.cljs$lang$maxFixedArity = 2;
G__12977.cljs$lang$applyTo = G__12977__3.cljs$lang$applyTo;
G__12977.cljs$core$IFn$_invoke$arity$0 = G__12977__0;
G__12977.cljs$core$IFn$_invoke$arity$1 = G__12977__1;
G__12977.cljs$core$IFn$_invoke$arity$2 = G__12977__2;
G__12977.cljs$core$IFn$_invoke$arity$variadic = G__12977__3.cljs$core$IFn$_invoke$arity$variadic;
return G__12977;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__8544__auto___12983 = size;
var i_12984 = (0);
while(true){
if((i_12984 < n__8544__auto___12983)){
cljs.core.chunk_append(b,(function (){var G__12969 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12984);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12969) : f.call(null,G__12969));
})());

var G__12985 = (i_12984 + (1));
i_12984 = G__12985;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__12970 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12970) : f.call(null,G__12970));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__12971 = cljs.core.first(s1);
var G__12972 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12971,G__12972) : f.call(null,G__12971,G__12972));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__12973 = cljs.core.first(s1);
var G__12974 = cljs.core.first(s2);
var G__12975 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12973,G__12974,G__12975) : f.call(null,G__12973,G__12974,G__12975));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__12986__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__12923_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__12923_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__12986 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__12987__i = 0, G__12987__a = new Array(arguments.length -  4);
while (G__12987__i < G__12987__a.length) {G__12987__a[G__12987__i] = arguments[G__12987__i + 4]; ++G__12987__i;}
  colls = new cljs.core.IndexedSeq(G__12987__a,0);
} 
return G__12986__delegate.call(this,f,c1,c2,c3,colls);};
G__12986.cljs$lang$maxFixedArity = 4;
G__12986.cljs$lang$applyTo = (function (arglist__12988){
var f = cljs.core.first(arglist__12988);
arglist__12988 = cljs.core.next(arglist__12988);
var c1 = cljs.core.first(arglist__12988);
arglist__12988 = cljs.core.next(arglist__12988);
var c2 = cljs.core.first(arglist__12988);
arglist__12988 = cljs.core.next(arglist__12988);
var c3 = cljs.core.first(arglist__12988);
var colls = cljs.core.rest(arglist__12988);
return G__12986__delegate(f,c1,c2,c3,colls);
});
G__12986.cljs$core$IFn$_invoke$arity$variadic = G__12986__delegate;
return G__12986;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__12989 = null;
if (arguments.length > 4) {
var G__12990__i = 0, G__12990__a = new Array(arguments.length -  4);
while (G__12990__i < G__12990__a.length) {G__12990__a[G__12990__i] = arguments[G__12990__i + 4]; ++G__12990__i;}
G__12989 = new cljs.core.IndexedSeq(G__12990__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__12989);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__12999 = null;
var G__12999__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12999__1 = (function (result){
var G__12996 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12996) : rf.call(null,G__12996));
});
var G__12999__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__12997 = result;
var G__12998 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12997,G__12998) : rf.call(null,G__12997,G__12998));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__12999 = function(result,input){
switch(arguments.length){
case 0:
return G__12999__0.call(this);
case 1:
return G__12999__1.call(this,result);
case 2:
return G__12999__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12999.cljs$core$IFn$_invoke$arity$0 = G__12999__0;
G__12999.cljs$core$IFn$_invoke$arity$1 = G__12999__1;
G__12999.cljs$core$IFn$_invoke$arity$2 = G__12999__2;
return G__12999;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__13006 = null;
var G__13006__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13006__1 = (function (result){
var G__13003 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13003) : rf.call(null,G__13003));
});
var G__13006__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__13004 = result;
var G__13005 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13004,G__13005) : rf.call(null,G__13004,G__13005));
}
});
G__13006 = function(result,input){
switch(arguments.length){
case 0:
return G__13006__0.call(this);
case 1:
return G__13006__1.call(this,result);
case 2:
return G__13006__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13006.cljs$core$IFn$_invoke$arity$0 = G__13006__0;
G__13006.cljs$core$IFn$_invoke$arity$1 = G__13006__1;
G__13006.cljs$core$IFn$_invoke$arity$2 = G__13006__2;
return G__13006;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__13007 = (n__$1 - (1));
var G__13008 = cljs.core.rest(s);
n__$1 = G__13007;
coll__$1 = G__13008;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__13011 = cljs.core.next(s);
var G__13012 = cljs.core.next(lead);
s = G__13011;
lead = G__13012;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__13025 = null;
var G__13025__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13025__1 = (function (result){
var G__13019 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13019) : rf.call(null,G__13019));
});
var G__13025__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__7645__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__7645__auto__)){
var G__13020 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13020) : pred.call(null,G__13020));
} else {
return and__7645__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__13021 = result;
var G__13022 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13021,G__13022) : rf.call(null,G__13021,G__13022));
}
});
G__13025 = function(result,input){
switch(arguments.length){
case 0:
return G__13025__0.call(this);
case 1:
return G__13025__1.call(this,result);
case 2:
return G__13025__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13025.cljs$core$IFn$_invoke$arity$0 = G__13025__0;
G__13025.cljs$core$IFn$_invoke$arity$1 = G__13025__1;
G__13025.cljs$core$IFn$_invoke$arity$2 = G__13025__2;
return G__13025;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__7645__auto__ = s;
if(and__7645__auto__){
var G__13024 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__13024) : pred__$1.call(null,G__13024));
} else {
return and__7645__auto__;
}
})())){
var G__13026 = pred__$1;
var G__13027 = cljs.core.rest(s);
pred__$1 = G__13026;
coll__$1 = G__13027;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__13036 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13036) : f.call(null,G__13036));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__13039__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__13039 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13040__i = 0, G__13040__a = new Array(arguments.length -  2);
while (G__13040__i < G__13040__a.length) {G__13040__a[G__13040__i] = arguments[G__13040__i + 2]; ++G__13040__i;}
  colls = new cljs.core.IndexedSeq(G__13040__a,0);
} 
return G__13039__delegate.call(this,c1,c2,colls);};
G__13039.cljs$lang$maxFixedArity = 2;
G__13039.cljs$lang$applyTo = (function (arglist__13041){
var c1 = cljs.core.first(arglist__13041);
arglist__13041 = cljs.core.next(arglist__13041);
var c2 = cljs.core.first(arglist__13041);
var colls = cljs.core.rest(arglist__13041);
return G__13039__delegate(c1,c2,colls);
});
G__13039.cljs$core$IFn$_invoke$arity$variadic = G__13039__delegate;
return G__13039;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__13042 = null;
if (arguments.length > 2) {
var G__13043__i = 0, G__13043__a = new Array(arguments.length -  2);
while (G__13043__i < G__13043__a.length) {G__13043__a[G__13043__i] = arguments[G__13043__i + 2]; ++G__13043__i;}
G__13042 = new cljs.core.IndexedSeq(G__13043__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__13042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__13058 = null;
var G__13058__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13058__1 = (function (result){
var G__13051 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13051) : rf.call(null,G__13051));
});
var G__13058__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__13052 = result;
var G__13053 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13052,G__13053) : rf.call(null,G__13052,G__13053));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__13054 = sepr;
var G__13055 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13054,G__13055) : rf.call(null,G__13054,G__13055));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__13056 = result;
var G__13057 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13056,G__13057) : rf.call(null,G__13056,G__13057));
}
});
G__13058 = function(result,input){
switch(arguments.length){
case 0:
return G__13058__0.call(this);
case 1:
return G__13058__1.call(this,result);
case 2:
return G__13058__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13058.cljs$core$IFn$_invoke$arity$0 = G__13058__0;
G__13058.cljs$core$IFn$_invoke$arity$1 = G__13058__1;
G__13058.cljs$core$IFn$_invoke$arity$2 = G__13058__2;
return G__13058;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__13067__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__13067 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__13068__i = 0, G__13068__a = new Array(arguments.length -  1);
while (G__13068__i < G__13068__a.length) {G__13068__a[G__13068__i] = arguments[G__13068__i + 1]; ++G__13068__i;}
  colls = new cljs.core.IndexedSeq(G__13068__a,0);
} 
return G__13067__delegate.call(this,f,colls);};
G__13067.cljs$lang$maxFixedArity = 1;
G__13067.cljs$lang$applyTo = (function (arglist__13069){
var f = cljs.core.first(arglist__13069);
var colls = cljs.core.rest(arglist__13069);
return G__13067__delegate(f,colls);
});
G__13067.cljs$core$IFn$_invoke$arity$variadic = G__13067__delegate;
return G__13067;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__13070 = null;
if (arguments.length > 1) {
var G__13071__i = 0, G__13071__a = new Array(arguments.length -  1);
while (G__13071__i < G__13071__a.length) {G__13071__a[G__13071__i] = arguments[G__13071__i + 1]; ++G__13071__i;}
G__13070 = new cljs.core.IndexedSeq(G__13071__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__13070);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__13090 = null;
var G__13090__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13090__1 = (function (result){
var G__13084 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13084) : rf.call(null,G__13084));
});
var G__13090__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__13085 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13085) : pred.call(null,G__13085));
})())){
var G__13086 = result;
var G__13087 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13086,G__13087) : rf.call(null,G__13086,G__13087));
} else {
return result;
}
});
G__13090 = function(result,input){
switch(arguments.length){
case 0:
return G__13090__0.call(this);
case 1:
return G__13090__1.call(this,result);
case 2:
return G__13090__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13090.cljs$core$IFn$_invoke$arity$0 = G__13090__0;
G__13090.cljs$core$IFn$_invoke$arity$1 = G__13090__1;
G__13090.cljs$core$IFn$_invoke$arity$2 = G__13090__2;
return G__13090;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__8544__auto___13091 = size;
var i_13092 = (0);
while(true){
if((i_13092 < n__8544__auto___13091)){
if(cljs.core.truth_((function (){var G__13088 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13092);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13088) : pred.call(null,G__13088));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13092));
} else {
}

var G__13093 = (i_13092 + (1));
i_13092 = G__13093;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__13089 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13089) : pred.call(null,G__13089));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__13100 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__13100) : branch_QMARK_.call(null,G__13100));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__13101 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__13101) : children.call(null,G__13101));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__13102_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__13102_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__13105 = to;
if(G__13105){
var bit__8331__auto__ = (G__13105.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__8331__auto__) || (G__13105.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__13106 = to;
if(G__13106){
var bit__8331__auto__ = (G__13106.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__8331__auto__) || (G__13106.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__13108 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13108) : f.call(null,G__13108));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__13109__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__13109 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__13110__i = 0, G__13110__a = new Array(arguments.length -  4);
while (G__13110__i < G__13110__a.length) {G__13110__a[G__13110__i] = arguments[G__13110__i + 4]; ++G__13110__i;}
  colls = new cljs.core.IndexedSeq(G__13110__a,0);
} 
return G__13109__delegate.call(this,f,c1,c2,c3,colls);};
G__13109.cljs$lang$maxFixedArity = 4;
G__13109.cljs$lang$applyTo = (function (arglist__13111){
var f = cljs.core.first(arglist__13111);
arglist__13111 = cljs.core.next(arglist__13111);
var c1 = cljs.core.first(arglist__13111);
arglist__13111 = cljs.core.next(arglist__13111);
var c2 = cljs.core.first(arglist__13111);
arglist__13111 = cljs.core.next(arglist__13111);
var c3 = cljs.core.first(arglist__13111);
var colls = cljs.core.rest(arglist__13111);
return G__13109__delegate(f,c1,c2,c3,colls);
});
G__13109.cljs$core$IFn$_invoke$arity$variadic = G__13109__delegate;
return G__13109;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__13112 = null;
if (arguments.length > 4) {
var G__13113__i = 0, G__13113__a = new Array(arguments.length -  4);
while (G__13113__i < G__13113__a.length) {G__13113__a[G__13113__i] = arguments[G__13113__i + 4]; ++G__13113__i;}
G__13112 = new cljs.core.IndexedSeq(G__13113__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__13112);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__13115 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13115) : pred.call(null,G__13115));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__13130 = m__$1;
if(G__13130){
var bit__8338__auto__ = (G__13130.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__8338__auto__) || (G__13130.cljs$core$ILookup$)){
return true;
} else {
if((!G__13130.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__13130);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__13130);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__13131 = sentinel;
var G__13132 = m__$2;
var G__13133 = cljs.core.next(ks__$1);
sentinel = G__13131;
m__$1 = G__13132;
ks__$1 = G__13133;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__13134,v){
var vec__13139 = p__13134;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13139,(0),null);
var ks = cljs.core.nthnext(vec__13139,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__13140,f){
var vec__13178 = p__13140;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13178,(0),null);
var ks = cljs.core.nthnext(vec__13178,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13179 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13179) : f.call(null,G__13179));
})());
}
});
var update_in__4 = (function (m,p__13141,f,a){
var vec__13180 = p__13141;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13180,(0),null);
var ks = cljs.core.nthnext(vec__13180,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13181 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13182 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13181,G__13182) : f.call(null,G__13181,G__13182));
})());
}
});
var update_in__5 = (function (m,p__13142,f,a,b){
var vec__13183 = p__13142;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13183,(0),null);
var ks = cljs.core.nthnext(vec__13183,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13184 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13185 = a;
var G__13186 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13184,G__13185,G__13186) : f.call(null,G__13184,G__13185,G__13186));
})());
}
});
var update_in__6 = (function (m,p__13143,f,a,b,c){
var vec__13187 = p__13143;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13187,(0),null);
var ks = cljs.core.nthnext(vec__13187,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13188 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13189 = a;
var G__13190 = b;
var G__13191 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13188,G__13189,G__13190,G__13191) : f.call(null,G__13188,G__13189,G__13190,G__13191));
})());
}
});
var update_in__7 = (function() { 
var G__13193__delegate = function (m,p__13144,f,a,b,c,args){
var vec__13192 = p__13144;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13192,(0),null);
var ks = cljs.core.nthnext(vec__13192,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__13193 = function (m,p__13144,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__13194__i = 0, G__13194__a = new Array(arguments.length -  6);
while (G__13194__i < G__13194__a.length) {G__13194__a[G__13194__i] = arguments[G__13194__i + 6]; ++G__13194__i;}
  args = new cljs.core.IndexedSeq(G__13194__a,0);
} 
return G__13193__delegate.call(this,m,p__13144,f,a,b,c,args);};
G__13193.cljs$lang$maxFixedArity = 6;
G__13193.cljs$lang$applyTo = (function (arglist__13195){
var m = cljs.core.first(arglist__13195);
arglist__13195 = cljs.core.next(arglist__13195);
var p__13144 = cljs.core.first(arglist__13195);
arglist__13195 = cljs.core.next(arglist__13195);
var f = cljs.core.first(arglist__13195);
arglist__13195 = cljs.core.next(arglist__13195);
var a = cljs.core.first(arglist__13195);
arglist__13195 = cljs.core.next(arglist__13195);
var b = cljs.core.first(arglist__13195);
arglist__13195 = cljs.core.next(arglist__13195);
var c = cljs.core.first(arglist__13195);
var args = cljs.core.rest(arglist__13195);
return G__13193__delegate(m,p__13144,f,a,b,c,args);
});
G__13193.cljs$core$IFn$_invoke$arity$variadic = G__13193__delegate;
return G__13193;
})()
;
update_in = function(m,p__13144,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__13144,f);
case 4:
return update_in__4.call(this,m,p__13144,f,a);
case 5:
return update_in__5.call(this,m,p__13144,f,a,b);
case 6:
return update_in__6.call(this,m,p__13144,f,a,b,c);
default:
var G__13196 = null;
if (arguments.length > 6) {
var G__13197__i = 0, G__13197__a = new Array(arguments.length -  6);
while (G__13197__i < G__13197__a.length) {G__13197__a[G__13197__i] = arguments[G__13197__i + 6]; ++G__13197__i;}
G__13196 = new cljs.core.IndexedSeq(G__13197__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__13144,f,a,b,c, G__13196);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13208 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13208) : f.call(null,G__13208));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13209 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13210 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13209,G__13210) : f.call(null,G__13209,G__13210));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13211 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13212 = x;
var G__13213 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13211,G__13212,G__13213) : f.call(null,G__13211,G__13212,G__13213));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13214 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13215 = x;
var G__13216 = y;
var G__13217 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13214,G__13215,G__13216,G__13217) : f.call(null,G__13214,G__13215,G__13216,G__13217));
})());
});
var update__7 = (function() { 
var G__13218__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__13218 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__13219__i = 0, G__13219__a = new Array(arguments.length -  6);
while (G__13219__i < G__13219__a.length) {G__13219__a[G__13219__i] = arguments[G__13219__i + 6]; ++G__13219__i;}
  more = new cljs.core.IndexedSeq(G__13219__a,0);
} 
return G__13218__delegate.call(this,m,k,f,x,y,z,more);};
G__13218.cljs$lang$maxFixedArity = 6;
G__13218.cljs$lang$applyTo = (function (arglist__13220){
var m = cljs.core.first(arglist__13220);
arglist__13220 = cljs.core.next(arglist__13220);
var k = cljs.core.first(arglist__13220);
arglist__13220 = cljs.core.next(arglist__13220);
var f = cljs.core.first(arglist__13220);
arglist__13220 = cljs.core.next(arglist__13220);
var x = cljs.core.first(arglist__13220);
arglist__13220 = cljs.core.next(arglist__13220);
var y = cljs.core.first(arglist__13220);
arglist__13220 = cljs.core.next(arglist__13220);
var z = cljs.core.first(arglist__13220);
var more = cljs.core.rest(arglist__13220);
return G__13218__delegate(m,k,f,x,y,z,more);
});
G__13218.cljs$core$IFn$_invoke$arity$variadic = G__13218__delegate;
return G__13218;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__13221 = null;
if (arguments.length > 6) {
var G__13222__i = 0, G__13222__a = new Array(arguments.length -  6);
while (G__13222__i < G__13222__a.length) {G__13222__a[G__13222__i] = arguments[G__13222__i + 6]; ++G__13222__i;}
G__13221 = new cljs.core.IndexedSeq(G__13222__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__13221);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__13223 = (ll - (5));
var G__13224 = r;
ll = G__13223;
ret = G__13224;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__13229 = cljs.core.pv_aget(node,(0));
var G__13230 = (level - (5));
node = G__13229;
level = G__13230;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__13231 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__13232 = (level - (5));
node = G__13231;
level = G__13232;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__13242 = init__$2;
var G__13243 = (j + i);
var G__13244 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13242,G__13243,G__13244) : f.call(null,G__13242,G__13243,G__13244));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__13255 = (j + (1));
var G__13256 = init__$3;
j = G__13255;
init__$2 = G__13256;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13245 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13245) : cljs.core.deref.call(null,G__13245));
} else {
var G__13257 = (i + len);
var G__13258 = init__$2;
i = G__13257;
init__$1 = G__13258;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__13246 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__13246) : cljs.core.tv_editable_root.call(null,G__13246));
})(),(function (){var G__13247 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__13247) : cljs.core.tv_editable_tail.call(null,G__13247));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__13248 = init__$2;
var G__13249 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13248,G__13249) : f.call(null,G__13248,G__13249));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__13259 = (j + (1));
var G__13260 = init__$3;
j = G__13259;
init__$2 = G__13260;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13250 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13250) : cljs.core.deref.call(null,G__13250));
} else {
var G__13261 = (i + len);
var G__13262 = init__$2;
i = G__13261;
init__$1 = G__13262;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__13251 = coll__$1;
var G__13252 = cljs.core.first_array_for_longvec(coll__$1);
var G__13253 = (0);
var G__13254 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13251,G__13252,G__13253,G__13254) : cljs.core.chunked_seq.call(null,G__13251,G__13252,G__13253,G__13254));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__8544__auto___13263 = len;
var i_13264 = (0);
while(true){
if((i_13264 < n__8544__auto___13263)){
(new_tail[i_13264] = (self__.tail[i_13264]));

var G__13265 = (i_13264 + (1));
i_13264 = G__13265;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__13266 = null;
var G__13266__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__13266__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__13266 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13266__2.call(this,self__,k);
case 3:
return G__13266__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13266.cljs$core$IFn$_invoke$arity$2 = G__13266__2;
G__13266.cljs$core$IFn$_invoke$arity$3 = G__13266__3;
return G__13266;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args13241){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13241)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__13267 = (i + (1));
var G__13268 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__13267;
out = G__13268;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13269__i = 0, G__13269__a = new Array(arguments.length -  0);
while (G__13269__i < G__13269__a.length) {G__13269__a[G__13269__i] = arguments[G__13269__i + 0]; ++G__13269__i;}
  args = new cljs.core.IndexedSeq(G__13269__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__13270){
var args = cljs.core.seq(arglist__13270);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__13271 = self__.vec;
var G__13272 = self__.node;
var G__13273 = self__.i;
var G__13274 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13271,G__13272,G__13273,G__13274) : cljs.core.chunked_seq.call(null,G__13271,G__13272,G__13273,G__13274));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__13275 = self__.vec;
var G__13276 = (self__.i + self__.off);
var G__13277 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13275,G__13276,G__13277) : cljs.core.subvec.call(null,G__13275,G__13276,G__13277));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__13278 = self__.vec;
var G__13279 = (self__.i + self__.off);
var G__13280 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13278,G__13279,G__13280) : cljs.core.subvec.call(null,G__13278,G__13279,G__13280));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__13281 = self__.vec;
var G__13282 = self__.node;
var G__13283 = self__.i;
var G__13284 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13281,G__13282,G__13283,G__13284) : cljs.core.chunked_seq.call(null,G__13281,G__13282,G__13283,G__13284));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__13285 = self__.vec;
var G__13286 = cljs.core.unchecked_array_for(self__.vec,end);
var G__13287 = end;
var G__13288 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13285,G__13286,G__13287,G__13288) : cljs.core.chunked_seq.call(null,G__13285,G__13286,G__13287,G__13288));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__13289 = self__.vec;
var G__13290 = self__.node;
var G__13291 = self__.i;
var G__13292 = self__.off;
var G__13293 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__13289,G__13290,G__13291,G__13292,G__13293) : cljs.core.chunked_seq.call(null,G__13289,G__13290,G__13291,G__13292,G__13293));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__13294 = self__.vec;
var G__13295 = cljs.core.unchecked_array_for(self__.vec,end);
var G__13296 = end;
var G__13297 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13294,G__13295,G__13296,G__13297) : cljs.core.chunked_seq.call(null,G__13294,G__13295,G__13296,G__13297));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__13299 = self__.meta;
var G__13300 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__13301 = self__.start;
var G__13302 = (function (){var x__7974__auto__ = self__.end;
var y__7975__auto__ = (v_pos + (1));
return ((x__7974__auto__ > y__7975__auto__) ? x__7974__auto__ : y__7975__auto__);
})();
var G__13303 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13299,G__13300,G__13301,G__13302,G__13303) : cljs.core.build_subvec.call(null,G__13299,G__13300,G__13301,G__13302,G__13303));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__13304 = self__.meta;
var G__13305 = self__.v;
var G__13306 = self__.start;
var G__13307 = (self__.end - (1));
var G__13308 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13304,G__13305,G__13306,G__13307,G__13308) : cljs.core.build_subvec.call(null,G__13304,G__13305,G__13306,G__13307,G__13308));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__13310 = meta__$1;
var G__13311 = self__.v;
var G__13312 = self__.start;
var G__13313 = self__.end;
var G__13314 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13310,G__13311,G__13312,G__13313,G__13314) : cljs.core.build_subvec.call(null,G__13310,G__13311,G__13312,G__13313,G__13314));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13315 = self__.meta;
var G__13316 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__13317 = self__.start;
var G__13318 = (self__.end + (1));
var G__13319 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13315,G__13316,G__13317,G__13318,G__13319) : cljs.core.build_subvec.call(null,G__13315,G__13316,G__13317,G__13318,G__13319));
});

cljs.core.Subvec.prototype.call = (function() {
var G__13320 = null;
var G__13320__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__13320__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__13320 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13320__2.call(this,self__,k);
case 3:
return G__13320__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13320.cljs$core$IFn$_invoke$arity$2 = G__13320__2;
G__13320.cljs$core$IFn$_invoke$arity$3 = G__13320__3;
return G__13320;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args13298){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13298)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__13321 = meta;
var G__13322 = v.v;
var G__13323 = (v.start + start);
var G__13324 = (v.start + end);
var G__13325 = __hash;
meta = G__13321;
v = G__13322;
start = G__13323;
end = G__13324;
__hash = G__13325;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj13332 = {};
return obj13332;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__13340 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__13341 = (level - (5));
node = G__13340;
level = G__13341;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__13345 = null;
var G__13345__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13345__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13345 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13345__2.call(this,self__,k);
case 3:
return G__13345__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13345.cljs$core$IFn$_invoke$arity$2 = G__13345__2;
G__13345.cljs$core$IFn$_invoke$arity$3 = G__13345__3;
return G__13345;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args13342){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13342)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__7657__auto__ = self__.front;
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__7657__auto__ = self__.rear;
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__13346 = (i + incr);
i = G__13346;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__13347 = (i + (1));
var G__13348 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__13347;
out = G__13348;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj13352 = {};
return obj13352;
})();
var l = ks.length;
var i_13353 = (0);
while(true){
if((i_13353 < l)){
var k_13354 = (ks[i_13353]);
(new_obj[k_13354] = (obj[k_13354]));

var G__13355 = (i_13353 + (1));
i_13353 = G__13355;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__7645__auto__ = (function (){var G__13359 = k;
return goog.isString(G__13359);
})();
if(cljs.core.truth_(and__7645__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__7645__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__13360 = init__$1;
var G__13361 = k;
var G__13362 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13360,G__13361,G__13362) : f.call(null,G__13360,G__13361,G__13362));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13363 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13363) : cljs.core.deref.call(null,G__13363));
} else {
var G__13369 = cljs.core.rest(keys__$1);
var G__13370 = init__$2;
keys__$1 = G__13369;
init__$1 = G__13370;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__7645__auto__ = (function (){var G__13365 = k;
return goog.isString(G__13365);
})();
if(cljs.core.truth_(and__7645__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__7645__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__13366 = k;
return goog.isString(G__13366);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__7645__auto__ = (function (){var G__13368 = k;
return goog.isString(G__13368);
})();
if(cljs.core.truth_(and__7645__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__7645__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__13356_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__13356_SHARP_,(self__.strobj[p1__13356_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__13371 = null;
var G__13371__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13371__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13371 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13371__2.call(this,self__,k);
case 3:
return G__13371__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13371.cljs$core$IFn$_invoke$arity$2 = G__13371__2;
G__13371.cljs$core$IFn$_invoke$arity$3 = G__13371__3;
return G__13371;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args13357){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13357)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj13373 = {};
return obj13373;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__13374 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13374,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13374,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__13375 = (i + (2));
i = G__13375;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__13376 = (i + (2));
i = G__13376;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__13377 = (i + (2));
i = G__13377;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__13378 = (i + (2));
i = G__13378;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__13379 = (i + (2));
i = G__13379;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__7657__auto__ = (function (){var G__13383 = k;
return goog.isString(G__13383);
})();
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_13384 = (0);
while(true){
if((i_13384 < l)){
(narr[i_13384] = (arr[i_13384]));

var G__13385 = (i_13384 + (1));
i_13384 = G__13385;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13387 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13387) : cljs.core.keys.call(null,G__13387));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13388 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13388) : cljs.core.vals.call(null,G__13388));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13389 = cljs.core.seq(coll);
var chunk__13390 = null;
var count__13391 = (0);
var i__13392 = (0);
while(true){
if((i__13392 < count__13391)){
var vec__13393 = chunk__13390.cljs$core$IIndexed$_nth$arity$2(null,i__13392);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13393,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13393,(1),null);
var G__13394_13407 = v;
var G__13395_13408 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13394_13407,G__13395_13408) : f.call(null,G__13394_13407,G__13395_13408));

var G__13409 = seq__13389;
var G__13410 = chunk__13390;
var G__13411 = count__13391;
var G__13412 = (i__13392 + (1));
seq__13389 = G__13409;
chunk__13390 = G__13410;
count__13391 = G__13411;
i__13392 = G__13412;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13389);
if(temp__4126__auto__){
var seq__13389__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13389__$1)){
var c__8444__auto__ = cljs.core.chunk_first(seq__13389__$1);
var G__13413 = cljs.core.chunk_rest(seq__13389__$1);
var G__13414 = c__8444__auto__;
var G__13415 = cljs.core.count(c__8444__auto__);
var G__13416 = (0);
seq__13389 = G__13413;
chunk__13390 = G__13414;
count__13391 = G__13415;
i__13392 = G__13416;
continue;
} else {
var vec__13396 = cljs.core.first(seq__13389__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13396,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13396,(1),null);
var G__13397_13417 = v;
var G__13398_13418 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13397_13417,G__13398_13418) : f.call(null,G__13397_13417,G__13398_13418));

var G__13419 = cljs.core.next(seq__13389__$1);
var G__13420 = null;
var G__13421 = (0);
var G__13422 = (0);
seq__13389 = G__13419;
chunk__13390 = G__13420;
count__13391 = G__13421;
i__13392 = G__13422;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__13399 = init__$1;
var G__13400 = (self__.arr[i]);
var G__13401 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13399,G__13400,G__13401) : f.call(null,G__13399,G__13400,G__13401));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13402 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13402) : cljs.core.deref.call(null,G__13402));
} else {
var G__13423 = (i + (2));
var G__13424 = init__$2;
i = G__13423;
init__$1 = G__13424;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__13403 = other;
if(G__13403){
var bit__8331__auto__ = (G__13403.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__8331__auto__) || (G__13403.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__13425 = (i + (2));
i = G__13425;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj13405 = {};
return obj13405;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__13426 = (s + (2));
var G__13427 = d;
s = G__13426;
d = G__13427;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__13428 = (s + (2));
var G__13429 = (d + (2));
s = G__13428;
d = G__13429;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__13406 = cljs.core.aclone(self__.arr);
(G__13406[(idx + (1))] = v);

return G__13406;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__13430 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__13431 = cljs.core.next(es);
ret = G__13430;
es = G__13431;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__13432 = null;
var G__13432__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13432__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13432 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13432__2.call(this,self__,k);
case 3:
return G__13432__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13432.cljs$core$IFn$_invoke$arity$2 = G__13432__2;
G__13432.cljs$core$IFn$_invoke$arity$3 = G__13432__3;
return G__13432;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args13386){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13386)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__13433 = (i + (2));
var G__13434 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__13433;
ret = G__13434;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__13435_13443 = self__.arr;
G__13435_13443.pop();

G__13435_13443.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__13436 = self__.len;
var G__13437 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__13436,G__13437) : cljs.core.array__GT_transient_hash_map.call(null,G__13436,G__13437));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__13438 = o;
if(G__13438){
var bit__8338__auto__ = (G__13438.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__8338__auto__) || (G__13438.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__13438.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13438);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13438);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__13439 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13439) : cljs.core.key.call(null,G__13439));
})(),(function (){var G__13440 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13440) : cljs.core.val.call(null,G__13440));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__13444 = cljs.core.next(es);
var G__13445 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__13441 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13441) : cljs.core.key.call(null,G__13441));
})(),(function (){var G__13442 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13442) : cljs.core.val.call(null,G__13442));
})());
es = G__13444;
tcoll__$2 = G__13445;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__13446 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__13447 = (i + (2));
out = G__13446;
i = G__13447;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__13450 = cljs.core.aclone(arr);
(G__13450[i] = a);

return G__13450;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__13451 = cljs.core.aclone(arr);
(G__13451[i] = a);

(G__13451[j] = b);

return G__13451;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__13456 = init__$1;
var G__13457 = k;
var G__13458 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13456,G__13457,G__13458) : f.call(null,G__13456,G__13457,G__13458));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13459 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13459) : cljs.core.deref.call(null,G__13459));
} else {
var G__13460 = (i + (2));
var G__13461 = init__$2;
i = G__13460;
init__$1 = G__13461;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__13462 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13462) : cljs.core.create_inode_seq.call(null,G__13462));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_13476 = (0);
var j_13477 = (0);
while(true){
if((i_13476 < (32))){
if((((self__.bitmap >>> i_13476) & (1)) === (0))){
var G__13478 = (i_13476 + (1));
var G__13479 = j_13477;
i_13476 = G__13478;
j_13477 = G__13479;
continue;
} else {
(nodes[i_13476] = ((!(((self__.arr[j_13477]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_13477])),(self__.arr[j_13477]),(self__.arr[(j_13477 + (1))]),added_leaf_QMARK_):(self__.arr[(j_13477 + (1))])));

var G__13480 = (i_13476 + (1));
var G__13481 = (j_13477 + (2));
i_13476 = G__13480;
j_13477 = G__13481;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__13463 = edit__$1;
var G__13464 = (shift + (5));
var G__13465 = key_or_nil;
var G__13466 = val_or_node;
var G__13467 = hash;
var G__13468 = key;
var G__13469 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__13463,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469) : cljs.core.create_node.call(null,G__13463,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_13482 = (0);
var j_13483 = (0);
while(true){
if((i_13482 < (32))){
if((((self__.bitmap >>> i_13482) & (1)) === (0))){
var G__13484 = (i_13482 + (1));
var G__13485 = j_13483;
i_13482 = G__13484;
j_13483 = G__13485;
continue;
} else {
(nodes[i_13482] = ((!(((self__.arr[j_13483]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_13483])),(self__.arr[j_13483]),(self__.arr[(j_13483 + (1))]),added_leaf_QMARK_):(self__.arr[(j_13483 + (1))])));

var G__13486 = (i_13482 + (1));
var G__13487 = (j_13483 + (2));
i_13482 = G__13486;
j_13483 = G__13487;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__13470 = (shift + (5));
var G__13471 = key_or_nil;
var G__13472 = val_or_node;
var G__13473 = hash;
var G__13474 = key;
var G__13475 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__13470,G__13471,G__13472,G__13473,G__13474,G__13475) : cljs.core.create_node.call(null,G__13470,G__13471,G__13472,G__13473,G__13474,G__13475));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__13488 = (i + (1));
var G__13489 = (j + (2));
var G__13490 = (bitmap | ((1) << i));
i = G__13488;
j = G__13489;
bitmap = G__13490;
continue;
} else {
var G__13491 = (i + (1));
var G__13492 = j;
var G__13493 = bitmap;
i = G__13491;
j = G__13492;
bitmap = G__13493;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__13494 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__13494) : cljs.core.create_array_node_seq.call(null,G__13494));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13495 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13495) : cljs.core.deref.call(null,G__13495));
} else {
var G__13496 = (i + (1));
var G__13497 = init__$2;
i = G__13496;
init__$1 = G__13497;
continue;
}
} else {
var G__13498 = (i + (1));
var G__13499 = init__$1;
i = G__13498;
init__$1 = G__13499;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__13500 = (i + (2));
i = G__13500;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__13501 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13501) : cljs.core.create_inode_seq.call(null,G__13501));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__13502 = self__.nodes;
var G__13503 = (self__.i + (2));
var G__13504 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13502,G__13503,G__13504) : cljs.core.create_inode_seq.call(null,G__13502,G__13503,G__13504));
} else {
var G__13505 = self__.nodes;
var G__13506 = self__.i;
var G__13507 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13505,G__13506,G__13507) : cljs.core.create_inode_seq.call(null,G__13505,G__13506,G__13507));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__13511 = (j + (2));
j = G__13511;
continue;
}
} else {
var G__13512 = (j + (2));
j = G__13512;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__13513 = null;
var G__13514 = self__.nodes;
var G__13515 = self__.i;
var G__13516 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__13513,G__13514,G__13515,G__13516) : cljs.core.create_array_node_seq.call(null,G__13513,G__13514,G__13515,G__13516));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__13521 = (j + (1));
j = G__13521;
continue;
}
} else {
var G__13522 = (j + (1));
j = G__13522;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13524 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13524) : cljs.core.keys.call(null,G__13524));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13525 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13525) : cljs.core.vals.call(null,G__13525));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13526 = cljs.core.seq(coll);
var chunk__13527 = null;
var count__13528 = (0);
var i__13529 = (0);
while(true){
if((i__13529 < count__13528)){
var vec__13530 = chunk__13527.cljs$core$IIndexed$_nth$arity$2(null,i__13529);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13530,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13530,(1),null);
var G__13531_13542 = v;
var G__13532_13543 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13531_13542,G__13532_13543) : f.call(null,G__13531_13542,G__13532_13543));

var G__13544 = seq__13526;
var G__13545 = chunk__13527;
var G__13546 = count__13528;
var G__13547 = (i__13529 + (1));
seq__13526 = G__13544;
chunk__13527 = G__13545;
count__13528 = G__13546;
i__13529 = G__13547;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13526);
if(temp__4126__auto__){
var seq__13526__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13526__$1)){
var c__8444__auto__ = cljs.core.chunk_first(seq__13526__$1);
var G__13548 = cljs.core.chunk_rest(seq__13526__$1);
var G__13549 = c__8444__auto__;
var G__13550 = cljs.core.count(c__8444__auto__);
var G__13551 = (0);
seq__13526 = G__13548;
chunk__13527 = G__13549;
count__13528 = G__13550;
i__13529 = G__13551;
continue;
} else {
var vec__13533 = cljs.core.first(seq__13526__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13533,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13533,(1),null);
var G__13534_13552 = v;
var G__13535_13553 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13534_13552,G__13535_13553) : f.call(null,G__13534_13552,G__13535_13553));

var G__13554 = cljs.core.next(seq__13526__$1);
var G__13555 = null;
var G__13556 = (0);
var G__13557 = (0);
seq__13526 = G__13554;
chunk__13527 = G__13555;
count__13528 = G__13556;
i__13529 = G__13557;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__13536 = init;
var G__13537 = null;
var G__13538 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13536,G__13537,G__13538) : f.call(null,G__13536,G__13537,G__13538));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__13539 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13539) : cljs.core.deref.call(null,G__13539));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj13541 = {};
return obj13541;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__13558 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__13559 = cljs.core.next(es);
ret = G__13558;
es = G__13559;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__13560 = null;
var G__13560__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13560__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13560 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13560__2.call(this,self__,k);
case 3:
return G__13560__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13560.cljs$core$IFn$_invoke$arity$2 = G__13560__2;
G__13560.cljs$core$IFn$_invoke$arity$3 = G__13560__3;
return G__13560;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args13523){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13523)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__13561 = (i + (2));
var G__13562 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__13561;
ret = G__13562;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__13563 = (i + (1));
var G__13564 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__13563;
out = G__13564;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__13565 = o;
if(G__13565){
var bit__8338__auto__ = (G__13565.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__8338__auto__) || (G__13565.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__13565.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13565);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13565);
}
})()){
return tcoll.assoc_BANG_((function (){var G__13566 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13566) : cljs.core.key.call(null,G__13566));
})(),(function (){var G__13567 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13567) : cljs.core.val.call(null,G__13567));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__13570 = cljs.core.next(es);
var G__13571 = tcoll__$1.assoc_BANG_((function (){var G__13568 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13568) : cljs.core.key.call(null,G__13568));
})(),(function (){var G__13569 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13569) : cljs.core.val.call(null,G__13569));
})());
es = G__13570;
tcoll__$1 = G__13571;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__13572 = ((ascending_QMARK_)?t.left:t.right);
var G__13573 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__13572;
stack__$1 = G__13573;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__13586 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13586) : cljs.core.deref.call(null,G__13586));
} else {
var init__$2 = (function (){var G__13587 = init__$1;
var G__13588 = node.key;
var G__13589 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13587,G__13588,G__13589) : f.call(null,G__13587,G__13588,G__13589));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13590 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13590) : cljs.core.deref.call(null,G__13590));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__13591 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13591) : cljs.core.deref.call(null,G__13591));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__13593 = null;
var G__13593__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13593__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13593 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13593__2.call(this,self__,k);
case 3:
return G__13593__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13593.cljs$core$IFn$_invoke$arity$2 = G__13593__2;
G__13593.cljs$core$IFn$_invoke$arity$3 = G__13593__3;
return G__13593;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args13592){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13592)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__13595 = null;
var G__13595__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13595__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13595 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13595__2.call(this,self__,k);
case 3:
return G__13595__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13595.cljs$core$IFn$_invoke$arity$2 = G__13595__2;
G__13595.cljs$core$IFn$_invoke$arity$3 = G__13595__3;
return G__13595;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args13594){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13594)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__13608 = k;
var G__13609 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13608,G__13609) : comp.call(null,G__13608,G__13609));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__13628 = k;
var G__13629 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13628,G__13629) : comp.call(null,G__13628,G__13629));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__13640 = k;
var G__13641 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13640,G__13641) : comp.call(null,G__13640,G__13641));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13643 = cljs.core.seq(coll);
var chunk__13644 = null;
var count__13645 = (0);
var i__13646 = (0);
while(true){
if((i__13646 < count__13645)){
var vec__13647 = chunk__13644.cljs$core$IIndexed$_nth$arity$2(null,i__13646);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13647,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13647,(1),null);
var G__13648_13660 = v;
var G__13649_13661 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13648_13660,G__13649_13661) : f.call(null,G__13648_13660,G__13649_13661));

var G__13662 = seq__13643;
var G__13663 = chunk__13644;
var G__13664 = count__13645;
var G__13665 = (i__13646 + (1));
seq__13643 = G__13662;
chunk__13644 = G__13663;
count__13645 = G__13664;
i__13646 = G__13665;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13643);
if(temp__4126__auto__){
var seq__13643__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13643__$1)){
var c__8444__auto__ = cljs.core.chunk_first(seq__13643__$1);
var G__13666 = cljs.core.chunk_rest(seq__13643__$1);
var G__13667 = c__8444__auto__;
var G__13668 = cljs.core.count(c__8444__auto__);
var G__13669 = (0);
seq__13643 = G__13666;
chunk__13644 = G__13667;
count__13645 = G__13668;
i__13646 = G__13669;
continue;
} else {
var vec__13650 = cljs.core.first(seq__13643__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13650,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13650,(1),null);
var G__13651_13670 = v;
var G__13652_13671 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13651_13670,G__13652_13671) : f.call(null,G__13651_13670,G__13652_13671));

var G__13672 = cljs.core.next(seq__13643__$1);
var G__13673 = null;
var G__13674 = (0);
var G__13675 = (0);
seq__13643 = G__13672;
chunk__13644 = G__13673;
count__13645 = G__13674;
i__13646 = G__13675;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13653 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13653) : cljs.core.keys.call(null,G__13653));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13654 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13654) : cljs.core.vals.call(null,G__13654));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__13655 = k;
var G__13656 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__13655,G__13656) : self__.comp.call(null,G__13655,G__13656));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__13676 = t.left;
t = G__13676;
continue;
} else {
var G__13677 = t.right;
t = G__13677;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__13678 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__13679 = cljs.core.next(es);
ret = G__13678;
es = G__13679;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__13680 = null;
var G__13680__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13680__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13680 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13680__2.call(this,self__,k);
case 3:
return G__13680__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13680.cljs$core$IFn$_invoke$arity$2 = G__13680__2;
G__13680.cljs$core$IFn$_invoke$arity$3 = G__13680__3;
return G__13680;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args13642){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13642)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__13657 = k;
var G__13658 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__13657,G__13658) : self__.comp.call(null,G__13657,G__13658));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__13681 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__13682 = t.left;
stack = G__13681;
t = G__13682;
continue;
} else {
var G__13683 = stack;
var G__13684 = t.right;
stack = G__13683;
t = G__13684;
continue;
}
} else {
if((c > (0))){
var G__13685 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__13686 = t.right;
stack = G__13685;
t = G__13686;
continue;
} else {
var G__13687 = stack;
var G__13688 = t.left;
stack = G__13687;
t = G__13688;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__13659 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13659) : cljs.core.key.call(null,G__13659));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__13689 = cljs.core.nnext(in$);
var G__13690 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__13689;
out = G__13690;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13691__i = 0, G__13691__a = new Array(arguments.length -  0);
while (G__13691__i < G__13691__a.length) {G__13691__a[G__13691__i] = arguments[G__13691__i + 0]; ++G__13691__i;}
  keyvals = new cljs.core.IndexedSeq(G__13691__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__13692){
var keyvals = cljs.core.seq(arglist__13692);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13693__i = 0, G__13693__a = new Array(arguments.length -  0);
while (G__13693__i < G__13693__a.length) {G__13693__a[G__13693__i] = arguments[G__13693__i + 0]; ++G__13693__i;}
  keyvals = new cljs.core.IndexedSeq(G__13693__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__13694){
var keyvals = cljs.core.seq(arglist__13694);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj13698 = {};
return obj13698;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__13699 = cljs.core.nnext(kvs);
kvs = G__13699;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13700__i = 0, G__13700__a = new Array(arguments.length -  0);
while (G__13700__i < G__13700__a.length) {G__13700__a[G__13700__i] = arguments[G__13700__i + 0]; ++G__13700__i;}
  keyvals = new cljs.core.IndexedSeq(G__13700__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__13701){
var keyvals = cljs.core.seq(arglist__13701);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__13702 = cljs.core.nnext(in$);
var G__13703 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__13702;
out = G__13703;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13704__i = 0, G__13704__a = new Array(arguments.length -  0);
while (G__13704__i < G__13704__a.length) {G__13704__a[G__13704__i] = arguments[G__13704__i + 0]; ++G__13704__i;}
  keyvals = new cljs.core.IndexedSeq(G__13704__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__13705){
var keyvals = cljs.core.seq(arglist__13705);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__13706 = cljs.core.nnext(in$);
var G__13707 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__13706;
out = G__13707;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__13708__i = 0, G__13708__a = new Array(arguments.length -  1);
while (G__13708__i < G__13708__a.length) {G__13708__a[G__13708__i] = arguments[G__13708__i + 1]; ++G__13708__i;}
  keyvals = new cljs.core.IndexedSeq(G__13708__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__13709){
var comparator = cljs.core.first(arglist__13709);
var keyvals = cljs.core.rest(arglist__13709);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__13710 = self__.mseq;
if(G__13710){
var bit__8338__auto__ = (G__13710.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__8338__auto__) || (G__13710.cljs$core$INext$)){
return true;
} else {
if((!G__13710.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13710);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13710);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__13711 = self__.mseq;
if(G__13711){
var bit__8338__auto__ = (G__13711.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__8338__auto__) || (G__13711.cljs$core$INext$)){
return true;
} else {
if((!G__13711.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13711);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13711);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__13712 = self__.mseq;
if(G__13712){
var bit__8338__auto__ = (G__13712.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__8338__auto__) || (G__13712.cljs$core$INext$)){
return true;
} else {
if((!G__13712.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13712);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13712);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__13713 = self__.mseq;
if(G__13713){
var bit__8338__auto__ = (G__13713.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__8338__auto__) || (G__13713.cljs$core$INext$)){
return true;
} else {
if((!G__13713.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13713);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__13713);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__13714_SHARP_,p2__13715_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__7657__auto__ = p1__13714_SHARP_;
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__13715_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__13716__i = 0, G__13716__a = new Array(arguments.length -  0);
while (G__13716__i < G__13716__a.length) {G__13716__a[G__13716__i] = arguments[G__13716__i + 0]; ++G__13716__i;}
  maps = new cljs.core.IndexedSeq(G__13716__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__13717){
var maps = cljs.core.seq(arglist__13717);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13720 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13721 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13720,G__13721) : f.call(null,G__13720,G__13721));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__7657__auto__ = m1;
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__13722__i = 0, G__13722__a = new Array(arguments.length -  1);
while (G__13722__i < G__13722__a.length) {G__13722__a[G__13722__i] = arguments[G__13722__i + 1]; ++G__13722__i;}
  maps = new cljs.core.IndexedSeq(G__13722__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__13723){
var f = cljs.core.first(arglist__13723);
var maps = cljs.core.rest(arglist__13723);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__13724 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__13725 = cljs.core.next(keys);
ret = G__13724;
keys = G__13725;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13728 = cljs.core.seq(coll);
var chunk__13729 = null;
var count__13730 = (0);
var i__13731 = (0);
while(true){
if((i__13731 < count__13730)){
var vec__13732 = chunk__13729.cljs$core$IIndexed$_nth$arity$2(null,i__13731);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13732,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13732,(1),null);
var G__13733_13738 = v;
var G__13734_13739 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13733_13738,G__13734_13739) : f.call(null,G__13733_13738,G__13734_13739));

var G__13740 = seq__13728;
var G__13741 = chunk__13729;
var G__13742 = count__13730;
var G__13743 = (i__13731 + (1));
seq__13728 = G__13740;
chunk__13729 = G__13741;
count__13730 = G__13742;
i__13731 = G__13743;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13728);
if(temp__4126__auto__){
var seq__13728__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13728__$1)){
var c__8444__auto__ = cljs.core.chunk_first(seq__13728__$1);
var G__13744 = cljs.core.chunk_rest(seq__13728__$1);
var G__13745 = c__8444__auto__;
var G__13746 = cljs.core.count(c__8444__auto__);
var G__13747 = (0);
seq__13728 = G__13744;
chunk__13729 = G__13745;
count__13730 = G__13746;
i__13731 = G__13747;
continue;
} else {
var vec__13735 = cljs.core.first(seq__13728__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13735,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13735,(1),null);
var G__13736_13748 = v;
var G__13737_13749 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13736_13748,G__13737_13749) : f.call(null,G__13736_13748,G__13737_13749));

var G__13750 = cljs.core.next(seq__13728__$1);
var G__13751 = null;
var G__13752 = (0);
var G__13753 = (0);
seq__13728 = G__13750;
chunk__13729 = G__13751;
count__13730 = G__13752;
i__13731 = G__13753;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__13726_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__13726_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__13754 = null;
var G__13754__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13754__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13754 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13754__2.call(this,self__,k);
case 3:
return G__13754__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13754.cljs$core$IFn$_invoke$arity$2 = G__13754__2;
G__13754.cljs$core$IFn$_invoke$arity$3 = G__13754__3;
return G__13754;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args13727){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13727)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__13755 = (i + (1));
var G__13756 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__13755;
out = G__13756;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__13757 = (i + (1));
var G__13758 = cljs.core._conj_BANG_(out,(items[i]));
i = G__13757;
out = G__13758;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__13760 = null;
var G__13760__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__13760__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__13760 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13760__2.call(this,self__,k);
case 3:
return G__13760__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13760.cljs$core$IFn$_invoke$arity$2 = G__13760__2;
G__13760.cljs$core$IFn$_invoke$arity$3 = G__13760__3;
return G__13760;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args13759){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13759)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13763 = cljs.core.seq(coll);
var chunk__13764 = null;
var count__13765 = (0);
var i__13766 = (0);
while(true){
if((i__13766 < count__13765)){
var vec__13767 = chunk__13764.cljs$core$IIndexed$_nth$arity$2(null,i__13766);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13767,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13767,(1),null);
var G__13768_13773 = v;
var G__13769_13774 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13768_13773,G__13769_13774) : f.call(null,G__13768_13773,G__13769_13774));

var G__13775 = seq__13763;
var G__13776 = chunk__13764;
var G__13777 = count__13765;
var G__13778 = (i__13766 + (1));
seq__13763 = G__13775;
chunk__13764 = G__13776;
count__13765 = G__13777;
i__13766 = G__13778;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13763);
if(temp__4126__auto__){
var seq__13763__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13763__$1)){
var c__8444__auto__ = cljs.core.chunk_first(seq__13763__$1);
var G__13779 = cljs.core.chunk_rest(seq__13763__$1);
var G__13780 = c__8444__auto__;
var G__13781 = cljs.core.count(c__8444__auto__);
var G__13782 = (0);
seq__13763 = G__13779;
chunk__13764 = G__13780;
count__13765 = G__13781;
i__13766 = G__13782;
continue;
} else {
var vec__13770 = cljs.core.first(seq__13763__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13770,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13770,(1),null);
var G__13771_13783 = v;
var G__13772_13784 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13771_13783,G__13772_13784) : f.call(null,G__13771_13783,G__13772_13784));

var G__13785 = cljs.core.next(seq__13763__$1);
var G__13786 = null;
var G__13787 = (0);
var G__13788 = (0);
seq__13763 = G__13785;
chunk__13764 = G__13786;
count__13765 = G__13787;
i__13766 = G__13788;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__13761_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__13761_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__13789 = null;
var G__13789__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13789__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13789 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13789__2.call(this,self__,k);
case 3:
return G__13789__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13789.cljs$core$IFn$_invoke$arity$2 = G__13789__2;
G__13789.cljs$core$IFn$_invoke$arity$3 = G__13789__3;
return G__13789;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args13762){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13762)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__8538__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__8538__auto__.length)){
var G__13790 = (i + (1));
var G__13791 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__13790;
res = G__13791;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__13792 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__13793 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__13792;
out = G__13793;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__13794__delegate = function (keys){
return cljs.core.set(keys);
};
var G__13794 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__13795__i = 0, G__13795__a = new Array(arguments.length -  0);
while (G__13795__i < G__13795__a.length) {G__13795__a[G__13795__i] = arguments[G__13795__i + 0]; ++G__13795__i;}
  keys = new cljs.core.IndexedSeq(G__13795__a,0);
} 
return G__13794__delegate.call(this,keys);};
G__13794.cljs$lang$maxFixedArity = 0;
G__13794.cljs$lang$applyTo = (function (arglist__13796){
var keys = cljs.core.seq(arglist__13796);
return G__13794__delegate(keys);
});
G__13794.cljs$core$IFn$_invoke$arity$variadic = G__13794__delegate;
return G__13794;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__13797 = null;
if (arguments.length > 0) {
var G__13798__i = 0, G__13798__a = new Array(arguments.length -  0);
while (G__13798__i < G__13798__a.length) {G__13798__a[G__13798__i] = arguments[G__13798__i + 0]; ++G__13798__i;}
G__13797 = new cljs.core.IndexedSeq(G__13798__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__13797);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__13799__i = 0, G__13799__a = new Array(arguments.length -  0);
while (G__13799__i < G__13799__a.length) {G__13799__a[G__13799__i] = arguments[G__13799__i + 0]; ++G__13799__i;}
  keys = new cljs.core.IndexedSeq(G__13799__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__13800){
var keys = cljs.core.seq(arglist__13800);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__13801__i = 0, G__13801__a = new Array(arguments.length -  1);
while (G__13801__i < G__13801__a.length) {G__13801__a[G__13801__i] = arguments[G__13801__i + 1]; ++G__13801__i;}
  keys = new cljs.core.IndexedSeq(G__13801__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__13802){
var comparator = cljs.core.first(arglist__13802);
var keys = cljs.core.rest(arglist__13802);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__13803_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__13803_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__13803_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__13804_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__13804_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__13804_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__13825 = null;
var G__13825__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13825__1 = (function (result){
var G__13815 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13815) : rf.call(null,G__13815));
});
var G__13825__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__13816 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13816) : cljs.core.deref.call(null,G__13816));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__13817 = result;
var G__13818 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13817,G__13818) : rf.call(null,G__13817,G__13818));
}
});
G__13825 = function(result,input){
switch(arguments.length){
case 0:
return G__13825__0.call(this);
case 1:
return G__13825__1.call(this,result);
case 2:
return G__13825__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13825.cljs$core$IFn$_invoke$arity$0 = G__13825__0;
G__13825.cljs$core$IFn$_invoke$arity$1 = G__13825__1;
G__13825.cljs$core$IFn$_invoke$arity$2 = G__13825__2;
return G__13825;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__13823,seen__$1){
while(true){
var vec__13824 = p__13823;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13824,(0),null);
var xs__$1 = vec__13824;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__13826 = cljs.core.rest(s);
var G__13827 = seen__$1;
p__13823 = G__13826;
seen__$1 = G__13827;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__13828 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__13829 = cljs.core.next(s__$1);
ret = G__13828;
s__$1 = G__13829;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__13831 = x;
if(G__13831){
var bit__8331__auto__ = (G__13831.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__8331__auto__) || (G__13831.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__13832 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__13833 = cljs.core.next(ks);
var G__13834 = cljs.core.next(vs);
map = G__13832;
ks = G__13833;
vs = G__13834;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__13845 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__13845) : k.call(null,G__13845));
})() > (function (){var G__13846 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__13846) : k.call(null,G__13846));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__13847__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__13835_SHARP_,p2__13836_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__13835_SHARP_,p2__13836_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__13847 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__13848__i = 0, G__13848__a = new Array(arguments.length -  3);
while (G__13848__i < G__13848__a.length) {G__13848__a[G__13848__i] = arguments[G__13848__i + 3]; ++G__13848__i;}
  more = new cljs.core.IndexedSeq(G__13848__a,0);
} 
return G__13847__delegate.call(this,k,x,y,more);};
G__13847.cljs$lang$maxFixedArity = 3;
G__13847.cljs$lang$applyTo = (function (arglist__13849){
var k = cljs.core.first(arglist__13849);
arglist__13849 = cljs.core.next(arglist__13849);
var x = cljs.core.first(arglist__13849);
arglist__13849 = cljs.core.next(arglist__13849);
var y = cljs.core.first(arglist__13849);
var more = cljs.core.rest(arglist__13849);
return G__13847__delegate(k,x,y,more);
});
G__13847.cljs$core$IFn$_invoke$arity$variadic = G__13847__delegate;
return G__13847;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__13850 = null;
if (arguments.length > 3) {
var G__13851__i = 0, G__13851__a = new Array(arguments.length -  3);
while (G__13851__i < G__13851__a.length) {G__13851__a[G__13851__i] = arguments[G__13851__i + 3]; ++G__13851__i;}
G__13850 = new cljs.core.IndexedSeq(G__13851__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__13850);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__13862 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__13862) : k.call(null,G__13862));
})() < (function (){var G__13863 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__13863) : k.call(null,G__13863));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__13864__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__13852_SHARP_,p2__13853_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__13852_SHARP_,p2__13853_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__13864 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__13865__i = 0, G__13865__a = new Array(arguments.length -  3);
while (G__13865__i < G__13865__a.length) {G__13865__a[G__13865__i] = arguments[G__13865__i + 3]; ++G__13865__i;}
  more = new cljs.core.IndexedSeq(G__13865__a,0);
} 
return G__13864__delegate.call(this,k,x,y,more);};
G__13864.cljs$lang$maxFixedArity = 3;
G__13864.cljs$lang$applyTo = (function (arglist__13866){
var k = cljs.core.first(arglist__13866);
arglist__13866 = cljs.core.next(arglist__13866);
var x = cljs.core.first(arglist__13866);
arglist__13866 = cljs.core.next(arglist__13866);
var y = cljs.core.first(arglist__13866);
var more = cljs.core.rest(arglist__13866);
return G__13864__delegate(k,x,y,more);
});
G__13864.cljs$core$IFn$_invoke$arity$variadic = G__13864__delegate;
return G__13864;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__13867 = null;
if (arguments.length > 3) {
var G__13868__i = 0, G__13868__a = new Array(arguments.length -  3);
while (G__13868__i < G__13868__a.length) {G__13868__a[G__13868__i] = arguments[G__13868__i + 3]; ++G__13868__i;}
G__13867 = new cljs.core.IndexedSeq(G__13868__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__13867);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__13885 = null;
var G__13885__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13885__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__13880 = result;
var G__13881 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13880,G__13881) : rf.call(null,G__13880,G__13881));
})());
})());
var G__13882 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13882) : rf.call(null,G__13882));
});
var G__13885__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__13883 = result;
var G__13884 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13883,G__13884) : rf.call(null,G__13883,G__13884));
} else {
return result;
}
});
G__13885 = function(result,input){
switch(arguments.length){
case 0:
return G__13885__0.call(this);
case 1:
return G__13885__1.call(this,result);
case 2:
return G__13885__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13885.cljs$core$IFn$_invoke$arity$0 = G__13885__0;
G__13885.cljs$core$IFn$_invoke$arity$1 = G__13885__1;
G__13885.cljs$core$IFn$_invoke$arity$2 = G__13885__2;
return G__13885;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__13898 = null;
var G__13898__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13898__1 = (function (result){
var G__13893 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13893) : rf.call(null,G__13893));
});
var G__13898__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__13894 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13894) : pred.call(null,G__13894));
})())){
var G__13895 = result;
var G__13896 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13895,G__13896) : rf.call(null,G__13895,G__13896));
} else {
return cljs.core.reduced(result);
}
});
G__13898 = function(result,input){
switch(arguments.length){
case 0:
return G__13898__0.call(this);
case 1:
return G__13898__1.call(this,result);
case 2:
return G__13898__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13898.cljs$core$IFn$_invoke$arity$0 = G__13898__0;
G__13898.cljs$core$IFn$_invoke$arity$1 = G__13898__1;
G__13898.cljs$core$IFn$_invoke$arity$2 = G__13898__2;
return G__13898;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__13897 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13897) : pred.call(null,G__13897));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__13903 = (function (){var G__13905 = cljs.core._entry_key(sc,e);
var G__13906 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13905,G__13906) : comp.call(null,G__13905,G__13906));
})();
var G__13904 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__13903,G__13904) : test.call(null,G__13903,G__13904));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__13910 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13910,(0),null);
var s = vec__13910;
if(cljs.core.truth_((function (){var G__13911 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__13911) : include.call(null,G__13911));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__13912 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13912,(0),null);
var s = vec__13912;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__13916 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13916,(0),null);
var s = vec__13916;
if(cljs.core.truth_((function (){var G__13917 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__13917) : include.call(null,G__13917));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__13918 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13918,(0),null);
var s = vec__13918;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__13919 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__13919) : Math.ceil.call(null,G__13919));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__8078__auto__ = self__.__hash;
if(!((h__8078__auto__ == null))){
return h__8078__auto__;
} else {
var h__8078__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__8078__auto____$1;

return h__8078__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__13920 = ret;
var G__13921 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13920,G__13921) : f.call(null,G__13920,G__13921));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__13922 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13922) : cljs.core.deref.call(null,G__13922));
} else {
var G__13923 = (i + self__.step);
var G__13924 = ret__$1;
i = G__13923;
ret = G__13924;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__13942 = null;
var G__13942__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13942__1 = (function (result){
var G__13939 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13939) : rf.call(null,G__13939));
});
var G__13942__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__13940 = result;
var G__13941 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13940,G__13941) : rf.call(null,G__13940,G__13941));
} else {
return result;
}
});
G__13942 = function(result,input){
switch(arguments.length){
case 0:
return G__13942__0.call(this);
case 1:
return G__13942__1.call(this,result);
case 2:
return G__13942__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13942.cljs$core$IFn$_invoke$arity$0 = G__13942__0;
G__13942.cljs$core$IFn$_invoke$arity$1 = G__13942__1;
G__13942.cljs$core$IFn$_invoke$arity$2 = G__13942__2;
return G__13942;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__13964 = null;
var G__13964__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13964__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__13955 = result;
var G__13956 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13955,G__13956) : rf.call(null,G__13955,G__13956));
})());
})());
var G__13957 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13957) : rf.call(null,G__13957));
});
var G__13964__2 = (function (result,input){
var pval = (function (){var G__13958 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13958) : cljs.core.deref.call(null,G__13958));
})();
var val = (function (){var G__13959 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13959) : f.call(null,G__13959));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__13960 = result;
var G__13961 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13960,G__13961) : rf.call(null,G__13960,G__13961));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__13964 = function(result,input){
switch(arguments.length){
case 0:
return G__13964__0.call(this);
case 1:
return G__13964__1.call(this,result);
case 2:
return G__13964__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13964.cljs$core$IFn$_invoke$arity$0 = G__13964__0;
G__13964.cljs$core$IFn$_invoke$arity$1 = G__13964__1;
G__13964.cljs$core$IFn$_invoke$arity$2 = G__13964__2;
return G__13964;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__13962 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13962) : f.call(null,G__13962));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__13943_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__13963 = p1__13943_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13963) : f.call(null,G__13963));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__13973 = init;
var G__13974 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13973,G__13974) : f.call(null,G__13973,G__13974));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__14069 = null;
var G__14069__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__14069__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14027 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14027) : f.call(null,G__14027));
})()],null));
});
var G__14069__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14028 = x;
var G__14029 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14028,G__14029) : f.call(null,G__14028,G__14029));
})()],null));
});
var G__14069__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14030 = x;
var G__14031 = y;
var G__14032 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14030,G__14031,G__14032) : f.call(null,G__14030,G__14031,G__14032));
})()],null));
});
var G__14069__4 = (function() { 
var G__14070__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__14070 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14071__i = 0, G__14071__a = new Array(arguments.length -  3);
while (G__14071__i < G__14071__a.length) {G__14071__a[G__14071__i] = arguments[G__14071__i + 3]; ++G__14071__i;}
  args = new cljs.core.IndexedSeq(G__14071__a,0);
} 
return G__14070__delegate.call(this,x,y,z,args);};
G__14070.cljs$lang$maxFixedArity = 3;
G__14070.cljs$lang$applyTo = (function (arglist__14072){
var x = cljs.core.first(arglist__14072);
arglist__14072 = cljs.core.next(arglist__14072);
var y = cljs.core.first(arglist__14072);
arglist__14072 = cljs.core.next(arglist__14072);
var z = cljs.core.first(arglist__14072);
var args = cljs.core.rest(arglist__14072);
return G__14070__delegate(x,y,z,args);
});
G__14070.cljs$core$IFn$_invoke$arity$variadic = G__14070__delegate;
return G__14070;
})()
;
G__14069 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14069__0.call(this);
case 1:
return G__14069__1.call(this,x);
case 2:
return G__14069__2.call(this,x,y);
case 3:
return G__14069__3.call(this,x,y,z);
default:
var G__14073 = null;
if (arguments.length > 3) {
var G__14074__i = 0, G__14074__a = new Array(arguments.length -  3);
while (G__14074__i < G__14074__a.length) {G__14074__a[G__14074__i] = arguments[G__14074__i + 3]; ++G__14074__i;}
G__14073 = new cljs.core.IndexedSeq(G__14074__a,0);
}
return G__14069__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14073);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14069.cljs$lang$maxFixedArity = 3;
G__14069.cljs$lang$applyTo = G__14069__4.cljs$lang$applyTo;
G__14069.cljs$core$IFn$_invoke$arity$0 = G__14069__0;
G__14069.cljs$core$IFn$_invoke$arity$1 = G__14069__1;
G__14069.cljs$core$IFn$_invoke$arity$2 = G__14069__2;
G__14069.cljs$core$IFn$_invoke$arity$3 = G__14069__3;
G__14069.cljs$core$IFn$_invoke$arity$variadic = G__14069__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14069;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__14075 = null;
var G__14075__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__14075__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14033 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14033) : f.call(null,G__14033));
})(),(function (){var G__14034 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14034) : g.call(null,G__14034));
})()],null));
});
var G__14075__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14035 = x;
var G__14036 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14035,G__14036) : f.call(null,G__14035,G__14036));
})(),(function (){var G__14037 = x;
var G__14038 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14037,G__14038) : g.call(null,G__14037,G__14038));
})()],null));
});
var G__14075__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14039 = x;
var G__14040 = y;
var G__14041 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14039,G__14040,G__14041) : f.call(null,G__14039,G__14040,G__14041));
})(),(function (){var G__14042 = x;
var G__14043 = y;
var G__14044 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14042,G__14043,G__14044) : g.call(null,G__14042,G__14043,G__14044));
})()],null));
});
var G__14075__4 = (function() { 
var G__14076__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__14076 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14077__i = 0, G__14077__a = new Array(arguments.length -  3);
while (G__14077__i < G__14077__a.length) {G__14077__a[G__14077__i] = arguments[G__14077__i + 3]; ++G__14077__i;}
  args = new cljs.core.IndexedSeq(G__14077__a,0);
} 
return G__14076__delegate.call(this,x,y,z,args);};
G__14076.cljs$lang$maxFixedArity = 3;
G__14076.cljs$lang$applyTo = (function (arglist__14078){
var x = cljs.core.first(arglist__14078);
arglist__14078 = cljs.core.next(arglist__14078);
var y = cljs.core.first(arglist__14078);
arglist__14078 = cljs.core.next(arglist__14078);
var z = cljs.core.first(arglist__14078);
var args = cljs.core.rest(arglist__14078);
return G__14076__delegate(x,y,z,args);
});
G__14076.cljs$core$IFn$_invoke$arity$variadic = G__14076__delegate;
return G__14076;
})()
;
G__14075 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14075__0.call(this);
case 1:
return G__14075__1.call(this,x);
case 2:
return G__14075__2.call(this,x,y);
case 3:
return G__14075__3.call(this,x,y,z);
default:
var G__14079 = null;
if (arguments.length > 3) {
var G__14080__i = 0, G__14080__a = new Array(arguments.length -  3);
while (G__14080__i < G__14080__a.length) {G__14080__a[G__14080__i] = arguments[G__14080__i + 3]; ++G__14080__i;}
G__14079 = new cljs.core.IndexedSeq(G__14080__a,0);
}
return G__14075__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14079);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14075.cljs$lang$maxFixedArity = 3;
G__14075.cljs$lang$applyTo = G__14075__4.cljs$lang$applyTo;
G__14075.cljs$core$IFn$_invoke$arity$0 = G__14075__0;
G__14075.cljs$core$IFn$_invoke$arity$1 = G__14075__1;
G__14075.cljs$core$IFn$_invoke$arity$2 = G__14075__2;
G__14075.cljs$core$IFn$_invoke$arity$3 = G__14075__3;
G__14075.cljs$core$IFn$_invoke$arity$variadic = G__14075__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14075;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__14081 = null;
var G__14081__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__14081__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14045 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14045) : f.call(null,G__14045));
})(),(function (){var G__14046 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14046) : g.call(null,G__14046));
})(),(function (){var G__14047 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14047) : h.call(null,G__14047));
})()],null));
});
var G__14081__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14048 = x;
var G__14049 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14048,G__14049) : f.call(null,G__14048,G__14049));
})(),(function (){var G__14050 = x;
var G__14051 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14050,G__14051) : g.call(null,G__14050,G__14051));
})(),(function (){var G__14052 = x;
var G__14053 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14052,G__14053) : h.call(null,G__14052,G__14053));
})()],null));
});
var G__14081__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14054 = x;
var G__14055 = y;
var G__14056 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14054,G__14055,G__14056) : f.call(null,G__14054,G__14055,G__14056));
})(),(function (){var G__14057 = x;
var G__14058 = y;
var G__14059 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14057,G__14058,G__14059) : g.call(null,G__14057,G__14058,G__14059));
})(),(function (){var G__14060 = x;
var G__14061 = y;
var G__14062 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14060,G__14061,G__14062) : h.call(null,G__14060,G__14061,G__14062));
})()],null));
});
var G__14081__4 = (function() { 
var G__14082__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__14082 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14083__i = 0, G__14083__a = new Array(arguments.length -  3);
while (G__14083__i < G__14083__a.length) {G__14083__a[G__14083__i] = arguments[G__14083__i + 3]; ++G__14083__i;}
  args = new cljs.core.IndexedSeq(G__14083__a,0);
} 
return G__14082__delegate.call(this,x,y,z,args);};
G__14082.cljs$lang$maxFixedArity = 3;
G__14082.cljs$lang$applyTo = (function (arglist__14084){
var x = cljs.core.first(arglist__14084);
arglist__14084 = cljs.core.next(arglist__14084);
var y = cljs.core.first(arglist__14084);
arglist__14084 = cljs.core.next(arglist__14084);
var z = cljs.core.first(arglist__14084);
var args = cljs.core.rest(arglist__14084);
return G__14082__delegate(x,y,z,args);
});
G__14082.cljs$core$IFn$_invoke$arity$variadic = G__14082__delegate;
return G__14082;
})()
;
G__14081 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14081__0.call(this);
case 1:
return G__14081__1.call(this,x);
case 2:
return G__14081__2.call(this,x,y);
case 3:
return G__14081__3.call(this,x,y,z);
default:
var G__14085 = null;
if (arguments.length > 3) {
var G__14086__i = 0, G__14086__a = new Array(arguments.length -  3);
while (G__14086__i < G__14086__a.length) {G__14086__a[G__14086__i] = arguments[G__14086__i + 3]; ++G__14086__i;}
G__14085 = new cljs.core.IndexedSeq(G__14086__a,0);
}
return G__14081__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14085);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14081.cljs$lang$maxFixedArity = 3;
G__14081.cljs$lang$applyTo = G__14081__4.cljs$lang$applyTo;
G__14081.cljs$core$IFn$_invoke$arity$0 = G__14081__0;
G__14081.cljs$core$IFn$_invoke$arity$1 = G__14081__1;
G__14081.cljs$core$IFn$_invoke$arity$2 = G__14081__2;
G__14081.cljs$core$IFn$_invoke$arity$3 = G__14081__3;
G__14081.cljs$core$IFn$_invoke$arity$variadic = G__14081__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14081;
})()
});
var juxt__4 = (function() { 
var G__14087__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__14088 = null;
var G__14088__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__13975_SHARP_,p2__13976_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__13975_SHARP_,(function (){return (p2__13976_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__13976_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__13976_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14088__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__13977_SHARP_,p2__13978_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__13977_SHARP_,(function (){var G__14063 = x;
return (p2__13978_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__13978_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14063) : p2__13978_SHARP_.call(null,G__14063));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14088__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__13979_SHARP_,p2__13980_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__13979_SHARP_,(function (){var G__14064 = x;
var G__14065 = y;
return (p2__13980_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__13980_SHARP_.cljs$core$IFn$_invoke$arity$2(G__14064,G__14065) : p2__13980_SHARP_.call(null,G__14064,G__14065));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14088__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__13981_SHARP_,p2__13982_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__13981_SHARP_,(function (){var G__14066 = x;
var G__14067 = y;
var G__14068 = z;
return (p2__13982_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__13982_SHARP_.cljs$core$IFn$_invoke$arity$3(G__14066,G__14067,G__14068) : p2__13982_SHARP_.call(null,G__14066,G__14067,G__14068));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14088__4 = (function() { 
var G__14089__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__13983_SHARP_,p2__13984_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__13983_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__13984_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__14089 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14090__i = 0, G__14090__a = new Array(arguments.length -  3);
while (G__14090__i < G__14090__a.length) {G__14090__a[G__14090__i] = arguments[G__14090__i + 3]; ++G__14090__i;}
  args = new cljs.core.IndexedSeq(G__14090__a,0);
} 
return G__14089__delegate.call(this,x,y,z,args);};
G__14089.cljs$lang$maxFixedArity = 3;
G__14089.cljs$lang$applyTo = (function (arglist__14091){
var x = cljs.core.first(arglist__14091);
arglist__14091 = cljs.core.next(arglist__14091);
var y = cljs.core.first(arglist__14091);
arglist__14091 = cljs.core.next(arglist__14091);
var z = cljs.core.first(arglist__14091);
var args = cljs.core.rest(arglist__14091);
return G__14089__delegate(x,y,z,args);
});
G__14089.cljs$core$IFn$_invoke$arity$variadic = G__14089__delegate;
return G__14089;
})()
;
G__14088 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14088__0.call(this);
case 1:
return G__14088__1.call(this,x);
case 2:
return G__14088__2.call(this,x,y);
case 3:
return G__14088__3.call(this,x,y,z);
default:
var G__14092 = null;
if (arguments.length > 3) {
var G__14093__i = 0, G__14093__a = new Array(arguments.length -  3);
while (G__14093__i < G__14093__a.length) {G__14093__a[G__14093__i] = arguments[G__14093__i + 3]; ++G__14093__i;}
G__14092 = new cljs.core.IndexedSeq(G__14093__a,0);
}
return G__14088__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14088.cljs$lang$maxFixedArity = 3;
G__14088.cljs$lang$applyTo = G__14088__4.cljs$lang$applyTo;
G__14088.cljs$core$IFn$_invoke$arity$0 = G__14088__0;
G__14088.cljs$core$IFn$_invoke$arity$1 = G__14088__1;
G__14088.cljs$core$IFn$_invoke$arity$2 = G__14088__2;
G__14088.cljs$core$IFn$_invoke$arity$3 = G__14088__3;
G__14088.cljs$core$IFn$_invoke$arity$variadic = G__14088__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14088;
})()
;})(fs__$1))
};
var G__14087 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__14094__i = 0, G__14094__a = new Array(arguments.length -  3);
while (G__14094__i < G__14094__a.length) {G__14094__a[G__14094__i] = arguments[G__14094__i + 3]; ++G__14094__i;}
  fs = new cljs.core.IndexedSeq(G__14094__a,0);
} 
return G__14087__delegate.call(this,f,g,h,fs);};
G__14087.cljs$lang$maxFixedArity = 3;
G__14087.cljs$lang$applyTo = (function (arglist__14095){
var f = cljs.core.first(arglist__14095);
arglist__14095 = cljs.core.next(arglist__14095);
var g = cljs.core.first(arglist__14095);
arglist__14095 = cljs.core.next(arglist__14095);
var h = cljs.core.first(arglist__14095);
var fs = cljs.core.rest(arglist__14095);
return G__14087__delegate(f,g,h,fs);
});
G__14087.cljs$core$IFn$_invoke$arity$variadic = G__14087__delegate;
return G__14087;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__14096 = null;
if (arguments.length > 3) {
var G__14097__i = 0, G__14097__a = new Array(arguments.length -  3);
while (G__14097__i < G__14097__a.length) {G__14097__a[G__14097__i] = arguments[G__14097__i + 3]; ++G__14097__i;}
G__14096 = new cljs.core.IndexedSeq(G__14097__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__14096);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__14098 = cljs.core.next(coll);
coll = G__14098;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__14099 = (n - (1));
var G__14100 = cljs.core.next(coll);
n = G__14099;
coll = G__14100;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__14104 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14104,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14104,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14104,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_14112 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__14113_14119 = cljs.core.first(coll);
var G__14114_14120 = writer;
var G__14115_14121 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14113_14119,G__14114_14120,G__14115_14121) : print_one.call(null,G__14113_14119,G__14114_14120,G__14115_14121));
} else {
}

var coll_14122__$1 = cljs.core.next(coll);
var n_14123 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_14122__$1) && (((n_14123 == null)) || (!((n_14123 === (0)))))){
cljs.core._write(writer,sep);

var G__14116_14124 = cljs.core.first(coll_14122__$1);
var G__14117_14125 = writer;
var G__14118_14126 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14116_14124,G__14117_14125,G__14118_14126) : print_one.call(null,G__14116_14124,G__14117_14125,G__14118_14126));

var G__14127 = cljs.core.next(coll_14122__$1);
var G__14128 = (n_14123 - (1));
coll_14122__$1 = G__14127;
n_14123 = G__14128;
continue;
} else {
if((cljs.core.seq(coll_14122__$1)) && ((n_14123 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_14112;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__14133 = cljs.core.seq(ss);
var chunk__14134 = null;
var count__14135 = (0);
var i__14136 = (0);
while(true){
if((i__14136 < count__14135)){
var s = chunk__14134.cljs$core$IIndexed$_nth$arity$2(null,i__14136);
cljs.core._write(writer,s);

var G__14137 = seq__14133;
var G__14138 = chunk__14134;
var G__14139 = count__14135;
var G__14140 = (i__14136 + (1));
seq__14133 = G__14137;
chunk__14134 = G__14138;
count__14135 = G__14139;
i__14136 = G__14140;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14133);
if(temp__4126__auto__){
var seq__14133__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14133__$1)){
var c__8444__auto__ = cljs.core.chunk_first(seq__14133__$1);
var G__14141 = cljs.core.chunk_rest(seq__14133__$1);
var G__14142 = c__8444__auto__;
var G__14143 = cljs.core.count(c__8444__auto__);
var G__14144 = (0);
seq__14133 = G__14141;
chunk__14134 = G__14142;
count__14135 = G__14143;
i__14136 = G__14144;
continue;
} else {
var s = cljs.core.first(seq__14133__$1);
cljs.core._write(writer,s);

var G__14145 = cljs.core.next(seq__14133__$1);
var G__14146 = null;
var G__14147 = (0);
var G__14148 = (0);
seq__14133 = G__14145;
chunk__14134 = G__14146;
count__14135 = G__14147;
i__14136 = G__14148;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__14149__i = 0, G__14149__a = new Array(arguments.length -  1);
while (G__14149__i < G__14149__a.length) {G__14149__a[G__14149__i] = arguments[G__14149__i + 1]; ++G__14149__i;}
  ss = new cljs.core.IndexedSeq(G__14149__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__14150){
var writer = cljs.core.first(arglist__14150);
var ss = cljs.core.rest(arglist__14150);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj14152 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj14152;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__14155 = "[\\\\\"\b\f\n\r\t]";
var G__14156 = "g";
return RegExp(G__14155,G__14156);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__7645__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__7645__auto__)){
var and__7645__auto____$1 = (function (){var G__14170 = obj;
if(G__14170){
var bit__8338__auto__ = (G__14170.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__8338__auto__) || (G__14170.cljs$core$IMeta$)){
return true;
} else {
if((!G__14170.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14170);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14170);
}
})();
if(and__7645__auto____$1){
return cljs.core.meta(obj);
} else {
return and__7645__auto____$1;
}
} else {
return and__7645__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__14171 = obj;
if(G__14171){
var bit__8331__auto__ = (G__14171.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__8331__auto__) || (G__14171.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__14172 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__14173 = pr_writer;
var G__14174 = writer;
var G__14175 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__14172,G__14173,G__14174,G__14175) : cljs.core.print_map.call(null,G__14172,G__14173,G__14174,G__14175));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__14176 = obj;
return goog.isString(G__14176);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__14178 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__14178;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__14177 = obj;
if(G__14177){
var bit__8338__auto__ = (G__14177.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__8338__auto__) || (G__14177.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__14177.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__14177);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__14177);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__14183 = cljs.core.seq(cljs.core.next(objs));
var chunk__14184 = null;
var count__14185 = (0);
var i__14186 = (0);
while(true){
if((i__14186 < count__14185)){
var obj = chunk__14184.cljs$core$IIndexed$_nth$arity$2(null,i__14186);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__14187 = seq__14183;
var G__14188 = chunk__14184;
var G__14189 = count__14185;
var G__14190 = (i__14186 + (1));
seq__14183 = G__14187;
chunk__14184 = G__14188;
count__14185 = G__14189;
i__14186 = G__14190;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14183);
if(temp__4126__auto__){
var seq__14183__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14183__$1)){
var c__8444__auto__ = cljs.core.chunk_first(seq__14183__$1);
var G__14191 = cljs.core.chunk_rest(seq__14183__$1);
var G__14192 = c__8444__auto__;
var G__14193 = cljs.core.count(c__8444__auto__);
var G__14194 = (0);
seq__14183 = G__14191;
chunk__14184 = G__14192;
count__14185 = G__14193;
i__14186 = G__14194;
continue;
} else {
var obj = cljs.core.first(seq__14183__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__14195 = cljs.core.next(seq__14183__$1);
var G__14196 = null;
var G__14197 = (0);
var G__14198 = (0);
seq__14183 = G__14195;
chunk__14184 = G__14196;
count__14185 = G__14197;
i__14186 = G__14198;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14199__i = 0, G__14199__a = new Array(arguments.length -  0);
while (G__14199__i < G__14199__a.length) {G__14199__a[G__14199__i] = arguments[G__14199__i + 0]; ++G__14199__i;}
  objs = new cljs.core.IndexedSeq(G__14199__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__14200){
var objs = cljs.core.seq(arglist__14200);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14201__i = 0, G__14201__a = new Array(arguments.length -  0);
while (G__14201__i < G__14201__a.length) {G__14201__a[G__14201__i] = arguments[G__14201__i + 0]; ++G__14201__i;}
  objs = new cljs.core.IndexedSeq(G__14201__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__14202){
var objs = cljs.core.seq(arglist__14202);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14203__i = 0, G__14203__a = new Array(arguments.length -  0);
while (G__14203__i < G__14203__a.length) {G__14203__a[G__14203__i] = arguments[G__14203__i + 0]; ++G__14203__i;}
  objs = new cljs.core.IndexedSeq(G__14203__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__14204){
var objs = cljs.core.seq(arglist__14204);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14205__i = 0, G__14205__a = new Array(arguments.length -  0);
while (G__14205__i < G__14205__a.length) {G__14205__a[G__14205__i] = arguments[G__14205__i + 0]; ++G__14205__i;}
  objs = new cljs.core.IndexedSeq(G__14205__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__14206){
var objs = cljs.core.seq(arglist__14206);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14207__i = 0, G__14207__a = new Array(arguments.length -  0);
while (G__14207__i < G__14207__a.length) {G__14207__a[G__14207__i] = arguments[G__14207__i + 0]; ++G__14207__i;}
  objs = new cljs.core.IndexedSeq(G__14207__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__14208){
var objs = cljs.core.seq(arglist__14208);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14209__i = 0, G__14209__a = new Array(arguments.length -  0);
while (G__14209__i < G__14209__a.length) {G__14209__a[G__14209__i] = arguments[G__14209__i + 0]; ++G__14209__i;}
  objs = new cljs.core.IndexedSeq(G__14209__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__14210){
var objs = cljs.core.seq(arglist__14210);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14211__i = 0, G__14211__a = new Array(arguments.length -  0);
while (G__14211__i < G__14211__a.length) {G__14211__a[G__14211__i] = arguments[G__14211__i + 0]; ++G__14211__i;}
  objs = new cljs.core.IndexedSeq(G__14211__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__14212){
var objs = cljs.core.seq(arglist__14212);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14213__i = 0, G__14213__a = new Array(arguments.length -  0);
while (G__14213__i < G__14213__a.length) {G__14213__a[G__14213__i] = arguments[G__14213__i + 0]; ++G__14213__i;}
  objs = new cljs.core.IndexedSeq(G__14213__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__14214){
var objs = cljs.core.seq(arglist__14214);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__14221_14227 = cljs.core.key(e);
var G__14222_14228 = w;
var G__14223_14229 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14221_14227,G__14222_14228,G__14223_14229) : print_one.call(null,G__14221_14227,G__14222_14228,G__14223_14229));

cljs.core._write(w," ");

var G__14224 = cljs.core.val(e);
var G__14225 = w;
var G__14226 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14224,G__14225,G__14226) : print_one.call(null,G__14224,G__14225,G__14226));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__14230__i = 0, G__14230__a = new Array(arguments.length -  2);
while (G__14230__i < G__14230__a.length) {G__14230__a[G__14230__i] = arguments[G__14230__i + 2]; ++G__14230__i;}
  args = new cljs.core.IndexedSeq(G__14230__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__14231){
var iref = cljs.core.first(arglist__14231);
arglist__14231 = cljs.core.next(arglist__14231);
var f = cljs.core.first(arglist__14231);
var args = cljs.core.rest(arglist__14231);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__14234 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14234) : cljs.core.atom.call(null,G__14234));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__14236 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14236) : cljs.core.deref.call(null,G__14236));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__14237_SHARP_,p2__14238_SHARP_){
var ret = (function (){var G__14241 = p1__14237_SHARP_;
var G__14242 = p2__14238_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14241,G__14242) : rf.call(null,G__14241,G__14242));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__14245 = null;
var G__14245__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14245__1 = (function (result){
var G__14244 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14244) : rf.call(null,G__14244));
});
var G__14245__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__14245 = function(result,input){
switch(arguments.length){
case 0:
return G__14245__0.call(this);
case 1:
return G__14245__1.call(this,result);
case 2:
return G__14245__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14245.cljs$core$IFn$_invoke$arity$0 = G__14245__0;
G__14245.cljs$core$IFn$_invoke$arity$1 = G__14245__1;
G__14245.cljs$core$IFn$_invoke$arity$2 = G__14245__2;
return G__14245;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__14254 = null;
var G__14254__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14254__1 = (function (result){
var G__14250 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14250) : rf.call(null,G__14250));
});
var G__14254__2 = (function (result,input){
var prior = (function (){var G__14251 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14251) : cljs.core.deref.call(null,G__14251));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__14252 = result;
var G__14253 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14252,G__14253) : rf.call(null,G__14252,G__14253));
}
});
G__14254 = function(result,input){
switch(arguments.length){
case 0:
return G__14254__0.call(this);
case 1:
return G__14254__1.call(this,result);
case 2:
return G__14254__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14254.cljs$core$IFn$_invoke$arity$0 = G__14254__0;
G__14254.cljs$core$IFn$_invoke$arity$1 = G__14254__1;
G__14254.cljs$core$IFn$_invoke$arity$2 = G__14254__2;
return G__14254;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__8635__auto__ = this;
return cljs.core.es6_iterator(this__8635__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14256_SHARP_,p2__14255_SHARP_){
var G__14258 = p2__14255_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__14258) : proc.call(null,G__14258));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj14260 = {};
return obj14260;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__7645__auto__ = x;
if(and__7645__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__7645__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__8301__auto__ = (((x == null))?null:x);
return (function (){var or__7657__auto__ = (cljs.core._clj__GT_js[(function (){var G__14264 = x__8301__auto__;
return goog.typeOf(G__14264);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__7645__auto__ = x;
if(and__7645__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__7645__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__8301__auto__ = (((x == null))?null:x);
return (function (){var or__7657__auto__ = (cljs.core._key__GT_js[(function (){var G__14268 = x__8301__auto__;
return goog.typeOf(G__14268);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__14271 = k;
if(G__14271){
var bit__8338__auto__ = null;
if(cljs.core.truth_((function (){var or__7657__auto__ = bit__8338__auto__;
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return G__14271.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__14271.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14271);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14271);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__14272 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__14272) : cljs.core.clj__GT_js.call(null,G__14272));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__14288 = x;
if(G__14288){
var bit__8338__auto__ = null;
if(cljs.core.truth_((function (){var or__7657__auto__ = bit__8338__auto__;
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return G__14288.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__14288.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14288);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14288);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj14290 = {};
return obj14290;
})();
var seq__14291_14301 = cljs.core.seq(x);
var chunk__14292_14302 = null;
var count__14293_14303 = (0);
var i__14294_14304 = (0);
while(true){
if((i__14294_14304 < count__14293_14303)){
var vec__14295_14305 = chunk__14292_14302.cljs$core$IIndexed$_nth$arity$2(null,i__14294_14304);
var k_14306 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14295_14305,(0),null);
var v_14307 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14295_14305,(1),null);
(m[cljs.core.key__GT_js(k_14306)] = clj__GT_js(v_14307));

var G__14308 = seq__14291_14301;
var G__14309 = chunk__14292_14302;
var G__14310 = count__14293_14303;
var G__14311 = (i__14294_14304 + (1));
seq__14291_14301 = G__14308;
chunk__14292_14302 = G__14309;
count__14293_14303 = G__14310;
i__14294_14304 = G__14311;
continue;
} else {
var temp__4126__auto___14312 = cljs.core.seq(seq__14291_14301);
if(temp__4126__auto___14312){
var seq__14291_14313__$1 = temp__4126__auto___14312;
if(cljs.core.chunked_seq_QMARK_(seq__14291_14313__$1)){
var c__8444__auto___14314 = cljs.core.chunk_first(seq__14291_14313__$1);
var G__14315 = cljs.core.chunk_rest(seq__14291_14313__$1);
var G__14316 = c__8444__auto___14314;
var G__14317 = cljs.core.count(c__8444__auto___14314);
var G__14318 = (0);
seq__14291_14301 = G__14315;
chunk__14292_14302 = G__14316;
count__14293_14303 = G__14317;
i__14294_14304 = G__14318;
continue;
} else {
var vec__14296_14319 = cljs.core.first(seq__14291_14313__$1);
var k_14320 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14296_14319,(0),null);
var v_14321 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14296_14319,(1),null);
(m[cljs.core.key__GT_js(k_14320)] = clj__GT_js(v_14321));

var G__14322 = cljs.core.next(seq__14291_14313__$1);
var G__14323 = null;
var G__14324 = (0);
var G__14325 = (0);
seq__14291_14301 = G__14322;
chunk__14292_14302 = G__14323;
count__14293_14303 = G__14324;
i__14294_14304 = G__14325;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__14297_14326 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__14298_14327 = null;
var count__14299_14328 = (0);
var i__14300_14329 = (0);
while(true){
if((i__14300_14329 < count__14299_14328)){
var x_14330__$1 = chunk__14298_14327.cljs$core$IIndexed$_nth$arity$2(null,i__14300_14329);
arr.push(x_14330__$1);

var G__14331 = seq__14297_14326;
var G__14332 = chunk__14298_14327;
var G__14333 = count__14299_14328;
var G__14334 = (i__14300_14329 + (1));
seq__14297_14326 = G__14331;
chunk__14298_14327 = G__14332;
count__14299_14328 = G__14333;
i__14300_14329 = G__14334;
continue;
} else {
var temp__4126__auto___14335 = cljs.core.seq(seq__14297_14326);
if(temp__4126__auto___14335){
var seq__14297_14336__$1 = temp__4126__auto___14335;
if(cljs.core.chunked_seq_QMARK_(seq__14297_14336__$1)){
var c__8444__auto___14337 = cljs.core.chunk_first(seq__14297_14336__$1);
var G__14338 = cljs.core.chunk_rest(seq__14297_14336__$1);
var G__14339 = c__8444__auto___14337;
var G__14340 = cljs.core.count(c__8444__auto___14337);
var G__14341 = (0);
seq__14297_14326 = G__14338;
chunk__14298_14327 = G__14339;
count__14299_14328 = G__14340;
i__14300_14329 = G__14341;
continue;
} else {
var x_14342__$1 = cljs.core.first(seq__14297_14336__$1);
arr.push(x_14342__$1);

var G__14343 = cljs.core.next(seq__14297_14336__$1);
var G__14344 = null;
var G__14345 = (0);
var G__14346 = (0);
seq__14297_14326 = G__14343;
chunk__14298_14327 = G__14344;
count__14299_14328 = G__14345;
i__14300_14329 = G__14346;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj14348 = {};
return obj14348;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__7645__auto__ = x;
if(and__7645__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__7645__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__8301__auto__ = (((x == null))?null:x);
return (function (){var or__7657__auto__ = (cljs.core._js__GT_clj[(function (){var G__14352 = x__8301__auto__;
return goog.typeOf(G__14352);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__14409__delegate = function (x,opts){
var map__14382 = opts;
var map__14382__$1 = ((cljs.core.seq_QMARK_(map__14382))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__14382):map__14382);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14382__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__14382,map__14382__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__14398 = x__$1;
if(G__14398){
var bit__8338__auto__ = null;
if(cljs.core.truth_((function (){var or__7657__auto__ = bit__8338__auto__;
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return G__14398.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__14398.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__14398);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__14398);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__8413__auto__ = ((function (map__14382,map__14382__$1,keywordize_keys,keyfn){
return (function iter__14399(s__14400){
return (new cljs.core.LazySeq(null,((function (map__14382,map__14382__$1,keywordize_keys,keyfn){
return (function (){
var s__14400__$1 = s__14400;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__14400__$1);
if(temp__4126__auto__){
var s__14400__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__14400__$2)){
var c__8411__auto__ = cljs.core.chunk_first(s__14400__$2);
var size__8412__auto__ = cljs.core.count(c__8411__auto__);
var b__14402 = cljs.core.chunk_buffer(size__8412__auto__);
if((function (){var i__14401 = (0);
while(true){
if((i__14401 < size__8412__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__8411__auto__,i__14401);
cljs.core.chunk_append(b__14402,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__14407 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14407) : keyfn.call(null,G__14407));
})(),thisfn((x__$1[k]))], null));

var G__14410 = (i__14401 + (1));
i__14401 = G__14410;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__14402),iter__14399(cljs.core.chunk_rest(s__14400__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__14402),null);
}
} else {
var k = cljs.core.first(s__14400__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__14408 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14408) : keyfn.call(null,G__14408));
})(),thisfn((x__$1[k]))], null),iter__14399(cljs.core.rest(s__14400__$2)));
}
} else {
return null;
}
break;
}
});})(map__14382,map__14382__$1,keywordize_keys,keyfn))
,null,null));
});})(map__14382,map__14382__$1,keywordize_keys,keyfn))
;
return iter__8413__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__14382,map__14382__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__14409 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__14411__i = 0, G__14411__a = new Array(arguments.length -  1);
while (G__14411__i < G__14411__a.length) {G__14411__a[G__14411__i] = arguments[G__14411__i + 1]; ++G__14411__i;}
  opts = new cljs.core.IndexedSeq(G__14411__a,0);
} 
return G__14409__delegate.call(this,x,opts);};
G__14409.cljs$lang$maxFixedArity = 1;
G__14409.cljs$lang$applyTo = (function (arglist__14412){
var x = cljs.core.first(arglist__14412);
var opts = cljs.core.rest(arglist__14412);
return G__14409__delegate(x,opts);
});
G__14409.cljs$core$IFn$_invoke$arity$variadic = G__14409__delegate;
return G__14409;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__14413 = null;
if (arguments.length > 1) {
var G__14414__i = 0, G__14414__a = new Array(arguments.length -  1);
while (G__14414__i < G__14414__a.length) {G__14414__a[G__14414__i] = arguments[G__14414__i + 1]; ++G__14414__i;}
G__14413 = new cljs.core.IndexedSeq(G__14414__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14413);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__14417 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14417) : cljs.core.atom.call(null,G__14417));
})();
return ((function (mem){
return (function() { 
var G__14419__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__14418 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14418) : cljs.core.deref.call(null,G__14418));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__14419 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14420__i = 0, G__14420__a = new Array(arguments.length -  0);
while (G__14420__i < G__14420__a.length) {G__14420__a[G__14420__i] = arguments[G__14420__i + 0]; ++G__14420__i;}
  args = new cljs.core.IndexedSeq(G__14420__a,0);
} 
return G__14419__delegate.call(this,args);};
G__14419.cljs$lang$maxFixedArity = 0;
G__14419.cljs$lang$applyTo = (function (arglist__14421){
var args = cljs.core.seq(arglist__14421);
return G__14419__delegate(args);
});
G__14419.cljs$core$IFn$_invoke$arity$variadic = G__14419__delegate;
return G__14419;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__14423 = ret;
f = G__14423;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__14424__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__14424 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__14425__i = 0, G__14425__a = new Array(arguments.length -  1);
while (G__14425__i < G__14425__a.length) {G__14425__a[G__14425__i] = arguments[G__14425__i + 1]; ++G__14425__i;}
  args = new cljs.core.IndexedSeq(G__14425__a,0);
} 
return G__14424__delegate.call(this,f,args);};
G__14424.cljs$lang$maxFixedArity = 1;
G__14424.cljs$lang$applyTo = (function (arglist__14426){
var f = cljs.core.first(arglist__14426);
var args = cljs.core.rest(arglist__14426);
return G__14424__delegate(f,args);
});
G__14424.cljs$core$IFn$_invoke$arity$variadic = G__14424__delegate;
return G__14424;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__14427 = null;
if (arguments.length > 1) {
var G__14428__i = 0, G__14428__a = new Array(arguments.length -  1);
while (G__14428__i < G__14428__a.length) {G__14428__a[G__14428__i] = arguments[G__14428__i + 1]; ++G__14428__i;}
G__14427 = new cljs.core.IndexedSeq(G__14428__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14427);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__14431 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__14431) : Math.floor.call(null,G__14431));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__14433 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14433) : f.call(null,G__14433));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__14435 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14435) : cljs.core.atom.call(null,G__14435));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__14436__i = 0, G__14436__a = new Array(arguments.length -  1);
while (G__14436__i < G__14436__a.length) {G__14436__a[G__14436__i] = arguments[G__14436__i + 1]; ++G__14436__i;}
  args = new cljs.core.IndexedSeq(G__14436__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__14437){
var f = cljs.core.first(arglist__14437);
var args = cljs.core.rest(arglist__14437);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__14502 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14502) : cljs.core.deref.call(null,G__14502));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__7657__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
var and__7645__auto__ = cljs.core.vector_QMARK_(parent);
if(and__7645__auto__){
var and__7645__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__7645__auto____$1){
var and__7645__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__7645__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__14527 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__14525 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__14525) : child.call(null,G__14525));
})(),(function (){var G__14526 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__14526) : parent.call(null,G__14526));
})());
var G__14528 = (i + (1));
ret = G__14527;
i = G__14528;
continue;
}
break;
}
} else {
return and__7645__auto____$2;
}
} else {
return and__7645__auto____$1;
}
} else {
return and__7645__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__14532 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14532) : cljs.core.deref.call(null,G__14532));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__14536 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14536) : cljs.core.deref.call(null,G__14536));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__14540 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14540) : cljs.core.deref.call(null,G__14540));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__14549 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__14549) : targets.call(null,G__14549));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__14550 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__14550) : sources.call(null,G__14550));
})()));
});})(tp,td,ta))
;
var or__7657__auto__ = ((cljs.core.contains_QMARK_((function (){var G__14554 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__14554) : tp.call(null,G__14554));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__14555 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__14555) : ta.call(null,G__14555));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__14556 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__14556) : ta.call(null,G__14556));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__14563 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__14563) : parentMap.call(null,G__14563));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__14564 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__14564) : parentMap.call(null,G__14564));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__14557_SHARP_){
return cljs.core.cons(cljs.core.first(p1__14557_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__14557_SHARP_),cljs.core.second(p1__14557_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__14565 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__14565) : parentMap.call(null,G__14565));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__14558_SHARP_,p2__14559_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__14558_SHARP_,p2__14559_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__14568 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14568) : cljs.core.deref.call(null,G__14568));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__14569 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14569) : cljs.core.deref.call(null,G__14569));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__14585 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14585) : cljs.core.deref.call(null,G__14585));
})().call(null,x);
var or__7657__auto__ = (cljs.core.truth_((function (){var and__7645__auto__ = xprefs;
if(cljs.core.truth_(and__7645__auto__)){
var G__14587 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__14587) : xprefs.call(null,G__14587));
} else {
return and__7645__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__14588 = cljs.core.rest(ps);
ps = G__14588;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__7657__auto____$1)){
return or__7657__auto____$1;
} else {
var or__7657__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__14589 = cljs.core.rest(ps);
ps = G__14589;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__7657__auto____$2)){
return or__7657__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__7657__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__7657__auto__)){
return or__7657__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__14603){
var vec__14604 = p__14603;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14604,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14604,(1),null);
var e = vec__14604;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__14605 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14605) : cljs.core.deref.call(null,G__14605));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__7657__auto__ = (be == null);
if(or__7657__auto__){
return or__7657__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__14606 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14606) : cljs.core.deref.call(null,G__14606));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__14607 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14607) : cljs.core.deref.call(null,G__14607));
})(),(function (){var G__14608 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14608) : cljs.core.deref.call(null,G__14608));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj14610 = {};
return obj14610;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__7645__auto__ = mf;
if(and__7645__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__7645__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__8301__auto__ = (((mf == null))?null:mf);
return (function (){var or__7657__auto__ = (cljs.core._reset[(function (){var G__14614 = x__8301__auto__;
return goog.typeOf(G__14614);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._reset["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__7645__auto__ = mf;
if(and__7645__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__7645__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__8301__auto__ = (((mf == null))?null:mf);
return (function (){var or__7657__auto__ = (cljs.core._add_method[(function (){var G__14618 = x__8301__auto__;
return goog.typeOf(G__14618);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._add_method["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__7645__auto__ = mf;
if(and__7645__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__7645__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__8301__auto__ = (((mf == null))?null:mf);
return (function (){var or__7657__auto__ = (cljs.core._remove_method[(function (){var G__14622 = x__8301__auto__;
return goog.typeOf(G__14622);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._remove_method["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__7645__auto__ = mf;
if(and__7645__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__7645__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__8301__auto__ = (((mf == null))?null:mf);
return (function (){var or__7657__auto__ = (cljs.core._prefer_method[(function (){var G__14626 = x__8301__auto__;
return goog.typeOf(G__14626);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__7645__auto__ = mf;
if(and__7645__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__7645__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__8301__auto__ = (((mf == null))?null:mf);
return (function (){var or__7657__auto__ = (cljs.core._get_method[(function (){var G__14630 = x__8301__auto__;
return goog.typeOf(G__14630);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._get_method["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__7645__auto__ = mf;
if(and__7645__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__7645__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__8301__auto__ = (((mf == null))?null:mf);
return (function (){var or__7657__auto__ = (cljs.core._methods[(function (){var G__14634 = x__8301__auto__;
return goog.typeOf(G__14634);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._methods["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__7645__auto__ = mf;
if(and__7645__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__7645__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__8301__auto__ = (((mf == null))?null:mf);
return (function (){var or__7657__auto__ = (cljs.core._prefers[(function (){var G__14638 = x__8301__auto__;
return goog.typeOf(G__14638);
})()]);
if(or__7657__auto__){
return or__7657__auto__;
} else {
var or__7657__auto____$1 = (cljs.core._prefers["_"]);
if(or__7657__auto____$1){
return or__7657__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__14640 = this$__$1;
return goog.getUid(G__14640);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__14641 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14641) : cljs.core.deref.call(null,G__14641));
})(),(function (){var G__14642 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14642) : cljs.core.deref.call(null,G__14642));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__14643 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14643) : cljs.core.deref.call(null,G__14643));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__14644 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14644) : cljs.core.deref.call(null,G__14644));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__14645 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14645) : cljs.core.deref.call(null,G__14645));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__14646 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14646) : cljs.core.deref.call(null,G__14646));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__15487 = null;
var G__15487__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__15487__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14647 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__14647) : self__.dispatch_fn.call(null,G__14647));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14648 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__14648) : target_fn.call(null,G__14648));
});
var G__15487__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14649 = a;
var G__14650 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__14649,G__14650) : self__.dispatch_fn.call(null,G__14649,G__14650));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14651 = a;
var G__14652 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__14651,G__14652) : target_fn.call(null,G__14651,G__14652));
});
var G__15487__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14653 = a;
var G__14654 = b;
var G__14655 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__14653,G__14654,G__14655) : self__.dispatch_fn.call(null,G__14653,G__14654,G__14655));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14656 = a;
var G__14657 = b;
var G__14658 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__14656,G__14657,G__14658) : target_fn.call(null,G__14656,G__14657,G__14658));
});
var G__15487__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14659 = a;
var G__14660 = b;
var G__14661 = c;
var G__14662 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__14659,G__14660,G__14661,G__14662) : self__.dispatch_fn.call(null,G__14659,G__14660,G__14661,G__14662));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14663 = a;
var G__14664 = b;
var G__14665 = c;
var G__14666 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__14663,G__14664,G__14665,G__14666) : target_fn.call(null,G__14663,G__14664,G__14665,G__14666));
});
var G__15487__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14667 = a;
var G__14668 = b;
var G__14669 = c;
var G__14670 = d;
var G__14671 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__14667,G__14668,G__14669,G__14670,G__14671) : self__.dispatch_fn.call(null,G__14667,G__14668,G__14669,G__14670,G__14671));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14672 = a;
var G__14673 = b;
var G__14674 = c;
var G__14675 = d;
var G__14676 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__14672,G__14673,G__14674,G__14675,G__14676) : target_fn.call(null,G__14672,G__14673,G__14674,G__14675,G__14676));
});
var G__15487__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14677 = a;
var G__14678 = b;
var G__14679 = c;
var G__14680 = d;
var G__14681 = e;
var G__14682 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__14677,G__14678,G__14679,G__14680,G__14681,G__14682) : self__.dispatch_fn.call(null,G__14677,G__14678,G__14679,G__14680,G__14681,G__14682));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14683 = a;
var G__14684 = b;
var G__14685 = c;
var G__14686 = d;
var G__14687 = e;
var G__14688 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__14683,G__14684,G__14685,G__14686,G__14687,G__14688) : target_fn.call(null,G__14683,G__14684,G__14685,G__14686,G__14687,G__14688));
});
var G__15487__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14689 = a;
var G__14690 = b;
var G__14691 = c;
var G__14692 = d;
var G__14693 = e;
var G__14694 = f;
var G__14695 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__14689,G__14690,G__14691,G__14692,G__14693,G__14694,G__14695) : self__.dispatch_fn.call(null,G__14689,G__14690,G__14691,G__14692,G__14693,G__14694,G__14695));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14696 = a;
var G__14697 = b;
var G__14698 = c;
var G__14699 = d;
var G__14700 = e;
var G__14701 = f;
var G__14702 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__14696,G__14697,G__14698,G__14699,G__14700,G__14701,G__14702) : target_fn.call(null,G__14696,G__14697,G__14698,G__14699,G__14700,G__14701,G__14702));
});
var G__15487__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14703 = a;
var G__14704 = b;
var G__14705 = c;
var G__14706 = d;
var G__14707 = e;
var G__14708 = f;
var G__14709 = g;
var G__14710 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__14703,G__14704,G__14705,G__14706,G__14707,G__14708,G__14709,G__14710) : self__.dispatch_fn.call(null,G__14703,G__14704,G__14705,G__14706,G__14707,G__14708,G__14709,G__14710));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14711 = a;
var G__14712 = b;
var G__14713 = c;
var G__14714 = d;
var G__14715 = e;
var G__14716 = f;
var G__14717 = g;
var G__14718 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__14711,G__14712,G__14713,G__14714,G__14715,G__14716,G__14717,G__14718) : target_fn.call(null,G__14711,G__14712,G__14713,G__14714,G__14715,G__14716,G__14717,G__14718));
});
var G__15487__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14719 = a;
var G__14720 = b;
var G__14721 = c;
var G__14722 = d;
var G__14723 = e;
var G__14724 = f;
var G__14725 = g;
var G__14726 = h;
var G__14727 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__14719,G__14720,G__14721,G__14722,G__14723,G__14724,G__14725,G__14726,G__14727) : self__.dispatch_fn.call(null,G__14719,G__14720,G__14721,G__14722,G__14723,G__14724,G__14725,G__14726,G__14727));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14728 = a;
var G__14729 = b;
var G__14730 = c;
var G__14731 = d;
var G__14732 = e;
var G__14733 = f;
var G__14734 = g;
var G__14735 = h;
var G__14736 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__14728,G__14729,G__14730,G__14731,G__14732,G__14733,G__14734,G__14735,G__14736) : target_fn.call(null,G__14728,G__14729,G__14730,G__14731,G__14732,G__14733,G__14734,G__14735,G__14736));
});
var G__15487__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14737 = a;
var G__14738 = b;
var G__14739 = c;
var G__14740 = d;
var G__14741 = e;
var G__14742 = f;
var G__14743 = g;
var G__14744 = h;
var G__14745 = i;
var G__14746 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__14737,G__14738,G__14739,G__14740,G__14741,G__14742,G__14743,G__14744,G__14745,G__14746) : self__.dispatch_fn.call(null,G__14737,G__14738,G__14739,G__14740,G__14741,G__14742,G__14743,G__14744,G__14745,G__14746));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14747 = a;
var G__14748 = b;
var G__14749 = c;
var G__14750 = d;
var G__14751 = e;
var G__14752 = f;
var G__14753 = g;
var G__14754 = h;
var G__14755 = i;
var G__14756 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__14747,G__14748,G__14749,G__14750,G__14751,G__14752,G__14753,G__14754,G__14755,G__14756) : target_fn.call(null,G__14747,G__14748,G__14749,G__14750,G__14751,G__14752,G__14753,G__14754,G__14755,G__14756));
});
var G__15487__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14757 = a;
var G__14758 = b;
var G__14759 = c;
var G__14760 = d;
var G__14761 = e;
var G__14762 = f;
var G__14763 = g;
var G__14764 = h;
var G__14765 = i;
var G__14766 = j;
var G__14767 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__14757,G__14758,G__14759,G__14760,G__14761,G__14762,G__14763,G__14764,G__14765,G__14766,G__14767) : self__.dispatch_fn.call(null,G__14757,G__14758,G__14759,G__14760,G__14761,G__14762,G__14763,G__14764,G__14765,G__14766,G__14767));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14768 = a;
var G__14769 = b;
var G__14770 = c;
var G__14771 = d;
var G__14772 = e;
var G__14773 = f;
var G__14774 = g;
var G__14775 = h;
var G__14776 = i;
var G__14777 = j;
var G__14778 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__14768,G__14769,G__14770,G__14771,G__14772,G__14773,G__14774,G__14775,G__14776,G__14777,G__14778) : target_fn.call(null,G__14768,G__14769,G__14770,G__14771,G__14772,G__14773,G__14774,G__14775,G__14776,G__14777,G__14778));
});
var G__15487__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14779 = a;
var G__14780 = b;
var G__14781 = c;
var G__14782 = d;
var G__14783 = e;
var G__14784 = f;
var G__14785 = g;
var G__14786 = h;
var G__14787 = i;
var G__14788 = j;
var G__14789 = k;
var G__14790 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__14779,G__14780,G__14781,G__14782,G__14783,G__14784,G__14785,G__14786,G__14787,G__14788,G__14789,G__14790) : self__.dispatch_fn.call(null,G__14779,G__14780,G__14781,G__14782,G__14783,G__14784,G__14785,G__14786,G__14787,G__14788,G__14789,G__14790));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14791 = a;
var G__14792 = b;
var G__14793 = c;
var G__14794 = d;
var G__14795 = e;
var G__14796 = f;
var G__14797 = g;
var G__14798 = h;
var G__14799 = i;
var G__14800 = j;
var G__14801 = k;
var G__14802 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__14791,G__14792,G__14793,G__14794,G__14795,G__14796,G__14797,G__14798,G__14799,G__14800,G__14801,G__14802) : target_fn.call(null,G__14791,G__14792,G__14793,G__14794,G__14795,G__14796,G__14797,G__14798,G__14799,G__14800,G__14801,G__14802));
});
var G__15487__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14803 = a;
var G__14804 = b;
var G__14805 = c;
var G__14806 = d;
var G__14807 = e;
var G__14808 = f;
var G__14809 = g;
var G__14810 = h;
var G__14811 = i;
var G__14812 = j;
var G__14813 = k;
var G__14814 = l;
var G__14815 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__14803,G__14804,G__14805,G__14806,G__14807,G__14808,G__14809,G__14810,G__14811,G__14812,G__14813,G__14814,G__14815) : self__.dispatch_fn.call(null,G__14803,G__14804,G__14805,G__14806,G__14807,G__14808,G__14809,G__14810,G__14811,G__14812,G__14813,G__14814,G__14815));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14816 = a;
var G__14817 = b;
var G__14818 = c;
var G__14819 = d;
var G__14820 = e;
var G__14821 = f;
var G__14822 = g;
var G__14823 = h;
var G__14824 = i;
var G__14825 = j;
var G__14826 = k;
var G__14827 = l;
var G__14828 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__14816,G__14817,G__14818,G__14819,G__14820,G__14821,G__14822,G__14823,G__14824,G__14825,G__14826,G__14827,G__14828) : target_fn.call(null,G__14816,G__14817,G__14818,G__14819,G__14820,G__14821,G__14822,G__14823,G__14824,G__14825,G__14826,G__14827,G__14828));
});
var G__15487__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14829 = a;
var G__14830 = b;
var G__14831 = c;
var G__14832 = d;
var G__14833 = e;
var G__14834 = f;
var G__14835 = g;
var G__14836 = h;
var G__14837 = i;
var G__14838 = j;
var G__14839 = k;
var G__14840 = l;
var G__14841 = m;
var G__14842 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__14829,G__14830,G__14831,G__14832,G__14833,G__14834,G__14835,G__14836,G__14837,G__14838,G__14839,G__14840,G__14841,G__14842) : self__.dispatch_fn.call(null,G__14829,G__14830,G__14831,G__14832,G__14833,G__14834,G__14835,G__14836,G__14837,G__14838,G__14839,G__14840,G__14841,G__14842));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14843 = a;
var G__14844 = b;
var G__14845 = c;
var G__14846 = d;
var G__14847 = e;
var G__14848 = f;
var G__14849 = g;
var G__14850 = h;
var G__14851 = i;
var G__14852 = j;
var G__14853 = k;
var G__14854 = l;
var G__14855 = m;
var G__14856 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__14843,G__14844,G__14845,G__14846,G__14847,G__14848,G__14849,G__14850,G__14851,G__14852,G__14853,G__14854,G__14855,G__14856) : target_fn.call(null,G__14843,G__14844,G__14845,G__14846,G__14847,G__14848,G__14849,G__14850,G__14851,G__14852,G__14853,G__14854,G__14855,G__14856));
});
var G__15487__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14857 = a;
var G__14858 = b;
var G__14859 = c;
var G__14860 = d;
var G__14861 = e;
var G__14862 = f;
var G__14863 = g;
var G__14864 = h;
var G__14865 = i;
var G__14866 = j;
var G__14867 = k;
var G__14868 = l;
var G__14869 = m;
var G__14870 = n;
var G__14871 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__14857,G__14858,G__14859,G__14860,G__14861,G__14862,G__14863,G__14864,G__14865,G__14866,G__14867,G__14868,G__14869,G__14870,G__14871) : self__.dispatch_fn.call(null,G__14857,G__14858,G__14859,G__14860,G__14861,G__14862,G__14863,G__14864,G__14865,G__14866,G__14867,G__14868,G__14869,G__14870,G__14871));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14872 = a;
var G__14873 = b;
var G__14874 = c;
var G__14875 = d;
var G__14876 = e;
var G__14877 = f;
var G__14878 = g;
var G__14879 = h;
var G__14880 = i;
var G__14881 = j;
var G__14882 = k;
var G__14883 = l;
var G__14884 = m;
var G__14885 = n;
var G__14886 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__14872,G__14873,G__14874,G__14875,G__14876,G__14877,G__14878,G__14879,G__14880,G__14881,G__14882,G__14883,G__14884,G__14885,G__14886) : target_fn.call(null,G__14872,G__14873,G__14874,G__14875,G__14876,G__14877,G__14878,G__14879,G__14880,G__14881,G__14882,G__14883,G__14884,G__14885,G__14886));
});
var G__15487__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14887 = a;
var G__14888 = b;
var G__14889 = c;
var G__14890 = d;
var G__14891 = e;
var G__14892 = f;
var G__14893 = g;
var G__14894 = h;
var G__14895 = i;
var G__14896 = j;
var G__14897 = k;
var G__14898 = l;
var G__14899 = m;
var G__14900 = n;
var G__14901 = o;
var G__14902 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__14887,G__14888,G__14889,G__14890,G__14891,G__14892,G__14893,G__14894,G__14895,G__14896,G__14897,G__14898,G__14899,G__14900,G__14901,G__14902) : self__.dispatch_fn.call(null,G__14887,G__14888,G__14889,G__14890,G__14891,G__14892,G__14893,G__14894,G__14895,G__14896,G__14897,G__14898,G__14899,G__14900,G__14901,G__14902));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14903 = a;
var G__14904 = b;
var G__14905 = c;
var G__14906 = d;
var G__14907 = e;
var G__14908 = f;
var G__14909 = g;
var G__14910 = h;
var G__14911 = i;
var G__14912 = j;
var G__14913 = k;
var G__14914 = l;
var G__14915 = m;
var G__14916 = n;
var G__14917 = o;
var G__14918 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__14903,G__14904,G__14905,G__14906,G__14907,G__14908,G__14909,G__14910,G__14911,G__14912,G__14913,G__14914,G__14915,G__14916,G__14917,G__14918) : target_fn.call(null,G__14903,G__14904,G__14905,G__14906,G__14907,G__14908,G__14909,G__14910,G__14911,G__14912,G__14913,G__14914,G__14915,G__14916,G__14917,G__14918));
});
var G__15487__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14919 = a;
var G__14920 = b;
var G__14921 = c;
var G__14922 = d;
var G__14923 = e;
var G__14924 = f;
var G__14925 = g;
var G__14926 = h;
var G__14927 = i;
var G__14928 = j;
var G__14929 = k;
var G__14930 = l;
var G__14931 = m;
var G__14932 = n;
var G__14933 = o;
var G__14934 = p;
var G__14935 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__14919,G__14920,G__14921,G__14922,G__14923,G__14924,G__14925,G__14926,G__14927,G__14928,G__14929,G__14930,G__14931,G__14932,G__14933,G__14934,G__14935) : self__.dispatch_fn.call(null,G__14919,G__14920,G__14921,G__14922,G__14923,G__14924,G__14925,G__14926,G__14927,G__14928,G__14929,G__14930,G__14931,G__14932,G__14933,G__14934,G__14935));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14936 = a;
var G__14937 = b;
var G__14938 = c;
var G__14939 = d;
var G__14940 = e;
var G__14941 = f;
var G__14942 = g;
var G__14943 = h;
var G__14944 = i;
var G__14945 = j;
var G__14946 = k;
var G__14947 = l;
var G__14948 = m;
var G__14949 = n;
var G__14950 = o;
var G__14951 = p;
var G__14952 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__14936,G__14937,G__14938,G__14939,G__14940,G__14941,G__14942,G__14943,G__14944,G__14945,G__14946,G__14947,G__14948,G__14949,G__14950,G__14951,G__14952) : target_fn.call(null,G__14936,G__14937,G__14938,G__14939,G__14940,G__14941,G__14942,G__14943,G__14944,G__14945,G__14946,G__14947,G__14948,G__14949,G__14950,G__14951,G__14952));
});
var G__15487__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14953 = a;
var G__14954 = b;
var G__14955 = c;
var G__14956 = d;
var G__14957 = e;
var G__14958 = f;
var G__14959 = g;
var G__14960 = h;
var G__14961 = i;
var G__14962 = j;
var G__14963 = k;
var G__14964 = l;
var G__14965 = m;
var G__14966 = n;
var G__14967 = o;
var G__14968 = p;
var G__14969 = q;
var G__14970 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__14953,G__14954,G__14955,G__14956,G__14957,G__14958,G__14959,G__14960,G__14961,G__14962,G__14963,G__14964,G__14965,G__14966,G__14967,G__14968,G__14969,G__14970) : self__.dispatch_fn.call(null,G__14953,G__14954,G__14955,G__14956,G__14957,G__14958,G__14959,G__14960,G__14961,G__14962,G__14963,G__14964,G__14965,G__14966,G__14967,G__14968,G__14969,G__14970));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__14971 = a;
var G__14972 = b;
var G__14973 = c;
var G__14974 = d;
var G__14975 = e;
var G__14976 = f;
var G__14977 = g;
var G__14978 = h;
var G__14979 = i;
var G__14980 = j;
var G__14981 = k;
var G__14982 = l;
var G__14983 = m;
var G__14984 = n;
var G__14985 = o;
var G__14986 = p;
var G__14987 = q;
var G__14988 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__14971,G__14972,G__14973,G__14974,G__14975,G__14976,G__14977,G__14978,G__14979,G__14980,G__14981,G__14982,G__14983,G__14984,G__14985,G__14986,G__14987,G__14988) : target_fn.call(null,G__14971,G__14972,G__14973,G__14974,G__14975,G__14976,G__14977,G__14978,G__14979,G__14980,G__14981,G__14982,G__14983,G__14984,G__14985,G__14986,G__14987,G__14988));
});
var G__15487__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__14989 = a;
var G__14990 = b;
var G__14991 = c;
var G__14992 = d;
var G__14993 = e;
var G__14994 = f;
var G__14995 = g;
var G__14996 = h;
var G__14997 = i;
var G__14998 = j;
var G__14999 = k;
var G__15000 = l;
var G__15001 = m;
var G__15002 = n;
var G__15003 = o;
var G__15004 = p;
var G__15005 = q;
var G__15006 = r;
var G__15007 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__14989,G__14990,G__14991,G__14992,G__14993,G__14994,G__14995,G__14996,G__14997,G__14998,G__14999,G__15000,G__15001,G__15002,G__15003,G__15004,G__15005,G__15006,G__15007) : self__.dispatch_fn.call(null,G__14989,G__14990,G__14991,G__14992,G__14993,G__14994,G__14995,G__14996,G__14997,G__14998,G__14999,G__15000,G__15001,G__15002,G__15003,G__15004,G__15005,G__15006,G__15007));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15008 = a;
var G__15009 = b;
var G__15010 = c;
var G__15011 = d;
var G__15012 = e;
var G__15013 = f;
var G__15014 = g;
var G__15015 = h;
var G__15016 = i;
var G__15017 = j;
var G__15018 = k;
var G__15019 = l;
var G__15020 = m;
var G__15021 = n;
var G__15022 = o;
var G__15023 = p;
var G__15024 = q;
var G__15025 = r;
var G__15026 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15008,G__15009,G__15010,G__15011,G__15012,G__15013,G__15014,G__15015,G__15016,G__15017,G__15018,G__15019,G__15020,G__15021,G__15022,G__15023,G__15024,G__15025,G__15026) : target_fn.call(null,G__15008,G__15009,G__15010,G__15011,G__15012,G__15013,G__15014,G__15015,G__15016,G__15017,G__15018,G__15019,G__15020,G__15021,G__15022,G__15023,G__15024,G__15025,G__15026));
});
var G__15487__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15027 = a;
var G__15028 = b;
var G__15029 = c;
var G__15030 = d;
var G__15031 = e;
var G__15032 = f;
var G__15033 = g;
var G__15034 = h;
var G__15035 = i;
var G__15036 = j;
var G__15037 = k;
var G__15038 = l;
var G__15039 = m;
var G__15040 = n;
var G__15041 = o;
var G__15042 = p;
var G__15043 = q;
var G__15044 = r;
var G__15045 = s;
var G__15046 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15027,G__15028,G__15029,G__15030,G__15031,G__15032,G__15033,G__15034,G__15035,G__15036,G__15037,G__15038,G__15039,G__15040,G__15041,G__15042,G__15043,G__15044,G__15045,G__15046) : self__.dispatch_fn.call(null,G__15027,G__15028,G__15029,G__15030,G__15031,G__15032,G__15033,G__15034,G__15035,G__15036,G__15037,G__15038,G__15039,G__15040,G__15041,G__15042,G__15043,G__15044,G__15045,G__15046));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15047 = a;
var G__15048 = b;
var G__15049 = c;
var G__15050 = d;
var G__15051 = e;
var G__15052 = f;
var G__15053 = g;
var G__15054 = h;
var G__15055 = i;
var G__15056 = j;
var G__15057 = k;
var G__15058 = l;
var G__15059 = m;
var G__15060 = n;
var G__15061 = o;
var G__15062 = p;
var G__15063 = q;
var G__15064 = r;
var G__15065 = s;
var G__15066 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15047,G__15048,G__15049,G__15050,G__15051,G__15052,G__15053,G__15054,G__15055,G__15056,G__15057,G__15058,G__15059,G__15060,G__15061,G__15062,G__15063,G__15064,G__15065,G__15066) : target_fn.call(null,G__15047,G__15048,G__15049,G__15050,G__15051,G__15052,G__15053,G__15054,G__15055,G__15056,G__15057,G__15058,G__15059,G__15060,G__15061,G__15062,G__15063,G__15064,G__15065,G__15066));
});
var G__15487__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__15487 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__15487__1.call(this,self__);
case 2:
return G__15487__2.call(this,self__,a);
case 3:
return G__15487__3.call(this,self__,a,b);
case 4:
return G__15487__4.call(this,self__,a,b,c);
case 5:
return G__15487__5.call(this,self__,a,b,c,d);
case 6:
return G__15487__6.call(this,self__,a,b,c,d,e);
case 7:
return G__15487__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__15487__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__15487__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__15487__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__15487__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__15487__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__15487__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__15487__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__15487__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__15487__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__15487__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__15487__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__15487__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__15487__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__15487__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__15487__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15487.cljs$core$IFn$_invoke$arity$1 = G__15487__1;
G__15487.cljs$core$IFn$_invoke$arity$2 = G__15487__2;
G__15487.cljs$core$IFn$_invoke$arity$3 = G__15487__3;
G__15487.cljs$core$IFn$_invoke$arity$4 = G__15487__4;
G__15487.cljs$core$IFn$_invoke$arity$5 = G__15487__5;
G__15487.cljs$core$IFn$_invoke$arity$6 = G__15487__6;
G__15487.cljs$core$IFn$_invoke$arity$7 = G__15487__7;
G__15487.cljs$core$IFn$_invoke$arity$8 = G__15487__8;
G__15487.cljs$core$IFn$_invoke$arity$9 = G__15487__9;
G__15487.cljs$core$IFn$_invoke$arity$10 = G__15487__10;
G__15487.cljs$core$IFn$_invoke$arity$11 = G__15487__11;
G__15487.cljs$core$IFn$_invoke$arity$12 = G__15487__12;
G__15487.cljs$core$IFn$_invoke$arity$13 = G__15487__13;
G__15487.cljs$core$IFn$_invoke$arity$14 = G__15487__14;
G__15487.cljs$core$IFn$_invoke$arity$15 = G__15487__15;
G__15487.cljs$core$IFn$_invoke$arity$16 = G__15487__16;
G__15487.cljs$core$IFn$_invoke$arity$17 = G__15487__17;
G__15487.cljs$core$IFn$_invoke$arity$18 = G__15487__18;
G__15487.cljs$core$IFn$_invoke$arity$19 = G__15487__19;
G__15487.cljs$core$IFn$_invoke$arity$20 = G__15487__20;
G__15487.cljs$core$IFn$_invoke$arity$21 = G__15487__21;
G__15487.cljs$core$IFn$_invoke$arity$22 = G__15487__22;
return G__15487;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args14639){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14639)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15067 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15067) : self__.dispatch_fn.call(null,G__15067));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15068 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15068) : target_fn.call(null,G__15068));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15069 = a;
var G__15070 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15069,G__15070) : self__.dispatch_fn.call(null,G__15069,G__15070));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15071 = a;
var G__15072 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15071,G__15072) : target_fn.call(null,G__15071,G__15072));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15073 = a;
var G__15074 = b;
var G__15075 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15073,G__15074,G__15075) : self__.dispatch_fn.call(null,G__15073,G__15074,G__15075));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15076 = a;
var G__15077 = b;
var G__15078 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15076,G__15077,G__15078) : target_fn.call(null,G__15076,G__15077,G__15078));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15079 = a;
var G__15080 = b;
var G__15081 = c;
var G__15082 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15079,G__15080,G__15081,G__15082) : self__.dispatch_fn.call(null,G__15079,G__15080,G__15081,G__15082));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15083 = a;
var G__15084 = b;
var G__15085 = c;
var G__15086 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15083,G__15084,G__15085,G__15086) : target_fn.call(null,G__15083,G__15084,G__15085,G__15086));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15087 = a;
var G__15088 = b;
var G__15089 = c;
var G__15090 = d;
var G__15091 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15087,G__15088,G__15089,G__15090,G__15091) : self__.dispatch_fn.call(null,G__15087,G__15088,G__15089,G__15090,G__15091));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15092 = a;
var G__15093 = b;
var G__15094 = c;
var G__15095 = d;
var G__15096 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15092,G__15093,G__15094,G__15095,G__15096) : target_fn.call(null,G__15092,G__15093,G__15094,G__15095,G__15096));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15097 = a;
var G__15098 = b;
var G__15099 = c;
var G__15100 = d;
var G__15101 = e;
var G__15102 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15097,G__15098,G__15099,G__15100,G__15101,G__15102) : self__.dispatch_fn.call(null,G__15097,G__15098,G__15099,G__15100,G__15101,G__15102));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15103 = a;
var G__15104 = b;
var G__15105 = c;
var G__15106 = d;
var G__15107 = e;
var G__15108 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15103,G__15104,G__15105,G__15106,G__15107,G__15108) : target_fn.call(null,G__15103,G__15104,G__15105,G__15106,G__15107,G__15108));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15109 = a;
var G__15110 = b;
var G__15111 = c;
var G__15112 = d;
var G__15113 = e;
var G__15114 = f;
var G__15115 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15109,G__15110,G__15111,G__15112,G__15113,G__15114,G__15115) : self__.dispatch_fn.call(null,G__15109,G__15110,G__15111,G__15112,G__15113,G__15114,G__15115));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15116 = a;
var G__15117 = b;
var G__15118 = c;
var G__15119 = d;
var G__15120 = e;
var G__15121 = f;
var G__15122 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15116,G__15117,G__15118,G__15119,G__15120,G__15121,G__15122) : target_fn.call(null,G__15116,G__15117,G__15118,G__15119,G__15120,G__15121,G__15122));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15123 = a;
var G__15124 = b;
var G__15125 = c;
var G__15126 = d;
var G__15127 = e;
var G__15128 = f;
var G__15129 = g;
var G__15130 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15123,G__15124,G__15125,G__15126,G__15127,G__15128,G__15129,G__15130) : self__.dispatch_fn.call(null,G__15123,G__15124,G__15125,G__15126,G__15127,G__15128,G__15129,G__15130));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15131 = a;
var G__15132 = b;
var G__15133 = c;
var G__15134 = d;
var G__15135 = e;
var G__15136 = f;
var G__15137 = g;
var G__15138 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15131,G__15132,G__15133,G__15134,G__15135,G__15136,G__15137,G__15138) : target_fn.call(null,G__15131,G__15132,G__15133,G__15134,G__15135,G__15136,G__15137,G__15138));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15139 = a;
var G__15140 = b;
var G__15141 = c;
var G__15142 = d;
var G__15143 = e;
var G__15144 = f;
var G__15145 = g;
var G__15146 = h;
var G__15147 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15139,G__15140,G__15141,G__15142,G__15143,G__15144,G__15145,G__15146,G__15147) : self__.dispatch_fn.call(null,G__15139,G__15140,G__15141,G__15142,G__15143,G__15144,G__15145,G__15146,G__15147));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15148 = a;
var G__15149 = b;
var G__15150 = c;
var G__15151 = d;
var G__15152 = e;
var G__15153 = f;
var G__15154 = g;
var G__15155 = h;
var G__15156 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15148,G__15149,G__15150,G__15151,G__15152,G__15153,G__15154,G__15155,G__15156) : target_fn.call(null,G__15148,G__15149,G__15150,G__15151,G__15152,G__15153,G__15154,G__15155,G__15156));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15157 = a;
var G__15158 = b;
var G__15159 = c;
var G__15160 = d;
var G__15161 = e;
var G__15162 = f;
var G__15163 = g;
var G__15164 = h;
var G__15165 = i;
var G__15166 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15157,G__15158,G__15159,G__15160,G__15161,G__15162,G__15163,G__15164,G__15165,G__15166) : self__.dispatch_fn.call(null,G__15157,G__15158,G__15159,G__15160,G__15161,G__15162,G__15163,G__15164,G__15165,G__15166));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15167 = a;
var G__15168 = b;
var G__15169 = c;
var G__15170 = d;
var G__15171 = e;
var G__15172 = f;
var G__15173 = g;
var G__15174 = h;
var G__15175 = i;
var G__15176 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15167,G__15168,G__15169,G__15170,G__15171,G__15172,G__15173,G__15174,G__15175,G__15176) : target_fn.call(null,G__15167,G__15168,G__15169,G__15170,G__15171,G__15172,G__15173,G__15174,G__15175,G__15176));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15177 = a;
var G__15178 = b;
var G__15179 = c;
var G__15180 = d;
var G__15181 = e;
var G__15182 = f;
var G__15183 = g;
var G__15184 = h;
var G__15185 = i;
var G__15186 = j;
var G__15187 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15177,G__15178,G__15179,G__15180,G__15181,G__15182,G__15183,G__15184,G__15185,G__15186,G__15187) : self__.dispatch_fn.call(null,G__15177,G__15178,G__15179,G__15180,G__15181,G__15182,G__15183,G__15184,G__15185,G__15186,G__15187));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15188 = a;
var G__15189 = b;
var G__15190 = c;
var G__15191 = d;
var G__15192 = e;
var G__15193 = f;
var G__15194 = g;
var G__15195 = h;
var G__15196 = i;
var G__15197 = j;
var G__15198 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15188,G__15189,G__15190,G__15191,G__15192,G__15193,G__15194,G__15195,G__15196,G__15197,G__15198) : target_fn.call(null,G__15188,G__15189,G__15190,G__15191,G__15192,G__15193,G__15194,G__15195,G__15196,G__15197,G__15198));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15199 = a;
var G__15200 = b;
var G__15201 = c;
var G__15202 = d;
var G__15203 = e;
var G__15204 = f;
var G__15205 = g;
var G__15206 = h;
var G__15207 = i;
var G__15208 = j;
var G__15209 = k;
var G__15210 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15199,G__15200,G__15201,G__15202,G__15203,G__15204,G__15205,G__15206,G__15207,G__15208,G__15209,G__15210) : self__.dispatch_fn.call(null,G__15199,G__15200,G__15201,G__15202,G__15203,G__15204,G__15205,G__15206,G__15207,G__15208,G__15209,G__15210));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15211 = a;
var G__15212 = b;
var G__15213 = c;
var G__15214 = d;
var G__15215 = e;
var G__15216 = f;
var G__15217 = g;
var G__15218 = h;
var G__15219 = i;
var G__15220 = j;
var G__15221 = k;
var G__15222 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15211,G__15212,G__15213,G__15214,G__15215,G__15216,G__15217,G__15218,G__15219,G__15220,G__15221,G__15222) : target_fn.call(null,G__15211,G__15212,G__15213,G__15214,G__15215,G__15216,G__15217,G__15218,G__15219,G__15220,G__15221,G__15222));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15223 = a;
var G__15224 = b;
var G__15225 = c;
var G__15226 = d;
var G__15227 = e;
var G__15228 = f;
var G__15229 = g;
var G__15230 = h;
var G__15231 = i;
var G__15232 = j;
var G__15233 = k;
var G__15234 = l;
var G__15235 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15223,G__15224,G__15225,G__15226,G__15227,G__15228,G__15229,G__15230,G__15231,G__15232,G__15233,G__15234,G__15235) : self__.dispatch_fn.call(null,G__15223,G__15224,G__15225,G__15226,G__15227,G__15228,G__15229,G__15230,G__15231,G__15232,G__15233,G__15234,G__15235));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15236 = a;
var G__15237 = b;
var G__15238 = c;
var G__15239 = d;
var G__15240 = e;
var G__15241 = f;
var G__15242 = g;
var G__15243 = h;
var G__15244 = i;
var G__15245 = j;
var G__15246 = k;
var G__15247 = l;
var G__15248 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15236,G__15237,G__15238,G__15239,G__15240,G__15241,G__15242,G__15243,G__15244,G__15245,G__15246,G__15247,G__15248) : target_fn.call(null,G__15236,G__15237,G__15238,G__15239,G__15240,G__15241,G__15242,G__15243,G__15244,G__15245,G__15246,G__15247,G__15248));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15249 = a;
var G__15250 = b;
var G__15251 = c;
var G__15252 = d;
var G__15253 = e;
var G__15254 = f;
var G__15255 = g;
var G__15256 = h;
var G__15257 = i;
var G__15258 = j;
var G__15259 = k;
var G__15260 = l;
var G__15261 = m;
var G__15262 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15249,G__15250,G__15251,G__15252,G__15253,G__15254,G__15255,G__15256,G__15257,G__15258,G__15259,G__15260,G__15261,G__15262) : self__.dispatch_fn.call(null,G__15249,G__15250,G__15251,G__15252,G__15253,G__15254,G__15255,G__15256,G__15257,G__15258,G__15259,G__15260,G__15261,G__15262));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15263 = a;
var G__15264 = b;
var G__15265 = c;
var G__15266 = d;
var G__15267 = e;
var G__15268 = f;
var G__15269 = g;
var G__15270 = h;
var G__15271 = i;
var G__15272 = j;
var G__15273 = k;
var G__15274 = l;
var G__15275 = m;
var G__15276 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15263,G__15264,G__15265,G__15266,G__15267,G__15268,G__15269,G__15270,G__15271,G__15272,G__15273,G__15274,G__15275,G__15276) : target_fn.call(null,G__15263,G__15264,G__15265,G__15266,G__15267,G__15268,G__15269,G__15270,G__15271,G__15272,G__15273,G__15274,G__15275,G__15276));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15277 = a;
var G__15278 = b;
var G__15279 = c;
var G__15280 = d;
var G__15281 = e;
var G__15282 = f;
var G__15283 = g;
var G__15284 = h;
var G__15285 = i;
var G__15286 = j;
var G__15287 = k;
var G__15288 = l;
var G__15289 = m;
var G__15290 = n;
var G__15291 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15277,G__15278,G__15279,G__15280,G__15281,G__15282,G__15283,G__15284,G__15285,G__15286,G__15287,G__15288,G__15289,G__15290,G__15291) : self__.dispatch_fn.call(null,G__15277,G__15278,G__15279,G__15280,G__15281,G__15282,G__15283,G__15284,G__15285,G__15286,G__15287,G__15288,G__15289,G__15290,G__15291));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15292 = a;
var G__15293 = b;
var G__15294 = c;
var G__15295 = d;
var G__15296 = e;
var G__15297 = f;
var G__15298 = g;
var G__15299 = h;
var G__15300 = i;
var G__15301 = j;
var G__15302 = k;
var G__15303 = l;
var G__15304 = m;
var G__15305 = n;
var G__15306 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15292,G__15293,G__15294,G__15295,G__15296,G__15297,G__15298,G__15299,G__15300,G__15301,G__15302,G__15303,G__15304,G__15305,G__15306) : target_fn.call(null,G__15292,G__15293,G__15294,G__15295,G__15296,G__15297,G__15298,G__15299,G__15300,G__15301,G__15302,G__15303,G__15304,G__15305,G__15306));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15307 = a;
var G__15308 = b;
var G__15309 = c;
var G__15310 = d;
var G__15311 = e;
var G__15312 = f;
var G__15313 = g;
var G__15314 = h;
var G__15315 = i;
var G__15316 = j;
var G__15317 = k;
var G__15318 = l;
var G__15319 = m;
var G__15320 = n;
var G__15321 = o;
var G__15322 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15307,G__15308,G__15309,G__15310,G__15311,G__15312,G__15313,G__15314,G__15315,G__15316,G__15317,G__15318,G__15319,G__15320,G__15321,G__15322) : self__.dispatch_fn.call(null,G__15307,G__15308,G__15309,G__15310,G__15311,G__15312,G__15313,G__15314,G__15315,G__15316,G__15317,G__15318,G__15319,G__15320,G__15321,G__15322));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15323 = a;
var G__15324 = b;
var G__15325 = c;
var G__15326 = d;
var G__15327 = e;
var G__15328 = f;
var G__15329 = g;
var G__15330 = h;
var G__15331 = i;
var G__15332 = j;
var G__15333 = k;
var G__15334 = l;
var G__15335 = m;
var G__15336 = n;
var G__15337 = o;
var G__15338 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15323,G__15324,G__15325,G__15326,G__15327,G__15328,G__15329,G__15330,G__15331,G__15332,G__15333,G__15334,G__15335,G__15336,G__15337,G__15338) : target_fn.call(null,G__15323,G__15324,G__15325,G__15326,G__15327,G__15328,G__15329,G__15330,G__15331,G__15332,G__15333,G__15334,G__15335,G__15336,G__15337,G__15338));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15339 = a;
var G__15340 = b;
var G__15341 = c;
var G__15342 = d;
var G__15343 = e;
var G__15344 = f;
var G__15345 = g;
var G__15346 = h;
var G__15347 = i;
var G__15348 = j;
var G__15349 = k;
var G__15350 = l;
var G__15351 = m;
var G__15352 = n;
var G__15353 = o;
var G__15354 = p;
var G__15355 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15339,G__15340,G__15341,G__15342,G__15343,G__15344,G__15345,G__15346,G__15347,G__15348,G__15349,G__15350,G__15351,G__15352,G__15353,G__15354,G__15355) : self__.dispatch_fn.call(null,G__15339,G__15340,G__15341,G__15342,G__15343,G__15344,G__15345,G__15346,G__15347,G__15348,G__15349,G__15350,G__15351,G__15352,G__15353,G__15354,G__15355));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15356 = a;
var G__15357 = b;
var G__15358 = c;
var G__15359 = d;
var G__15360 = e;
var G__15361 = f;
var G__15362 = g;
var G__15363 = h;
var G__15364 = i;
var G__15365 = j;
var G__15366 = k;
var G__15367 = l;
var G__15368 = m;
var G__15369 = n;
var G__15370 = o;
var G__15371 = p;
var G__15372 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15356,G__15357,G__15358,G__15359,G__15360,G__15361,G__15362,G__15363,G__15364,G__15365,G__15366,G__15367,G__15368,G__15369,G__15370,G__15371,G__15372) : target_fn.call(null,G__15356,G__15357,G__15358,G__15359,G__15360,G__15361,G__15362,G__15363,G__15364,G__15365,G__15366,G__15367,G__15368,G__15369,G__15370,G__15371,G__15372));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15373 = a;
var G__15374 = b;
var G__15375 = c;
var G__15376 = d;
var G__15377 = e;
var G__15378 = f;
var G__15379 = g;
var G__15380 = h;
var G__15381 = i;
var G__15382 = j;
var G__15383 = k;
var G__15384 = l;
var G__15385 = m;
var G__15386 = n;
var G__15387 = o;
var G__15388 = p;
var G__15389 = q;
var G__15390 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15373,G__15374,G__15375,G__15376,G__15377,G__15378,G__15379,G__15380,G__15381,G__15382,G__15383,G__15384,G__15385,G__15386,G__15387,G__15388,G__15389,G__15390) : self__.dispatch_fn.call(null,G__15373,G__15374,G__15375,G__15376,G__15377,G__15378,G__15379,G__15380,G__15381,G__15382,G__15383,G__15384,G__15385,G__15386,G__15387,G__15388,G__15389,G__15390));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15391 = a;
var G__15392 = b;
var G__15393 = c;
var G__15394 = d;
var G__15395 = e;
var G__15396 = f;
var G__15397 = g;
var G__15398 = h;
var G__15399 = i;
var G__15400 = j;
var G__15401 = k;
var G__15402 = l;
var G__15403 = m;
var G__15404 = n;
var G__15405 = o;
var G__15406 = p;
var G__15407 = q;
var G__15408 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15391,G__15392,G__15393,G__15394,G__15395,G__15396,G__15397,G__15398,G__15399,G__15400,G__15401,G__15402,G__15403,G__15404,G__15405,G__15406,G__15407,G__15408) : target_fn.call(null,G__15391,G__15392,G__15393,G__15394,G__15395,G__15396,G__15397,G__15398,G__15399,G__15400,G__15401,G__15402,G__15403,G__15404,G__15405,G__15406,G__15407,G__15408));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15409 = a;
var G__15410 = b;
var G__15411 = c;
var G__15412 = d;
var G__15413 = e;
var G__15414 = f;
var G__15415 = g;
var G__15416 = h;
var G__15417 = i;
var G__15418 = j;
var G__15419 = k;
var G__15420 = l;
var G__15421 = m;
var G__15422 = n;
var G__15423 = o;
var G__15424 = p;
var G__15425 = q;
var G__15426 = r;
var G__15427 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15409,G__15410,G__15411,G__15412,G__15413,G__15414,G__15415,G__15416,G__15417,G__15418,G__15419,G__15420,G__15421,G__15422,G__15423,G__15424,G__15425,G__15426,G__15427) : self__.dispatch_fn.call(null,G__15409,G__15410,G__15411,G__15412,G__15413,G__15414,G__15415,G__15416,G__15417,G__15418,G__15419,G__15420,G__15421,G__15422,G__15423,G__15424,G__15425,G__15426,G__15427));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15428 = a;
var G__15429 = b;
var G__15430 = c;
var G__15431 = d;
var G__15432 = e;
var G__15433 = f;
var G__15434 = g;
var G__15435 = h;
var G__15436 = i;
var G__15437 = j;
var G__15438 = k;
var G__15439 = l;
var G__15440 = m;
var G__15441 = n;
var G__15442 = o;
var G__15443 = p;
var G__15444 = q;
var G__15445 = r;
var G__15446 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15428,G__15429,G__15430,G__15431,G__15432,G__15433,G__15434,G__15435,G__15436,G__15437,G__15438,G__15439,G__15440,G__15441,G__15442,G__15443,G__15444,G__15445,G__15446) : target_fn.call(null,G__15428,G__15429,G__15430,G__15431,G__15432,G__15433,G__15434,G__15435,G__15436,G__15437,G__15438,G__15439,G__15440,G__15441,G__15442,G__15443,G__15444,G__15445,G__15446));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15447 = a;
var G__15448 = b;
var G__15449 = c;
var G__15450 = d;
var G__15451 = e;
var G__15452 = f;
var G__15453 = g;
var G__15454 = h;
var G__15455 = i;
var G__15456 = j;
var G__15457 = k;
var G__15458 = l;
var G__15459 = m;
var G__15460 = n;
var G__15461 = o;
var G__15462 = p;
var G__15463 = q;
var G__15464 = r;
var G__15465 = s;
var G__15466 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15447,G__15448,G__15449,G__15450,G__15451,G__15452,G__15453,G__15454,G__15455,G__15456,G__15457,G__15458,G__15459,G__15460,G__15461,G__15462,G__15463,G__15464,G__15465,G__15466) : self__.dispatch_fn.call(null,G__15447,G__15448,G__15449,G__15450,G__15451,G__15452,G__15453,G__15454,G__15455,G__15456,G__15457,G__15458,G__15459,G__15460,G__15461,G__15462,G__15463,G__15464,G__15465,G__15466));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15467 = a;
var G__15468 = b;
var G__15469 = c;
var G__15470 = d;
var G__15471 = e;
var G__15472 = f;
var G__15473 = g;
var G__15474 = h;
var G__15475 = i;
var G__15476 = j;
var G__15477 = k;
var G__15478 = l;
var G__15479 = m;
var G__15480 = n;
var G__15481 = o;
var G__15482 = p;
var G__15483 = q;
var G__15484 = r;
var G__15485 = s;
var G__15486 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15467,G__15468,G__15469,G__15470,G__15471,G__15472,G__15473,G__15474,G__15475,G__15476,G__15477,G__15478,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484,G__15485,G__15486) : target_fn.call(null,G__15467,G__15468,G__15469,G__15470,G__15471,G__15472,G__15473,G__15474,G__15475,G__15476,G__15477,G__15478,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484,G__15485,G__15486));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__15488 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__15488);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__8244__auto__,writer__8245__auto__,opt__8246__auto__){
return cljs.core._write(writer__8245__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__15493 = msg;
return Error(G__15493);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__15498 = x;
var G__15499 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__15498,G__15499) : pred.call(null,G__15498,G__15499));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__15500 = y;
var G__15501 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__15500,G__15501) : pred.call(null,G__15500,G__15501));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
